{"id":"dlp\/v2\/charactermaskconfig","type":"","title":"Google\\Cloud\\Dlp\\V2\\CharacterMaskConfig","name":"CharacterMaskConfig","description":"<p>Partially mask a string by replacing a given number of characters with a\nfixed character. Masking can start from the beginning or end of the string.<\/p>\n<p>This can be used on data of any type (numbers, longs, and so on) and when\nde-identifying structured data we'll attempt to preserve the original data's\ntype. (This allows you to take a long like 123 and modify it to a string like\n**3.<\/p>\n<p>Generated from protobuf message <code>google.privacy.dlp.v2.CharacterMaskConfig<\/code><\/p>\n<p>Extends <a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/Message.php\" target=\"_blank\">Google\\Protobuf\\Internal\\Message<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Dlp\/src\/V2\/CharacterMaskConfig.php#L110","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"data","description":"<p>Optional. Data for populating the Message object.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"data.masking_character\n","description":"<p>Character to use to mask the sensitive values&mdash;for example, <code>*<\/code> for an alphabetic string such as a name, or <code>0<\/code> for a numeric string such as ZIP code or credit card number. This string must have a length of 1. If not supplied, this value defaults to <code>*<\/code> for strings, and <code>0<\/code> for digits.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"data.number_to_mask\n","description":"<p>Number of characters to mask. If not set, all matching chars will be masked. Skipped characters do not count towards this tally. If <code>number_to_mask<\/code> is negative, this denotes inverse masking. Cloud DLP masks all but a number of characters. For example, suppose you have the following values: - <code>masking_character<\/code> is <code>*<\/code> - <code>number_to_mask<\/code> is <code>-4<\/code> - <code>reverse_order<\/code> is <code>false<\/code> - <code>CharsToIgnore<\/code> includes <code>-<\/code> - Input string is <code>1234-5678-9012-3456<\/code> The resulting de-identified string is <code>****-****-****-3456<\/code>. Cloud DLP masks all but the last four characters. If <code>reverse_order<\/code> is <code>true<\/code>, all but the first four characters are masked as <code>1234-****-****-****<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"data.reverse_order\n","description":"<p>Mask characters in reverse order. For example, if <code>masking_character<\/code> is <code>0<\/code>, <code>number_to_mask<\/code> is <code>14<\/code>, and <code>reverse_order<\/code> is <code>false<\/code>, then the input string <code>1234-5678-9012-3456<\/code> is masked as <code>00000000000000-3456<\/code>. If <code>masking_character<\/code> is <code>*<\/code>, <code>number_to_mask<\/code> is <code>3<\/code>, and <code>reverse_order<\/code> is <code>true<\/code>, then the string <code>12345<\/code> is masked as <code>12***<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"data.characters_to_ignore\n","description":"<p>When masking a string, items in this list will be skipped when replacing characters. For example, if the input string is <code>555-555-5555<\/code> and you instruct Cloud DLP to skip <code>-<\/code> and mask 5 characters with <code>*<\/code>, Cloud DLP returns <code>***-**5-5555<\/code>.<\/p>","types":["<a data-custom-type=\"cloud-dlp\/main\/dlp\/v2\/charstoignore\">Google\\Cloud\\Dlp\\V2\\CharsToIgnore[]<\/a>","<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/RepeatedField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\RepeatedField<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"getMaskingCharacter","type":"instance","name":"getMaskingCharacter","source":"Dlp\/src\/V2\/CharacterMaskConfig.php#L124","description":"<p>Character to use to mask the sensitive values&mdash;for example, <code>*<\/code> for an\nalphabetic string such as a name, or <code>0<\/code> for a numeric string such as ZIP\ncode or credit card number. This string must have a length of 1. If not\nsupplied, this value defaults to <code>*<\/code> for strings, and <code>0<\/code> for digits.<\/p>\n<p>Generated from protobuf field <code>string masking_character = 1;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setMaskingCharacter","type":"instance","name":"setMaskingCharacter","source":"Dlp\/src\/V2\/CharacterMaskConfig.php#L139","description":"<p>Character to use to mask the sensitive values&mdash;for example, <code>*<\/code> for an\nalphabetic string such as a name, or <code>0<\/code> for a numeric string such as ZIP\ncode or credit card number. This string must have a length of 1. If not\nsupplied, this value defaults to <code>*<\/code> for strings, and <code>0<\/code> for digits.<\/p>\n<p>Generated from protobuf field <code>string masking_character = 1;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Character to use to mask the sensitive values&mdash;for example, <code>*<\/code> for an\nalphabetic string such as a name, or <code>0<\/code> for a numeric string such as ZIP\ncode or credit card number. This string must have a length of 1. If not\nsupplied, this value defaults to <code>*<\/code> for strings, and <code>0<\/code> for digits.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-dlp\/main\/dlp\/v2\/charactermaskconfig\">Google\\Cloud\\Dlp\\V2\\CharacterMaskConfig<\/a>"],"description":""}]},{"id":"getNumberToMask","type":"instance","name":"getNumberToMask","source":"Dlp\/src\/V2\/CharacterMaskConfig.php#L166","description":"<p>Number of characters to mask. If not set, all matching chars will be\nmasked. Skipped characters do not count towards this tally.<\/p>\n<p>If <code>number_to_mask<\/code> is negative, this denotes inverse masking. Cloud DLP\nmasks all but a number of characters.\nFor example, suppose you have the following values:<\/p>\n<ul>\n<li><code>masking_character<\/code> is <code>*<\/code><\/li>\n<li><code>number_to_mask<\/code> is <code>-4<\/code><\/li>\n<li><code>reverse_order<\/code> is <code>false<\/code><\/li>\n<li><code>CharsToIgnore<\/code> includes <code>-<\/code><\/li>\n<li>Input string is <code>1234-5678-9012-3456<\/code>\nThe resulting de-identified string is\n<code>****-****-****-3456<\/code>. Cloud DLP masks all but the last four characters.\nIf <code>reverse_order<\/code> is <code>true<\/code>, all but the first four characters are masked\nas <code>1234-****-****-****<\/code>.<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>int32 number_to_mask = 2;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"description":""}]},{"id":"setNumberToMask","type":"instance","name":"setNumberToMask","source":"Dlp\/src\/V2\/CharacterMaskConfig.php#L191","description":"<p>Number of characters to mask. If not set, all matching chars will be\nmasked. Skipped characters do not count towards this tally.<\/p>\n<p>If <code>number_to_mask<\/code> is negative, this denotes inverse masking. Cloud DLP\nmasks all but a number of characters.\nFor example, suppose you have the following values:<\/p>\n<ul>\n<li><code>masking_character<\/code> is <code>*<\/code><\/li>\n<li><code>number_to_mask<\/code> is <code>-4<\/code><\/li>\n<li><code>reverse_order<\/code> is <code>false<\/code><\/li>\n<li><code>CharsToIgnore<\/code> includes <code>-<\/code><\/li>\n<li>Input string is <code>1234-5678-9012-3456<\/code>\nThe resulting de-identified string is\n<code>****-****-****-3456<\/code>. Cloud DLP masks all but the last four characters.\nIf <code>reverse_order<\/code> is <code>true<\/code>, all but the first four characters are masked\nas <code>1234-****-****-****<\/code>.<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>int32 number_to_mask = 2;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Number of characters to mask. If not set, all matching chars will be\nmasked. Skipped characters do not count towards this tally.<\/p>\n<p>If <code>number_to_mask<\/code> is negative, this denotes inverse masking. Cloud DLP\nmasks all but a number of characters.\nFor example, suppose you have the following values:<\/p>\n<ul>\n<li><code>masking_character<\/code> is <code>*<\/code><\/li>\n<li><code>number_to_mask<\/code> is <code>-4<\/code><\/li>\n<li><code>reverse_order<\/code> is <code>false<\/code><\/li>\n<li><code>CharsToIgnore<\/code> includes <code>-<\/code><\/li>\n<li>Input string is <code>1234-5678-9012-3456<\/code>\nThe resulting de-identified string is\n<code>****-****-****-3456<\/code>. Cloud DLP masks all but the last four characters.\nIf <code>reverse_order<\/code> is <code>true<\/code>, all but the first four characters are masked\nas <code>1234-****-****-****<\/code>.<\/li>\n<\/ul>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-dlp\/main\/dlp\/v2\/charactermaskconfig\">Google\\Cloud\\Dlp\\V2\\CharacterMaskConfig<\/a>"],"description":""}]},{"id":"getReverseOrder","type":"instance","name":"getReverseOrder","source":"Dlp\/src\/V2\/CharacterMaskConfig.php#L209","description":"<p>Mask characters in reverse order. For example, if <code>masking_character<\/code> is\n<code>0<\/code>, <code>number_to_mask<\/code> is <code>14<\/code>, and <code>reverse_order<\/code> is <code>false<\/code>, then the\ninput string <code>1234-5678-9012-3456<\/code> is masked as <code>00000000000000-3456<\/code>.<\/p>\n<p>If <code>masking_character<\/code> is <code>*<\/code>, <code>number_to_mask<\/code> is <code>3<\/code>, and <code>reverse_order<\/code>\nis <code>true<\/code>, then the string <code>12345<\/code> is masked as <code>12***<\/code>.<\/p>\n<p>Generated from protobuf field <code>bool reverse_order = 3;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"setReverseOrder","type":"instance","name":"setReverseOrder","source":"Dlp\/src\/V2\/CharacterMaskConfig.php#L225","description":"<p>Mask characters in reverse order. For example, if <code>masking_character<\/code> is\n<code>0<\/code>, <code>number_to_mask<\/code> is <code>14<\/code>, and <code>reverse_order<\/code> is <code>false<\/code>, then the\ninput string <code>1234-5678-9012-3456<\/code> is masked as <code>00000000000000-3456<\/code>.<\/p>\n<p>If <code>masking_character<\/code> is <code>*<\/code>, <code>number_to_mask<\/code> is <code>3<\/code>, and <code>reverse_order<\/code>\nis <code>true<\/code>, then the string <code>12345<\/code> is masked as <code>12***<\/code>.<\/p>\n<p>Generated from protobuf field <code>bool reverse_order = 3;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Mask characters in reverse order. For example, if <code>masking_character<\/code> is\n<code>0<\/code>, <code>number_to_mask<\/code> is <code>14<\/code>, and <code>reverse_order<\/code> is <code>false<\/code>, then the\ninput string <code>1234-5678-9012-3456<\/code> is masked as <code>00000000000000-3456<\/code>.<\/p>\n<p>If <code>masking_character<\/code> is <code>*<\/code>, <code>number_to_mask<\/code> is <code>3<\/code>, and <code>reverse_order<\/code>\nis <code>true<\/code>, then the string <code>12345<\/code> is masked as <code>12***<\/code>.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-dlp\/main\/dlp\/v2\/charactermaskconfig\">Google\\Cloud\\Dlp\\V2\\CharacterMaskConfig<\/a>"],"description":""}]},{"id":"getCharactersToIgnore","type":"instance","name":"getCharactersToIgnore","source":"Dlp\/src\/V2\/CharacterMaskConfig.php#L242","description":"<p>When masking a string, items in this list will be skipped when replacing\ncharacters. For example, if the input string is <code>555-555-5555<\/code> and you\ninstruct Cloud DLP to skip <code>-<\/code> and mask 5 characters with <code>*<\/code>, Cloud DLP\nreturns <code>***-**5-5555<\/code>.<\/p>\n<p>Generated from protobuf field <code>repeated .google.privacy.dlp.v2.CharsToIgnore characters_to_ignore = 4;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/RepeatedField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\RepeatedField<\/a>"],"description":""}]},{"id":"setCharactersToIgnore","type":"instance","name":"setCharactersToIgnore","source":"Dlp\/src\/V2\/CharacterMaskConfig.php#L257","description":"<p>When masking a string, items in this list will be skipped when replacing\ncharacters. For example, if the input string is <code>555-555-5555<\/code> and you\ninstruct Cloud DLP to skip <code>-<\/code> and mask 5 characters with <code>*<\/code>, Cloud DLP\nreturns <code>***-**5-5555<\/code>.<\/p>\n<p>Generated from protobuf field <code>repeated .google.privacy.dlp.v2.CharsToIgnore characters_to_ignore = 4;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>When masking a string, items in this list will be skipped when replacing\ncharacters. For example, if the input string is <code>555-555-5555<\/code> and you\ninstruct Cloud DLP to skip <code>-<\/code> and mask 5 characters with <code>*<\/code>, Cloud DLP\nreturns <code>***-**5-5555<\/code>.<\/p>\n","types":["<a data-custom-type=\"cloud-dlp\/main\/dlp\/v2\/charstoignore\">Google\\Cloud\\Dlp\\V2\\CharsToIgnore[]<\/a>","<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/RepeatedField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\RepeatedField<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-dlp\/main\/dlp\/v2\/charactermaskconfig\">Google\\Cloud\\Dlp\\V2\\CharacterMaskConfig<\/a>"],"description":""}]}]}