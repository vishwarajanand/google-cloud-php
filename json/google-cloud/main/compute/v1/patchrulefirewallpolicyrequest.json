{"id":"compute\/v1\/patchrulefirewallpolicyrequest","type":"","title":"Google\\Cloud\\Compute\\V1\\PatchRuleFirewallPolicyRequest","name":"PatchRuleFirewallPolicyRequest","description":"<p>A request message for FirewallPolicies.PatchRule. See the method description for details.<\/p>\n<p>Generated from protobuf message <code>google.cloud.compute.v1.PatchRuleFirewallPolicyRequest<\/code><\/p>\n<p>Extends <a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/Message.php\" target=\"_blank\">Google\\Protobuf\\Internal\\Message<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Compute\/src\/V1\/PatchRuleFirewallPolicyRequest.php#L59","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"data","description":"<p>Optional. Data for populating the Message object.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"data.firewall_policy\n","description":"<p>Name of the firewall policy to update.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"data.firewall_policy_rule_resource\n","description":"<p>The body resource for this request<\/p>","types":["<a data-custom-type=\"compute\/v1\/firewallpolicyrule\">Google\\Cloud\\Compute\\V1\\FirewallPolicyRule<\/a>"],"optional":null,"nullable":null},{"name":"data.priority\n","description":"<p>The priority of the rule to patch.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"data.request_id\n","description":"<p>An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"getFirewallPolicy","type":"instance","name":"getFirewallPolicy","source":"Compute\/src\/V1\/PatchRuleFirewallPolicyRequest.php#L70","description":"<p>Name of the firewall policy to update.<\/p>\n<p>Generated from protobuf field <code>string firewall_policy = 498173265 [(.google.api.field_behavior) = REQUIRED];<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setFirewallPolicy","type":"instance","name":"setFirewallPolicy","source":"Compute\/src\/V1\/PatchRuleFirewallPolicyRequest.php#L82","description":"<p>Name of the firewall policy to update.<\/p>\n<p>Generated from protobuf field <code>string firewall_policy = 498173265 [(.google.api.field_behavior) = REQUIRED];<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Name of the firewall policy to update.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"compute\/v1\/patchrulefirewallpolicyrequest\">Google\\Cloud\\Compute\\V1\\PatchRuleFirewallPolicyRequest<\/a>"],"description":""}]},{"id":"getFirewallPolicyRuleResource","type":"instance","name":"getFirewallPolicyRuleResource","source":"Compute\/src\/V1\/PatchRuleFirewallPolicyRequest.php#L96","description":"<p>The body resource for this request<\/p>\n<p>Generated from protobuf field <code>.google.cloud.compute.v1.FirewallPolicyRule firewall_policy_rule_resource = 250523523 [(.google.api.field_behavior) = REQUIRED];<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"compute\/v1\/firewallpolicyrule\">Google\\Cloud\\Compute\\V1\\FirewallPolicyRule<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"setFirewallPolicyRuleResource","type":"instance","name":"setFirewallPolicyRuleResource","source":"Compute\/src\/V1\/PatchRuleFirewallPolicyRequest.php#L118","description":"<p>The body resource for this request<\/p>\n<p>Generated from protobuf field <code>.google.cloud.compute.v1.FirewallPolicyRule firewall_policy_rule_resource = 250523523 [(.google.api.field_behavior) = REQUIRED];<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The body resource for this request<\/p>\n","types":["<a data-custom-type=\"compute\/v1\/firewallpolicyrule\">Google\\Cloud\\Compute\\V1\\FirewallPolicyRule<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"compute\/v1\/patchrulefirewallpolicyrequest\">Google\\Cloud\\Compute\\V1\\PatchRuleFirewallPolicyRequest<\/a>"],"description":""}]},{"id":"getPriority","type":"instance","name":"getPriority","source":"Compute\/src\/V1\/PatchRuleFirewallPolicyRequest.php#L132","description":"<p>The priority of the rule to patch.<\/p>\n<p>Generated from protobuf field <code>optional int32 priority = 445151652;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"description":""}]},{"id":"setPriority","type":"instance","name":"setPriority","source":"Compute\/src\/V1\/PatchRuleFirewallPolicyRequest.php#L154","description":"<p>The priority of the rule to patch.<\/p>\n<p>Generated from protobuf field <code>optional int32 priority = 445151652;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The priority of the rule to patch.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"compute\/v1\/patchrulefirewallpolicyrequest\">Google\\Cloud\\Compute\\V1\\PatchRuleFirewallPolicyRequest<\/a>"],"description":""}]},{"id":"getRequestId","type":"instance","name":"getRequestId","source":"Compute\/src\/V1\/PatchRuleFirewallPolicyRequest.php#L168","description":"<p>An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).<\/p>\n<p>Generated from protobuf field <code>optional string request_id = 37109963;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setRequestId","type":"instance","name":"setRequestId","source":"Compute\/src\/V1\/PatchRuleFirewallPolicyRequest.php#L190","description":"<p>An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).<\/p>\n<p>Generated from protobuf field <code>optional string request_id = 37109963;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"compute\/v1\/patchrulefirewallpolicyrequest\">Google\\Cloud\\Compute\\V1\\PatchRuleFirewallPolicyRequest<\/a>"],"description":""}]}]}