{"id":"grafeas\/v1\/signature","type":"","title":"Grafeas\\V1\\Signature","name":"Signature","description":"<p>Verifiers (e.g. Kritis implementations) MUST verify signatures\nwith respect to the trust anchors defined in policy (e.g. a Kritis policy).<\/p>\n<p>Typically this means that the verifier has been configured with a map from\n<code>public_key_id<\/code> to public key material (and any required parameters, e.g.\nsigning algorithm).\nIn particular, verification implementations MUST NOT treat the signature\n<code>public_key_id<\/code> as anything more than a key lookup hint. The <code>public_key_id<\/code>\nDOES NOT validate or authenticate a public key; it only provides a mechanism\nfor quickly selecting a public key ALREADY CONFIGURED on the verifier through\na trusted channel. Verification implementations MUST reject signatures in any\nof the following circumstances:<\/p>\n<ul>\n<li>The <code>public_key_id<\/code> is not recognized by the verifier.<\/li>\n<li>The public key that <code>public_key_id<\/code> refers to does not verify the\nsignature with respect to the payload.\nThe <code>signature<\/code> contents SHOULD NOT be &quot;attached&quot; (where the payload is\nincluded with the serialized <code>signature<\/code> bytes). Verifiers MUST ignore any\n&quot;attached&quot; payload and only verify signatures with respect to explicitly\nprovided payload (e.g. a <code>payload<\/code> field on the proto message that holds\nthis Signature, or the canonical serialization of the proto message that\nholds this signature).<\/li>\n<\/ul>\n<p>Generated from protobuf message <code>grafeas.v1.Signature<\/code><\/p>\n<p>Extends <a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/Message.php\" target=\"_blank\">Google\\Protobuf\\Internal\\Message<\/a><\/p>","examples":[],"resources":[],"methods":[]}