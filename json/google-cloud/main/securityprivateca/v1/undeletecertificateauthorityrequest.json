{"id":"securityprivateca\/v1\/undeletecertificateauthorityrequest","type":"","title":"Google\\Cloud\\Security\\PrivateCA\\V1\\UndeleteCertificateAuthorityRequest","name":"UndeleteCertificateAuthorityRequest","description":"<p>Request message for\n[CertificateAuthorityService.UndeleteCertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthorityService.UndeleteCertificateAuthority].<\/p>\n<p>Generated from protobuf message <code>google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest<\/code><\/p>\n<p>Extends <a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/Message.php\" target=\"_blank\">Google\\Protobuf\\Internal\\Message<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"SecurityPrivateCa\/src\/V1\/UndeleteCertificateAuthorityRequest.php#L66","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"data","description":"<p>Optional. Data for populating the Message object.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"data.name\n","description":"<p>Required. The resource name for this [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority] in the format <code>projects\/&amp;#42;&amp;#47;locations\/&amp;#42;&amp;#47;caPools\/&amp;#42;&amp;#47;certificateAuthorities\/&amp;#42;<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"data.request_id\n","description":"<p>Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"getName","type":"instance","name":"getName","source":"SecurityPrivateCa\/src\/V1\/UndeleteCertificateAuthorityRequest.php#L78","description":"<p>Required. The resource name for this [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority] in the\nformat <code>projects\/&amp;#42;&amp;#47;locations\/&amp;#42;&amp;#47;caPools\/&amp;#42;&amp;#47;certificateAuthorities\/&amp;#42;<\/code>.<\/p>\n<p>Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setName","type":"instance","name":"setName","source":"SecurityPrivateCa\/src\/V1\/UndeleteCertificateAuthorityRequest.php#L91","description":"<p>Required. The resource name for this [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority] in the\nformat <code>projects\/&amp;#42;&amp;#47;locations\/&amp;#42;&amp;#47;caPools\/&amp;#42;&amp;#47;certificateAuthorities\/&amp;#42;<\/code>.<\/p>\n<p>Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Required. The resource name for this [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority] in the\nformat <code>projects\/&amp;#42;&amp;#47;locations\/&amp;#42;&amp;#47;caPools\/&amp;#42;&amp;#47;certificateAuthorities\/&amp;#42;<\/code>.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"securityprivateca\/v1\/undeletecertificateauthorityrequest\">Google\\Cloud\\Security\\PrivateCA\\V1\\UndeleteCertificateAuthorityRequest<\/a>"],"description":""}]},{"id":"getRequestId","type":"instance","name":"getRequestId","source":"SecurityPrivateCa\/src\/V1\/UndeleteCertificateAuthorityRequest.php#L115","description":"<p>Optional. An ID to identify requests. Specify a unique request ID so that if you must\nretry your request, the server will know to ignore the request if it has\nalready been completed. The server will guarantee that for at least 60\nminutes since the first request.<\/p>\n<p>For example, consider a situation where you make an initial request and t\nhe request times out. If you make the request again with the same request\nID, the server can check if original operation with the same request ID\nwas received, and if so, will ignore the second request. This prevents\nclients from accidentally creating duplicate commitments.\nThe request ID must be a valid UUID with the exception that zero UUID is\nnot supported (00000000-0000-0000-0000-000000000000).<\/p>\n<p>Generated from protobuf field <code>string request_id = 2 [(.google.api.field_behavior) = OPTIONAL];<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setRequestId","type":"instance","name":"setRequestId","source":"SecurityPrivateCa\/src\/V1\/UndeleteCertificateAuthorityRequest.php#L137","description":"<p>Optional. An ID to identify requests. Specify a unique request ID so that if you must\nretry your request, the server will know to ignore the request if it has\nalready been completed. The server will guarantee that for at least 60\nminutes since the first request.<\/p>\n<p>For example, consider a situation where you make an initial request and t\nhe request times out. If you make the request again with the same request\nID, the server can check if original operation with the same request ID\nwas received, and if so, will ignore the second request. This prevents\nclients from accidentally creating duplicate commitments.\nThe request ID must be a valid UUID with the exception that zero UUID is\nnot supported (00000000-0000-0000-0000-000000000000).<\/p>\n<p>Generated from protobuf field <code>string request_id = 2 [(.google.api.field_behavior) = OPTIONAL];<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Optional. An ID to identify requests. Specify a unique request ID so that if you must\nretry your request, the server will know to ignore the request if it has\nalready been completed. The server will guarantee that for at least 60\nminutes since the first request.<\/p>\n<p>For example, consider a situation where you make an initial request and t\nhe request times out. If you make the request again with the same request\nID, the server can check if original operation with the same request ID\nwas received, and if so, will ignore the second request. This prevents\nclients from accidentally creating duplicate commitments.\nThe request ID must be a valid UUID with the exception that zero UUID is\nnot supported (00000000-0000-0000-0000-000000000000).<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"securityprivateca\/v1\/undeletecertificateauthorityrequest\">Google\\Cloud\\Security\\PrivateCA\\V1\\UndeleteCertificateAuthorityRequest<\/a>"],"description":""}]}]}