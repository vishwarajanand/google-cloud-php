{"id":"dataprocmetastore\/v1beta\/gapic\/dataprocmetastoregapicclient","type":"","title":"Google\\Cloud\\Metastore\\V1beta\\Gapic\\DataprocMetastoreGapicClient","name":"DataprocMetastoreGapicClient","description":"<p>Service Description: Configures and manages metastore services.<\/p>\n<p>Metastore services are fully managed, highly available, auto-scaled,\nauto-healing, OSS-native deployments of technical metadata management\nsoftware. Each metastore service exposes a network endpoint through which\nmetadata queries are served. Metadata queries can originate from a variety\nof sources, including Apache Hive, Apache Presto, and Apache Spark.<\/p>\n<p>The Dataproc Metastore API defines the following resource model:<\/p>\n<ul>\n<li>The service works with a collection of Google Cloud projects, named:\n<code>\/projects\/*<\/code><\/li>\n<li>Each project has a collection of available locations, named: <code>\/locations\/*<\/code>\n(a location must refer to a Google Cloud <code>region<\/code>)<\/li>\n<li>Each location has a collection of services, named: <code>\/services\/*<\/code><\/li>\n<li>Dataproc Metastore services are resources with names of the form:<\/li>\n<\/ul>\n<p><code>\/projects\/{project_number}\/locations\/{location_id}\/services\/{service_id}<\/code>.<\/p>\n<p>This class provides the ability to make remote calls to the backing service through method\ncalls that map to API methods. Sample code to get started:<\/p>\n<pre><code>$dataprocMetastoreClient = new DataprocMetastoreClient();\ntry {\n    $formattedParent = $dataprocMetastoreClient-&gt;serviceName('[PROJECT]', '[LOCATION]', '[SERVICE]');\n    $backupId = 'backup_id';\n    $backup = new Backup();\n    $operationResponse = $dataprocMetastoreClient-&gt;createBackup($formattedParent, $backupId, $backup);\n    $operationResponse-&gt;pollUntilComplete();\n    if ($operationResponse-&gt;operationSucceeded()) {\n        $result = $operationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $operationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n    \/\/ Alternatively:\n    \/\/ start the operation, keep the operation name, and resume later\n    $operationResponse = $dataprocMetastoreClient-&gt;createBackup($formattedParent, $backupId, $backup);\n    $operationName = $operationResponse-&gt;getName();\n    \/\/ ... do other work\n    $newOperationResponse = $dataprocMetastoreClient-&gt;resumeOperation($operationName, 'createBackup');\n    while (!$newOperationResponse-&gt;isDone()) {\n        \/\/ ... do other work\n        $newOperationResponse-&gt;reload();\n    }\n    if ($newOperationResponse-&gt;operationSucceeded()) {\n        $result = $newOperationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $newOperationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n} finally {\n    $dataprocMetastoreClient-&gt;close();\n}<\/code><\/pre>\n<p>Many parameters require resource names to be formatted in a particular way. To\nassist with these names, this class includes a format method for each type of\nname, and additionally a parseName method to extract the individual identifiers\ncontained within formatted names that are returned by the API.<\/p>","examples":[],"resources":[],"methods":[{"id":"backupName","type":"instance","name":"backupName","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L273","description":"<p>Formats a string containing the fully-qualified path to represent a backup\nresource.<\/p>","examples":[],"resources":[],"params":[{"name":"project","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"location","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"service","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"backup","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":"<p>The formatted backup resource.<\/p>"}]},{"id":"locationName","type":"instance","name":"locationName","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L294","description":"<p>Formats a string containing the fully-qualified path to represent a location\nresource.<\/p>","examples":[],"resources":[],"params":[{"name":"project","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"location","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":"<p>The formatted location resource.<\/p>"}]},{"id":"metadataImportName","type":"instance","name":"metadataImportName","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L315","description":"<p>Formats a string containing the fully-qualified path to represent a\nmetadata_import resource.<\/p>","examples":[],"resources":[],"params":[{"name":"project","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"location","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"service","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"metadataImport","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":"<p>The formatted metadata_import resource.<\/p>"}]},{"id":"networkName","type":"instance","name":"networkName","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L336","description":"<p>Formats a string containing the fully-qualified path to represent a network\nresource.<\/p>","examples":[],"resources":[],"params":[{"name":"project","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"network","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":"<p>The formatted network resource.<\/p>"}]},{"id":"serviceName","type":"instance","name":"serviceName","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L356","description":"<p>Formats a string containing the fully-qualified path to represent a service\nresource.<\/p>","examples":[],"resources":[],"params":[{"name":"project","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"location","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"service","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":"<p>The formatted service resource.<\/p>"}]},{"id":"parseName","type":"instance","name":"parseName","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L390","description":"<p>Parses a formatted name string and returns an associative array of the components in the name.<\/p>\n<p>The following name formats are supported:\nTemplate: Pattern<\/p>\n<ul>\n<li>backup: projects\/{project}\/locations\/{location}\/services\/{service}\/backups\/{backup}<\/li>\n<li>location: projects\/{project}\/locations\/{location}<\/li>\n<li>metadataImport: projects\/{project}\/locations\/{location}\/services\/{service}\/metadataImports\/{metadata_import}<\/li>\n<li>network: projects\/{project}\/global\/networks\/{network}<\/li>\n<li>service: projects\/{project}\/locations\/{location}\/services\/{service}<\/li>\n<\/ul>\n<p>The optional $template argument can be supplied to specify a particular pattern,\nand must match one of the templates listed above. If no $template argument is\nprovided, or if the $template argument does not match one of the templates\nlisted, then parseName will check each of the supported templates, and return\nthe first match.<\/p>","examples":[],"resources":[],"params":[{"name":"formattedName","description":"<p>The formatted name string<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"template","description":"<p>Optional name of template to match<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ValidationException","description":"If $formattedName could not be matched."}],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":"<p>An associative array from name component IDs to component values.<\/p>"}]},{"id":"getOperationsClient","type":"instance","name":"getOperationsClient","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L419","description":"<p>Return an OperationsClient object with the same endpoint as $this.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/LongRunning\/OperationsClient.html\" target=\"_blank\">Google\\ApiCore\\LongRunning\\OperationsClient<\/a>"],"description":""}]},{"id":"resumeOperation","type":"instance","name":"resumeOperation","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L437","description":"<p>Resume an existing long running operation that was previously started by a long\nrunning API method. If $methodName is not provided, or does not match a long\nrunning API method, then the operation can still be resumed, but the\nOperationResponse object will not deserialize the final response.<\/p>","examples":[],"resources":[],"params":[{"name":"operationName","description":"<p>The name of the long running operation<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"methodName","description":"<p>The name of the method used to start the operation<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/OperationResponse.html\" target=\"_blank\">Google\\ApiCore\\OperationResponse<\/a>"],"description":""}]},{"id":"__construct","type":"constructor","name":"__construct","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L504","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"options","description":"<p>Optional. Options for configuring the service API wrapper.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options.serviceAddress\n","description":"<p><strong>Deprecated<\/strong>. This option will be removed in a future major release. Please utilize the <code>$apiEndpoint<\/code> option instead.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.apiEndpoint\n","description":"<p>The address of the API remote host. May optionally include the port, formatted as &quot;<uri>:<port>&quot;. Default 'metastore.googleapis.com:443'.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.credentials\n","description":"<p>The credentials to be used by the client to authorize API calls. This option accepts either a path to a credentials file, or a decoded credentials file as a PHP array. <em>Advanced usage<\/em>: In addition, this option can also accept a pre-constructed <a href=\"https:\/\/github.com\/googleapis\/google-auth-library-php\/tree\/v1.23.1\/src\/FetchAuthTokenInterface.php\" target=\"_blank\">Google\\Auth\\FetchAuthTokenInterface<\/a> object or <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/CredentialsWrapper.html\" target=\"_blank\">Google\\ApiCore\\CredentialsWrapper<\/a> object. Note that when one of these objects are provided, any settings in $credentialsConfig will be ignored.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>","<a href=\"https:\/\/github.com\/googleapis\/google-auth-library-php\/tree\/v1.23.1\/src\/FetchAuthTokenInterface.php\" target=\"_blank\">Google\\Auth\\FetchAuthTokenInterface<\/a>","<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/CredentialsWrapper.html\" target=\"_blank\">Google\\ApiCore\\CredentialsWrapper<\/a>"],"optional":null,"nullable":null},{"name":"options.credentialsConfig\n","description":"<p>Options used to configure credentials, including auth token caching, for the client. For a full list of supporting configuration options, see <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/CredentialsWrapper.html\" target=\"_blank\">Google\\ApiCore\\CredentialsWrapper::build()<\/a> .<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.disableRetries\n","description":"<p>Determines whether or not retries defined by the client configuration should be disabled. Defaults to <code>false<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"options.clientConfig\n","description":"<p>Client method configuration, including retry settings. This option can be either a path to a JSON file, or a PHP array containing the decoded JSON data. By default this settings points to the default client config file, which is provided in the resources folder.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.transport\n","description":"<p>The transport used for executing network requests. May be either the string <code>rest<\/code> or <code>grpc<\/code>. Defaults to <code>grpc<\/code> if gRPC support is detected on the system. <em>Advanced usage<\/em>: Additionally, it is possible to pass in an already instantiated <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/Transport\/TransportInterface.html\" target=\"_blank\">Google\\ApiCore\\Transport\\TransportInterface<\/a> object. Note that when this object is provided, any settings in $transportConfig, and any $serviceAddress setting, will be ignored.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/Transport\/TransportInterface.html\" target=\"_blank\">Google\\ApiCore\\Transport\\TransportInterface<\/a>"],"optional":null,"nullable":null},{"name":"options.transportConfig\n","description":"<p>Configuration options that will be used to construct the transport. Options for each supported transport type should be passed in a key for that transport. For example: $transportConfig = [ 'grpc' =&gt; [...], 'rest' =&gt; [...], ]; See the <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/Transport\/GrpcTransport.html\" target=\"_blank\">Google\\ApiCore\\Transport\\GrpcTransport::build()<\/a> and <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/Transport\/RestTransport.html\" target=\"_blank\">Google\\ApiCore\\Transport\\RestTransport::build()<\/a> methods for the supported options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.clientCertSource\n","description":"<p>A callable which returns the client cert as a string. This can be used to provide a certificate and private key to the transport layer for mTLS.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.callable.php\" target=\"_blank\">callable<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ValidationException","description":""}],"returns":[]},{"id":"createBackup","type":"instance","name":"createBackup","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L592","description":"<p>Creates a new Backup in a given project and location.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$dataprocMetastoreClient = new DataprocMetastoreClient();\ntry {\n    $formattedParent = $dataprocMetastoreClient-&gt;serviceName('[PROJECT]', '[LOCATION]', '[SERVICE]');\n    $backupId = 'backup_id';\n    $backup = new Backup();\n    $operationResponse = $dataprocMetastoreClient-&gt;createBackup($formattedParent, $backupId, $backup);\n    $operationResponse-&gt;pollUntilComplete();\n    if ($operationResponse-&gt;operationSucceeded()) {\n        $result = $operationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $operationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n    \/\/ Alternatively:\n    \/\/ start the operation, keep the operation name, and resume later\n    $operationResponse = $dataprocMetastoreClient-&gt;createBackup($formattedParent, $backupId, $backup);\n    $operationName = $operationResponse-&gt;getName();\n    \/\/ ... do other work\n    $newOperationResponse = $dataprocMetastoreClient-&gt;resumeOperation($operationName, 'createBackup');\n    while (!$newOperationResponse-&gt;isDone()) {\n        \/\/ ... do other work\n        $newOperationResponse-&gt;reload();\n    }\n    if ($newOperationResponse-&gt;operationSucceeded()) {\n        $result = $newOperationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $newOperationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n} finally {\n    $dataprocMetastoreClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"parent","description":"<p>Required. The relative resource name of the service in which to create a\nbackup of the following form:<\/p>\n<p><code>projects\/{project_number}\/locations\/{location_id}\/services\/{service_id}<\/code><\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"backupId","description":"<p>Required. The ID of the backup, which is used as the final component of the\nbackup's name.<\/p>\n<p>This value must be between 1 and 64 characters long, begin with a letter,\nend with a letter or number, and consist of alpha-numeric ASCII characters\nor hyphens.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"backup","description":"<p>Required. The backup to create. The <code>name<\/code> field is ignored. The ID of the\ncreated backup must be provided in the request's <code>backup_id<\/code> field.<\/p>","types":["<a data-custom-type=\"dataprocmetastore\/v1beta\/backup\">Google\\Cloud\\Metastore\\V1beta\\Backup<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.requestId\n","description":"<p>Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request. For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments. The request ID must be a valid <a href=\"https:\/\/en.wikipedia.org\/wiki\/Universally_unique_identifier#Format\">UUID<\/a> A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/OperationResponse.html\" target=\"_blank\">Google\\ApiCore\\OperationResponse<\/a>"],"description":""}]},{"id":"createMetadataImport","type":"instance","name":"createMetadataImport","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L691","description":"<p>Creates a new MetadataImport in a given project and location.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$dataprocMetastoreClient = new DataprocMetastoreClient();\ntry {\n    $formattedParent = $dataprocMetastoreClient-&gt;serviceName('[PROJECT]', '[LOCATION]', '[SERVICE]');\n    $metadataImportId = 'metadata_import_id';\n    $metadataImport = new MetadataImport();\n    $operationResponse = $dataprocMetastoreClient-&gt;createMetadataImport($formattedParent, $metadataImportId, $metadataImport);\n    $operationResponse-&gt;pollUntilComplete();\n    if ($operationResponse-&gt;operationSucceeded()) {\n        $result = $operationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $operationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n    \/\/ Alternatively:\n    \/\/ start the operation, keep the operation name, and resume later\n    $operationResponse = $dataprocMetastoreClient-&gt;createMetadataImport($formattedParent, $metadataImportId, $metadataImport);\n    $operationName = $operationResponse-&gt;getName();\n    \/\/ ... do other work\n    $newOperationResponse = $dataprocMetastoreClient-&gt;resumeOperation($operationName, 'createMetadataImport');\n    while (!$newOperationResponse-&gt;isDone()) {\n        \/\/ ... do other work\n        $newOperationResponse-&gt;reload();\n    }\n    if ($newOperationResponse-&gt;operationSucceeded()) {\n        $result = $newOperationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $newOperationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n} finally {\n    $dataprocMetastoreClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"parent","description":"<p>Required. The relative resource name of the service in which to create a\nmetastore import, in the following form:<\/p>\n<p><code>projects\/{project_number}\/locations\/{location_id}\/services\/{service_id}<\/code><\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"metadataImportId","description":"<p>Required. The ID of the metadata import, which is used as the final\ncomponent of the metadata import's name.<\/p>\n<p>This value must be between 1 and 64 characters long, begin with a letter,\nend with a letter or number, and consist of alpha-numeric ASCII characters\nor hyphens.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"metadataImport","description":"<p>Required. The metadata import to create. The <code>name<\/code> field is ignored. The\nID of the created metadata import must be provided in the request's\n<code>metadata_import_id<\/code> field.<\/p>","types":["<a data-custom-type=\"dataprocmetastore\/v1beta\/metadataimport\">Google\\Cloud\\Metastore\\V1beta\\MetadataImport<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.requestId\n","description":"<p>Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request. For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments. The request ID must be a valid <a href=\"https:\/\/en.wikipedia.org\/wiki\/Universally_unique_identifier#Format\">UUID<\/a> A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/OperationResponse.html\" target=\"_blank\">Google\\ApiCore\\OperationResponse<\/a>"],"description":""}]},{"id":"createService","type":"instance","name":"createService","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L790","description":"<p>Creates a metastore service in a project and location.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$dataprocMetastoreClient = new DataprocMetastoreClient();\ntry {\n    $formattedParent = $dataprocMetastoreClient-&gt;locationName('[PROJECT]', '[LOCATION]');\n    $serviceId = 'service_id';\n    $service = new Service();\n    $operationResponse = $dataprocMetastoreClient-&gt;createService($formattedParent, $serviceId, $service);\n    $operationResponse-&gt;pollUntilComplete();\n    if ($operationResponse-&gt;operationSucceeded()) {\n        $result = $operationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $operationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n    \/\/ Alternatively:\n    \/\/ start the operation, keep the operation name, and resume later\n    $operationResponse = $dataprocMetastoreClient-&gt;createService($formattedParent, $serviceId, $service);\n    $operationName = $operationResponse-&gt;getName();\n    \/\/ ... do other work\n    $newOperationResponse = $dataprocMetastoreClient-&gt;resumeOperation($operationName, 'createService');\n    while (!$newOperationResponse-&gt;isDone()) {\n        \/\/ ... do other work\n        $newOperationResponse-&gt;reload();\n    }\n    if ($newOperationResponse-&gt;operationSucceeded()) {\n        $result = $newOperationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $newOperationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n} finally {\n    $dataprocMetastoreClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"parent","description":"<p>Required. The relative resource name of the location in which to create a\nmetastore service, in the following form:<\/p>\n<p><code>projects\/{project_number}\/locations\/{location_id}<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"serviceId","description":"<p>Required. The ID of the metastore service, which is used as the final\ncomponent of the metastore service's name.<\/p>\n<p>This value must be between 2 and 63 characters long inclusive, begin with a\nletter, end with a letter or number, and consist of alpha-numeric\nASCII characters or hyphens.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"service","description":"<p>Required. The Metastore service to create. The <code>name<\/code> field is\nignored. The ID of the created metastore service must be provided in\nthe request's <code>service_id<\/code> field.<\/p>","types":["<a data-custom-type=\"dataprocmetastore\/v1beta\/service\">Google\\Cloud\\Metastore\\V1beta\\Service<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.requestId\n","description":"<p>Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request. For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments. The request ID must be a valid <a href=\"https:\/\/en.wikipedia.org\/wiki\/Universally_unique_identifier#Format\">UUID<\/a> A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/OperationResponse.html\" target=\"_blank\">Google\\ApiCore\\OperationResponse<\/a>"],"description":""}]},{"id":"deleteBackup","type":"instance","name":"deleteBackup","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L876","description":"<p>Deletes a single backup.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$dataprocMetastoreClient = new DataprocMetastoreClient();\ntry {\n    $formattedName = $dataprocMetastoreClient-&gt;backupName('[PROJECT]', '[LOCATION]', '[SERVICE]', '[BACKUP]');\n    $operationResponse = $dataprocMetastoreClient-&gt;deleteBackup($formattedName);\n    $operationResponse-&gt;pollUntilComplete();\n    if ($operationResponse-&gt;operationSucceeded()) {\n        \/\/ operation succeeded and returns no value\n    } else {\n        $error = $operationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n    \/\/ Alternatively:\n    \/\/ start the operation, keep the operation name, and resume later\n    $operationResponse = $dataprocMetastoreClient-&gt;deleteBackup($formattedName);\n    $operationName = $operationResponse-&gt;getName();\n    \/\/ ... do other work\n    $newOperationResponse = $dataprocMetastoreClient-&gt;resumeOperation($operationName, 'deleteBackup');\n    while (!$newOperationResponse-&gt;isDone()) {\n        \/\/ ... do other work\n        $newOperationResponse-&gt;reload();\n    }\n    if ($newOperationResponse-&gt;operationSucceeded()) {\n        \/\/ operation succeeded and returns no value\n    } else {\n        $error = $newOperationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n} finally {\n    $dataprocMetastoreClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"name","description":"<p>Required. The relative resource name of the backup to delete, in the\nfollowing form:<\/p>\n<p><code>projects\/{project_number}\/locations\/{location_id}\/services\/{service_id}\/backups\/{backup_id}<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.requestId\n","description":"<p>Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request. For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments. The request ID must be a valid <a href=\"https:\/\/en.wikipedia.org\/wiki\/Universally_unique_identifier#Format\">UUID<\/a> A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/OperationResponse.html\" target=\"_blank\">Google\\ApiCore\\OperationResponse<\/a>"],"description":""}]},{"id":"deleteService","type":"instance","name":"deleteService","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L960","description":"<p>Deletes a single service.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$dataprocMetastoreClient = new DataprocMetastoreClient();\ntry {\n    $formattedName = $dataprocMetastoreClient-&gt;serviceName('[PROJECT]', '[LOCATION]', '[SERVICE]');\n    $operationResponse = $dataprocMetastoreClient-&gt;deleteService($formattedName);\n    $operationResponse-&gt;pollUntilComplete();\n    if ($operationResponse-&gt;operationSucceeded()) {\n        \/\/ operation succeeded and returns no value\n    } else {\n        $error = $operationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n    \/\/ Alternatively:\n    \/\/ start the operation, keep the operation name, and resume later\n    $operationResponse = $dataprocMetastoreClient-&gt;deleteService($formattedName);\n    $operationName = $operationResponse-&gt;getName();\n    \/\/ ... do other work\n    $newOperationResponse = $dataprocMetastoreClient-&gt;resumeOperation($operationName, 'deleteService');\n    while (!$newOperationResponse-&gt;isDone()) {\n        \/\/ ... do other work\n        $newOperationResponse-&gt;reload();\n    }\n    if ($newOperationResponse-&gt;operationSucceeded()) {\n        \/\/ operation succeeded and returns no value\n    } else {\n        $error = $newOperationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n} finally {\n    $dataprocMetastoreClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"name","description":"<p>Required. The relative resource name of the metastore service to delete, in\nthe following form:<\/p>\n<p><code>projects\/{project_number}\/locations\/{location_id}\/services\/{service_id}<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.requestId\n","description":"<p>Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request. For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments. The request ID must be a valid <a href=\"https:\/\/en.wikipedia.org\/wiki\/Universally_unique_identifier#Format\">UUID<\/a> A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/OperationResponse.html\" target=\"_blank\">Google\\ApiCore\\OperationResponse<\/a>"],"description":""}]},{"id":"exportMetadata","type":"instance","name":"exportMetadata","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L1054","description":"<p>Exports metadata from a service.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$dataprocMetastoreClient = new DataprocMetastoreClient();\ntry {\n    $formattedService = $dataprocMetastoreClient-&gt;serviceName('[PROJECT]', '[LOCATION]', '[SERVICE]');\n    $operationResponse = $dataprocMetastoreClient-&gt;exportMetadata($formattedService);\n    $operationResponse-&gt;pollUntilComplete();\n    if ($operationResponse-&gt;operationSucceeded()) {\n        $result = $operationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $operationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n    \/\/ Alternatively:\n    \/\/ start the operation, keep the operation name, and resume later\n    $operationResponse = $dataprocMetastoreClient-&gt;exportMetadata($formattedService);\n    $operationName = $operationResponse-&gt;getName();\n    \/\/ ... do other work\n    $newOperationResponse = $dataprocMetastoreClient-&gt;resumeOperation($operationName, 'exportMetadata');\n    while (!$newOperationResponse-&gt;isDone()) {\n        \/\/ ... do other work\n        $newOperationResponse-&gt;reload();\n    }\n    if ($newOperationResponse-&gt;operationSucceeded()) {\n        $result = $newOperationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $newOperationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n} finally {\n    $dataprocMetastoreClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"service","description":"<p>Required. The relative resource name of the metastore service to run\nexport, in the following form:<\/p>\n<p><code>projects\/{project_id}\/locations\/{location_id}\/services\/{service_id}<\/code><\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.destinationGcsFolder\n","description":"<p>A Cloud Storage URI of a folder, in the format <code>gs:\/\/&lt;bucket_name&gt;\/&lt;path_inside_bucket&gt;<\/code>. A sub-folder <code>&lt;export_folder&gt;<\/code> containing exported files will be created below it.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.requestId\n","description":"<p>Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request. For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments. The request ID must be a valid <a href=\"https:\/\/en.wikipedia.org\/wiki\/Universally_unique_identifier#Format\">UUID<\/a>. A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.databaseDumpType\n","description":"<p>Optional. The type of the database dump. If unspecified, defaults to <code>MYSQL<\/code>. For allowed values, use constants defined on <a data-custom-type=\"dataprocmetastore\/v1beta\/databasedumpspec\/type\">Google\\Cloud\\Metastore\\V1beta\\DatabaseDumpSpec\\Type<\/a><\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/OperationResponse.html\" target=\"_blank\">Google\\ApiCore\\OperationResponse<\/a>"],"description":""}]},{"id":"getBackup","type":"instance","name":"getBackup","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L1110","description":"<p>Gets details of a single backup.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$dataprocMetastoreClient = new DataprocMetastoreClient();\ntry {\n    $formattedName = $dataprocMetastoreClient-&gt;backupName('[PROJECT]', '[LOCATION]', '[SERVICE]', '[BACKUP]');\n    $response = $dataprocMetastoreClient-&gt;getBackup($formattedName);\n} finally {\n    $dataprocMetastoreClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"name","description":"<p>Required. The relative resource name of the backup to retrieve, in the\nfollowing form:<\/p>\n<p><code>projects\/{project_number}\/locations\/{location_id}\/services\/{service_id}\/backups\/{backup_id}<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a data-custom-type=\"dataprocmetastore\/v1beta\/backup\">Google\\Cloud\\Metastore\\V1beta\\Backup<\/a>"],"description":""}]},{"id":"getMetadataImport","type":"instance","name":"getMetadataImport","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L1154","description":"<p>Gets details of a single import.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$dataprocMetastoreClient = new DataprocMetastoreClient();\ntry {\n    $formattedName = $dataprocMetastoreClient-&gt;metadataImportName('[PROJECT]', '[LOCATION]', '[SERVICE]', '[METADATA_IMPORT]');\n    $response = $dataprocMetastoreClient-&gt;getMetadataImport($formattedName);\n} finally {\n    $dataprocMetastoreClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"name","description":"<p>Required. The relative resource name of the metadata import to retrieve, in\nthe following form:<\/p>\n<p><code>projects\/{project_number}\/locations\/{location_id}\/services\/{service_id}\/metadataImports\/{import_id}<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a data-custom-type=\"dataprocmetastore\/v1beta\/metadataimport\">Google\\Cloud\\Metastore\\V1beta\\MetadataImport<\/a>"],"description":""}]},{"id":"getService","type":"instance","name":"getService","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L1198","description":"<p>Gets the details of a single service.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$dataprocMetastoreClient = new DataprocMetastoreClient();\ntry {\n    $formattedName = $dataprocMetastoreClient-&gt;serviceName('[PROJECT]', '[LOCATION]', '[SERVICE]');\n    $response = $dataprocMetastoreClient-&gt;getService($formattedName);\n} finally {\n    $dataprocMetastoreClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"name","description":"<p>Required. The relative resource name of the metastore service to retrieve,\nin the following form:<\/p>\n<p><code>projects\/{project_number}\/locations\/{location_id}\/services\/{service_id}<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a data-custom-type=\"dataprocmetastore\/v1beta\/service\">Google\\Cloud\\Metastore\\V1beta\\Service<\/a>"],"description":""}]},{"id":"listBackups","type":"instance","name":"listBackups","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L1269","description":"<p>Lists backups in a service.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$dataprocMetastoreClient = new DataprocMetastoreClient();\ntry {\n    $formattedParent = $dataprocMetastoreClient-&gt;serviceName('[PROJECT]', '[LOCATION]', '[SERVICE]');\n    \/\/ Iterate over pages of elements\n    $pagedResponse = $dataprocMetastoreClient-&gt;listBackups($formattedParent);\n    foreach ($pagedResponse-&gt;iteratePages() as $page) {\n        foreach ($page as $element) {\n            \/\/ doSomethingWith($element);\n        }\n    }\n    \/\/ Alternatively:\n    \/\/ Iterate through all elements\n    $pagedResponse = $dataprocMetastoreClient-&gt;listBackups($formattedParent);\n    foreach ($pagedResponse-&gt;iterateAllElements() as $element) {\n        \/\/ doSomethingWith($element);\n    }\n} finally {\n    $dataprocMetastoreClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"parent","description":"<p>Required. The relative resource name of the service whose backups to\nlist, in the following form:<\/p>\n<p><code>projects\/{project_number}\/locations\/{location_id}\/services\/{service_id}\/backups<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.pageSize\n","description":"<p>The maximum number of resources contained in the underlying API response. The API may return fewer values in a page, even if there are additional values to be retrieved.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.pageToken\n","description":"<p>A page token is used to specify a page of values to be returned. If no page token is specified (the default), the first page of values will be returned. Any page token used here must have been generated by a previous call to the API.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.filter\n","description":"<p>Optional. The filter to apply to list results.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.orderBy\n","description":"<p>Optional. Specify the ordering of results as described in <a href=\"https:\/\/cloud.google.com\/apis\/design\/design_patterns#sorting_order\">Sorting Order<\/a>. If not specified, the results will be sorted in the default order.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/PagedListResponse.html\" target=\"_blank\">Google\\ApiCore\\PagedListResponse<\/a>"],"description":""}]},{"id":"listMetadataImports","type":"instance","name":"listMetadataImports","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L1356","description":"<p>Lists imports in a service.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$dataprocMetastoreClient = new DataprocMetastoreClient();\ntry {\n    $formattedParent = $dataprocMetastoreClient-&gt;serviceName('[PROJECT]', '[LOCATION]', '[SERVICE]');\n    \/\/ Iterate over pages of elements\n    $pagedResponse = $dataprocMetastoreClient-&gt;listMetadataImports($formattedParent);\n    foreach ($pagedResponse-&gt;iteratePages() as $page) {\n        foreach ($page as $element) {\n            \/\/ doSomethingWith($element);\n        }\n    }\n    \/\/ Alternatively:\n    \/\/ Iterate through all elements\n    $pagedResponse = $dataprocMetastoreClient-&gt;listMetadataImports($formattedParent);\n    foreach ($pagedResponse-&gt;iterateAllElements() as $element) {\n        \/\/ doSomethingWith($element);\n    }\n} finally {\n    $dataprocMetastoreClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"parent","description":"<p>Required. The relative resource name of the service whose metadata imports\nto list, in the following form:<\/p>\n<p><code>projects\/{project_number}\/locations\/{location_id}\/services\/{service_id}\/metadataImports<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.pageSize\n","description":"<p>The maximum number of resources contained in the underlying API response. The API may return fewer values in a page, even if there are additional values to be retrieved.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.pageToken\n","description":"<p>A page token is used to specify a page of values to be returned. If no page token is specified (the default), the first page of values will be returned. Any page token used here must have been generated by a previous call to the API.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.filter\n","description":"<p>Optional. The filter to apply to list results.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.orderBy\n","description":"<p>Optional. Specify the ordering of results as described in <a href=\"https:\/\/cloud.google.com\/apis\/design\/design_patterns#sorting_order\">Sorting Order<\/a>. If not specified, the results will be sorted in the default order.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/PagedListResponse.html\" target=\"_blank\">Google\\ApiCore\\PagedListResponse<\/a>"],"description":""}]},{"id":"listServices","type":"instance","name":"listServices","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L1443","description":"<p>Lists services in a project and location.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$dataprocMetastoreClient = new DataprocMetastoreClient();\ntry {\n    $formattedParent = $dataprocMetastoreClient-&gt;locationName('[PROJECT]', '[LOCATION]');\n    \/\/ Iterate over pages of elements\n    $pagedResponse = $dataprocMetastoreClient-&gt;listServices($formattedParent);\n    foreach ($pagedResponse-&gt;iteratePages() as $page) {\n        foreach ($page as $element) {\n            \/\/ doSomethingWith($element);\n        }\n    }\n    \/\/ Alternatively:\n    \/\/ Iterate through all elements\n    $pagedResponse = $dataprocMetastoreClient-&gt;listServices($formattedParent);\n    foreach ($pagedResponse-&gt;iterateAllElements() as $element) {\n        \/\/ doSomethingWith($element);\n    }\n} finally {\n    $dataprocMetastoreClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"parent","description":"<p>Required. The relative resource name of the location of metastore services\nto list, in the following form:<\/p>\n<p><code>projects\/{project_number}\/locations\/{location_id}<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.pageSize\n","description":"<p>The maximum number of resources contained in the underlying API response. The API may return fewer values in a page, even if there are additional values to be retrieved.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.pageToken\n","description":"<p>A page token is used to specify a page of values to be returned. If no page token is specified (the default), the first page of values will be returned. Any page token used here must have been generated by a previous call to the API.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.filter\n","description":"<p>Optional. The filter to apply to list results.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.orderBy\n","description":"<p>Optional. Specify the ordering of results as described in <a href=\"https:\/\/cloud.google.com\/apis\/design\/design_patterns#sorting_order\">Sorting Order<\/a>. If not specified, the results will be sorted in the default order.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/PagedListResponse.html\" target=\"_blank\">Google\\ApiCore\\PagedListResponse<\/a>"],"description":""}]},{"id":"restoreService","type":"instance","name":"restoreService","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L1549","description":"<p>Restores a service from a backup.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$dataprocMetastoreClient = new DataprocMetastoreClient();\ntry {\n    $formattedService = $dataprocMetastoreClient-&gt;serviceName('[PROJECT]', '[LOCATION]', '[SERVICE]');\n    $formattedBackup = $dataprocMetastoreClient-&gt;backupName('[PROJECT]', '[LOCATION]', '[SERVICE]', '[BACKUP]');\n    $operationResponse = $dataprocMetastoreClient-&gt;restoreService($formattedService, $formattedBackup);\n    $operationResponse-&gt;pollUntilComplete();\n    if ($operationResponse-&gt;operationSucceeded()) {\n        $result = $operationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $operationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n    \/\/ Alternatively:\n    \/\/ start the operation, keep the operation name, and resume later\n    $operationResponse = $dataprocMetastoreClient-&gt;restoreService($formattedService, $formattedBackup);\n    $operationName = $operationResponse-&gt;getName();\n    \/\/ ... do other work\n    $newOperationResponse = $dataprocMetastoreClient-&gt;resumeOperation($operationName, 'restoreService');\n    while (!$newOperationResponse-&gt;isDone()) {\n        \/\/ ... do other work\n        $newOperationResponse-&gt;reload();\n    }\n    if ($newOperationResponse-&gt;operationSucceeded()) {\n        $result = $newOperationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $newOperationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n} finally {\n    $dataprocMetastoreClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"service","description":"<p>Required. The relative resource name of the metastore service to run\nrestore, in the following form:<\/p>\n<p><code>projects\/{project_id}\/locations\/{location_id}\/services\/{service_id}<\/code><\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"backup","description":"<p>Required. The relative resource name of the metastore service backup to\nrestore from, in the following form:<\/p>\n<p><code>projects\/{project_id}\/locations\/{location_id}\/services\/{service_id}\/backups\/{backup_id}<\/code><\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.restoreType\n","description":"<p>Optional. The type of restore. If unspecified, defaults to <code>METADATA_ONLY<\/code>. For allowed values, use constants defined on <a data-custom-type=\"dataprocmetastore\/v1beta\/restore\/restoretype\">Google\\Cloud\\Metastore\\V1beta\\Restore\\RestoreType<\/a><\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.requestId\n","description":"<p>Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request. For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments. The request ID must be a valid <a href=\"https:\/\/en.wikipedia.org\/wiki\/Universally_unique_identifier#Format\">UUID<\/a>. A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/OperationResponse.html\" target=\"_blank\">Google\\ApiCore\\OperationResponse<\/a>"],"description":""}]},{"id":"updateMetadataImport","type":"instance","name":"updateMetadataImport","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L1647","description":"<p>Updates a single import.<\/p>\n<p>Only the description field of MetadataImport is supported to be updated.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$dataprocMetastoreClient = new DataprocMetastoreClient();\ntry {\n    $updateMask = new FieldMask();\n    $metadataImport = new MetadataImport();\n    $operationResponse = $dataprocMetastoreClient-&gt;updateMetadataImport($updateMask, $metadataImport);\n    $operationResponse-&gt;pollUntilComplete();\n    if ($operationResponse-&gt;operationSucceeded()) {\n        $result = $operationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $operationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n    \/\/ Alternatively:\n    \/\/ start the operation, keep the operation name, and resume later\n    $operationResponse = $dataprocMetastoreClient-&gt;updateMetadataImport($updateMask, $metadataImport);\n    $operationName = $operationResponse-&gt;getName();\n    \/\/ ... do other work\n    $newOperationResponse = $dataprocMetastoreClient-&gt;resumeOperation($operationName, 'updateMetadataImport');\n    while (!$newOperationResponse-&gt;isDone()) {\n        \/\/ ... do other work\n        $newOperationResponse-&gt;reload();\n    }\n    if ($newOperationResponse-&gt;operationSucceeded()) {\n        $result = $newOperationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $newOperationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n} finally {\n    $dataprocMetastoreClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"updateMask","description":"<p>Required. A field mask used to specify the fields to be overwritten in the\nmetadata import resource by the update.\nFields specified in the <code>update_mask<\/code> are relative to the resource (not\nto the full request). A field is overwritten if it is in the mask.<\/p>","types":["<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/FieldMask.php\" target=\"_blank\">Google\\Protobuf\\FieldMask<\/a>"],"optional":false,"nullable":null},{"name":"metadataImport","description":"<p>Required. The metadata import to update. The server only merges fields\nin the import if they are specified in <code>update_mask<\/code>.<\/p>\n<p>The metadata import's <code>name<\/code> field is used to identify the metastore\nimport to be updated.<\/p>","types":["<a data-custom-type=\"dataprocmetastore\/v1beta\/metadataimport\">Google\\Cloud\\Metastore\\V1beta\\MetadataImport<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.requestId\n","description":"<p>Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request. For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments. The request ID must be a valid <a href=\"https:\/\/en.wikipedia.org\/wiki\/Universally_unique_identifier#Format\">UUID<\/a> A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/OperationResponse.html\" target=\"_blank\">Google\\ApiCore\\OperationResponse<\/a>"],"description":""}]},{"id":"updateService","type":"instance","name":"updateService","source":"DataprocMetastore\/src\/V1beta\/Gapic\/DataprocMetastoreGapicClient.php#L1740","description":"<p>Updates the parameters of a single service.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$dataprocMetastoreClient = new DataprocMetastoreClient();\ntry {\n    $updateMask = new FieldMask();\n    $service = new Service();\n    $operationResponse = $dataprocMetastoreClient-&gt;updateService($updateMask, $service);\n    $operationResponse-&gt;pollUntilComplete();\n    if ($operationResponse-&gt;operationSucceeded()) {\n        $result = $operationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $operationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n    \/\/ Alternatively:\n    \/\/ start the operation, keep the operation name, and resume later\n    $operationResponse = $dataprocMetastoreClient-&gt;updateService($updateMask, $service);\n    $operationName = $operationResponse-&gt;getName();\n    \/\/ ... do other work\n    $newOperationResponse = $dataprocMetastoreClient-&gt;resumeOperation($operationName, 'updateService');\n    while (!$newOperationResponse-&gt;isDone()) {\n        \/\/ ... do other work\n        $newOperationResponse-&gt;reload();\n    }\n    if ($newOperationResponse-&gt;operationSucceeded()) {\n        $result = $newOperationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $newOperationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n} finally {\n    $dataprocMetastoreClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"updateMask","description":"<p>Required. A field mask used to specify the fields to be overwritten in the\nmetastore service resource by the update.\nFields specified in the <code>update_mask<\/code> are relative to the resource (not\nto the full request). A field is overwritten if it is in the mask.<\/p>","types":["<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/FieldMask.php\" target=\"_blank\">Google\\Protobuf\\FieldMask<\/a>"],"optional":false,"nullable":null},{"name":"service","description":"<p>Required. The metastore service to update. The server only merges fields\nin the service if they are specified in <code>update_mask<\/code>.<\/p>\n<p>The metastore service's <code>name<\/code> field is used to identify the metastore\nservice to be updated.<\/p>","types":["<a data-custom-type=\"dataprocmetastore\/v1beta\/service\">Google\\Cloud\\Metastore\\V1beta\\Service<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.requestId\n","description":"<p>Optional. A request ID. Specify a unique request ID to allow the server to ignore the request if it has completed. The server will ignore subsequent requests that provide a duplicate request ID for at least 60 minutes after the first request. For example, if an initial request times out, followed by another request with the same request ID, the server ignores the second request to prevent the creation of duplicate commitments. The request ID must be a valid <a href=\"https:\/\/en.wikipedia.org\/wiki\/Universally_unique_identifier#Format\">UUID<\/a> A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/OperationResponse.html\" target=\"_blank\">Google\\ApiCore\\OperationResponse<\/a>"],"description":""}]}]}