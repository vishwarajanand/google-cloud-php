{"id":"spanner\/v1\/partialresultset","type":"","title":"Google\\Cloud\\Spanner\\V1\\PartialResultSet","name":"PartialResultSet","description":"<p>Partial results from a streaming read or SQL query. Streaming reads and\nSQL queries better tolerate large result sets, large rows, and large\nvalues, but are a little trickier to consume.<\/p>\n<p>Generated from protobuf message <code>google.spanner.v1.PartialResultSet<\/code><\/p>\n<p>Extends <a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/Message.php\" target=\"_blank\">Google\\Protobuf\\Internal\\Message<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Spanner\/src\/V1\/PartialResultSet.php#L209","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"data","description":"<p>Optional. Data for populating the Message object.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"data.metadata\n","description":"<p>Metadata about the result set, such as row type information. Only present in the first response.<\/p>","types":["<a data-custom-type=\"spanner\/v1\/resultsetmetadata\">Google\\Cloud\\Spanner\\V1\\ResultSetMetadata<\/a>"],"optional":null,"nullable":null},{"name":"data.values\n","description":"<p>A streamed result set consists of a stream of values, which might be split into many <code>PartialResultSet<\/code> messages to accommodate large rows and\/or large values. Every N complete values defines a row, where N is equal to the number of entries in [metadata.row_type.fields][google.spanner.v1.StructType.fields]. Most values are encoded based on type as described [here][google.spanner.v1.TypeCode]. It is possible that the last value in values is &quot;chunked&quot;, meaning that the rest of the value is sent in subsequent <code>PartialResultSet<\/code>(s). This is denoted by the [chunked_value][google.spanner.v1.PartialResultSet.chunked_value] field. Two or more chunked values can be merged to form a complete value as follows: <em> <code>bool\/number\/null<\/code>: cannot be chunked <\/em> <code>string<\/code>: concatenate the strings <em> <code>list<\/code>: concatenate the lists. If the last element in a list is a <code>string<\/code>, <code>list<\/code>, or <code>object<\/code>, merge it with the first element in the next list by applying these rules recursively. <\/em> <code>object<\/code>: concatenate the (field name, field value) pairs. If a field name is duplicated, then apply these rules recursively to merge the field values. Some examples of merging: # Strings are concatenated. &quot;foo&quot;, &quot;bar&quot; =&gt; &quot;foobar&quot; # Lists of non-strings are concatenated. [2, 3], [4] =&gt; [2, 3, 4] # Lists are concatenated, but the last and first elements are merged # because they are strings. [&quot;a&quot;, &quot;b&quot;], [&quot;c&quot;, &quot;d&quot;] =&gt; [&quot;a&quot;, &quot;bc&quot;, &quot;d&quot;] # Lists are concatenated, but the last and first elements are merged # because they are lists. Recursively, the last and first elements # of the inner lists are merged because they are strings. [&quot;a&quot;, [&quot;b&quot;, &quot;c&quot;]], [[&quot;d&quot;], &quot;e&quot;] =&gt; [&quot;a&quot;, [&quot;b&quot;, &quot;cd&quot;], &quot;e&quot;] # Non-overlapping object fields are combined. {&quot;a&quot;: &quot;1&quot;}, {&quot;b&quot;: &quot;2&quot;} =&gt; {&quot;a&quot;: &quot;1&quot;, &quot;b&quot;: 2&quot;} # Overlapping object fields are merged. {&quot;a&quot;: &quot;1&quot;}, {&quot;a&quot;: &quot;2&quot;} =&gt; {&quot;a&quot;: &quot;12&quot;} # Examples of merging objects containing lists of strings. {&quot;a&quot;: [&quot;1&quot;]}, {&quot;a&quot;: [&quot;2&quot;]} =&gt; {&quot;a&quot;: [&quot;12&quot;]} For a more complete example, suppose a streaming SQL query is yielding a result set whose rows contain a single string field. The following <code>PartialResultSet<\/code>s might be yielded: { &quot;metadata&quot;: { ... } &quot;values&quot;: [&quot;Hello&quot;, &quot;W&quot;] &quot;chunked_value&quot;: true &quot;resume_token&quot;: &quot;Af65...&quot; } { &quot;values&quot;: [&quot;orl&quot;] &quot;chunked_value&quot;: true &quot;resume_token&quot;: &quot;Bqp2...&quot; } { &quot;values&quot;: [&quot;d&quot;] &quot;resume_token&quot;: &quot;Zx1B...&quot; } This sequence of <code>PartialResultSet<\/code>s encodes two rows, one containing the field value <code>\"Hello\"<\/code>, and a second containing the field value <code>\"World\" = \"W\" + \"orl\" + \"d\"<\/code>.<\/p>","types":["<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Value%5B%5D.php\" target=\"_blank\">Google\\Protobuf\\Value[]<\/a>","<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/RepeatedField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\RepeatedField<\/a>"],"optional":null,"nullable":null},{"name":"data.chunked_value\n","description":"<p>If true, then the final value in [values][google.spanner.v1.PartialResultSet.values] is chunked, and must be combined with more values from subsequent <code>PartialResultSet<\/code>s to obtain a complete field value.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"data.resume_token\n","description":"<p>Streaming calls might be interrupted for a variety of reasons, such as TCP connection loss. If this occurs, the stream of results can be resumed by re-sending the original request and including <code>resume_token<\/code>. Note that executing any other transaction in the same session invalidates the token.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"data.stats\n","description":"<p>Query plan and execution statistics for the statement that produced this streaming result set. These can be requested by setting [ExecuteSqlRequest.query_mode][google.spanner.v1.ExecuteSqlRequest.query_mode] and are sent only once with the last response in the stream. This field will also be present in the last response for DML statements.<\/p>","types":["<a data-custom-type=\"spanner\/v1\/resultsetstats\">Google\\Cloud\\Spanner\\V1\\ResultSetStats<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"getMetadata","type":"instance","name":"getMetadata","source":"Spanner\/src\/V1\/PartialResultSet.php#L221","description":"<p>Metadata about the result set, such as row type information.<\/p>\n<p>Only present in the first response.<\/p>\n<p>Generated from protobuf field <code>.google.spanner.v1.ResultSetMetadata metadata = 1;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/v1\/resultsetmetadata\">Google\\Cloud\\Spanner\\V1\\ResultSetMetadata<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"setMetadata","type":"instance","name":"setMetadata","source":"Spanner\/src\/V1\/PartialResultSet.php#L244","description":"<p>Metadata about the result set, such as row type information.<\/p>\n<p>Only present in the first response.<\/p>\n<p>Generated from protobuf field <code>.google.spanner.v1.ResultSetMetadata metadata = 1;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Metadata about the result set, such as row type information.<\/p>\n<p>Only present in the first response.<\/p>\n","types":["<a data-custom-type=\"spanner\/v1\/resultsetmetadata\">Google\\Cloud\\Spanner\\V1\\ResultSetMetadata<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/v1\/partialresultset\">Google\\Cloud\\Spanner\\V1\\PartialResultSet<\/a>"],"description":""}]},{"id":"getValues","type":"instance","name":"getValues","source":"Spanner\/src\/V1\/PartialResultSet.php#L316","description":"<p>A streamed result set consists of a stream of values, which might\nbe split into many <code>PartialResultSet<\/code> messages to accommodate\nlarge rows and\/or large values. Every N complete values defines a\nrow, where N is equal to the number of entries in\n[metadata.row_type.fields][google.spanner.v1.StructType.fields].<\/p>\n<p>Most values are encoded based on type as described\n[here][google.spanner.v1.TypeCode].\nIt is possible that the last value in values is &quot;chunked&quot;,\nmeaning that the rest of the value is sent in subsequent\n<code>PartialResultSet<\/code>(s). This is denoted by the [chunked_value][google.spanner.v1.PartialResultSet.chunked_value]\nfield. Two or more chunked values can be merged to form a\ncomplete value as follows:<\/p>\n<ul>\n<li><code>bool\/number\/null<\/code>: cannot be chunked<\/li>\n<li><code>string<\/code>: concatenate the strings<\/li>\n<li><code>list<\/code>: concatenate the lists. If the last element in a list is a\n<code>string<\/code>, <code>list<\/code>, or <code>object<\/code>, merge it with the first element in\nthe next list by applying these rules recursively.<\/li>\n<li><code>object<\/code>: concatenate the (field name, field value) pairs. If a\nfield name is duplicated, then apply these rules recursively\nto merge the field values.\nSome examples of merging:\n<h1>Strings are concatenated.<\/h1>\n<p>&quot;foo&quot;, &quot;bar&quot; =&gt; &quot;foobar&quot;<\/p>\n<h1>Lists of non-strings are concatenated.<\/h1>\n<p>[2, 3], [4] =&gt; [2, 3, 4]<\/p>\n<h1>Lists are concatenated, but the last and first elements are merged<\/h1>\n<h1>because they are strings.<\/h1>\n<p>[&quot;a&quot;, &quot;b&quot;], [&quot;c&quot;, &quot;d&quot;] =&gt; [&quot;a&quot;, &quot;bc&quot;, &quot;d&quot;]<\/p>\n<h1>Lists are concatenated, but the last and first elements are merged<\/h1>\n<h1>because they are lists. Recursively, the last and first elements<\/h1>\n<h1>of the inner lists are merged because they are strings.<\/h1>\n<p>[&quot;a&quot;, [&quot;b&quot;, &quot;c&quot;]], [[&quot;d&quot;], &quot;e&quot;] =&gt; [&quot;a&quot;, [&quot;b&quot;, &quot;cd&quot;], &quot;e&quot;]<\/p>\n<h1>Non-overlapping object fields are combined.<\/h1>\n<p>{&quot;a&quot;: &quot;1&quot;}, {&quot;b&quot;: &quot;2&quot;} =&gt; {&quot;a&quot;: &quot;1&quot;, &quot;b&quot;: 2&quot;}<\/p>\n<h1>Overlapping object fields are merged.<\/h1>\n<p>{&quot;a&quot;: &quot;1&quot;}, {&quot;a&quot;: &quot;2&quot;} =&gt; {&quot;a&quot;: &quot;12&quot;}<\/p>\n<h1>Examples of merging objects containing lists of strings.<\/h1>\n<p>{&quot;a&quot;: [&quot;1&quot;]}, {&quot;a&quot;: [&quot;2&quot;]} =&gt; {&quot;a&quot;: [&quot;12&quot;]}\nFor a more complete example, suppose a streaming SQL query is\nyielding a result set whose rows contain a single string\nfield. The following <code>PartialResultSet<\/code>s might be yielded:\n{\n&quot;metadata&quot;: { ... }\n&quot;values&quot;: [&quot;Hello&quot;, &quot;W&quot;]\n&quot;chunked_value&quot;: true\n&quot;resume_token&quot;: &quot;Af65...&quot;\n}\n{\n&quot;values&quot;: [&quot;orl&quot;]\n&quot;chunked_value&quot;: true\n&quot;resume_token&quot;: &quot;Bqp2...&quot;\n}\n{\n&quot;values&quot;: [&quot;d&quot;]\n&quot;resume_token&quot;: &quot;Zx1B...&quot;\n}\nThis sequence of <code>PartialResultSet<\/code>s encodes two rows, one\ncontaining the field value <code>\"Hello\"<\/code>, and a second containing the\nfield value <code>\"World\" = \"W\" + \"orl\" + \"d\"<\/code>.<\/p><\/li>\n<\/ul>\n<p>Generated from protobuf field <code>repeated .google.protobuf.Value values = 2;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/RepeatedField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\RepeatedField<\/a>"],"description":""}]},{"id":"setValues","type":"instance","name":"setValues","source":"Spanner\/src\/V1\/PartialResultSet.php#L386","description":"<p>A streamed result set consists of a stream of values, which might\nbe split into many <code>PartialResultSet<\/code> messages to accommodate\nlarge rows and\/or large values. Every N complete values defines a\nrow, where N is equal to the number of entries in\n[metadata.row_type.fields][google.spanner.v1.StructType.fields].<\/p>\n<p>Most values are encoded based on type as described\n[here][google.spanner.v1.TypeCode].\nIt is possible that the last value in values is &quot;chunked&quot;,\nmeaning that the rest of the value is sent in subsequent\n<code>PartialResultSet<\/code>(s). This is denoted by the [chunked_value][google.spanner.v1.PartialResultSet.chunked_value]\nfield. Two or more chunked values can be merged to form a\ncomplete value as follows:<\/p>\n<ul>\n<li><code>bool\/number\/null<\/code>: cannot be chunked<\/li>\n<li><code>string<\/code>: concatenate the strings<\/li>\n<li><code>list<\/code>: concatenate the lists. If the last element in a list is a\n<code>string<\/code>, <code>list<\/code>, or <code>object<\/code>, merge it with the first element in\nthe next list by applying these rules recursively.<\/li>\n<li><code>object<\/code>: concatenate the (field name, field value) pairs. If a\nfield name is duplicated, then apply these rules recursively\nto merge the field values.\nSome examples of merging:\n<h1>Strings are concatenated.<\/h1>\n<p>&quot;foo&quot;, &quot;bar&quot; =&gt; &quot;foobar&quot;<\/p>\n<h1>Lists of non-strings are concatenated.<\/h1>\n<p>[2, 3], [4] =&gt; [2, 3, 4]<\/p>\n<h1>Lists are concatenated, but the last and first elements are merged<\/h1>\n<h1>because they are strings.<\/h1>\n<p>[&quot;a&quot;, &quot;b&quot;], [&quot;c&quot;, &quot;d&quot;] =&gt; [&quot;a&quot;, &quot;bc&quot;, &quot;d&quot;]<\/p>\n<h1>Lists are concatenated, but the last and first elements are merged<\/h1>\n<h1>because they are lists. Recursively, the last and first elements<\/h1>\n<h1>of the inner lists are merged because they are strings.<\/h1>\n<p>[&quot;a&quot;, [&quot;b&quot;, &quot;c&quot;]], [[&quot;d&quot;], &quot;e&quot;] =&gt; [&quot;a&quot;, [&quot;b&quot;, &quot;cd&quot;], &quot;e&quot;]<\/p>\n<h1>Non-overlapping object fields are combined.<\/h1>\n<p>{&quot;a&quot;: &quot;1&quot;}, {&quot;b&quot;: &quot;2&quot;} =&gt; {&quot;a&quot;: &quot;1&quot;, &quot;b&quot;: 2&quot;}<\/p>\n<h1>Overlapping object fields are merged.<\/h1>\n<p>{&quot;a&quot;: &quot;1&quot;}, {&quot;a&quot;: &quot;2&quot;} =&gt; {&quot;a&quot;: &quot;12&quot;}<\/p>\n<h1>Examples of merging objects containing lists of strings.<\/h1>\n<p>{&quot;a&quot;: [&quot;1&quot;]}, {&quot;a&quot;: [&quot;2&quot;]} =&gt; {&quot;a&quot;: [&quot;12&quot;]}\nFor a more complete example, suppose a streaming SQL query is\nyielding a result set whose rows contain a single string\nfield. The following <code>PartialResultSet<\/code>s might be yielded:\n{\n&quot;metadata&quot;: { ... }\n&quot;values&quot;: [&quot;Hello&quot;, &quot;W&quot;]\n&quot;chunked_value&quot;: true\n&quot;resume_token&quot;: &quot;Af65...&quot;\n}\n{\n&quot;values&quot;: [&quot;orl&quot;]\n&quot;chunked_value&quot;: true\n&quot;resume_token&quot;: &quot;Bqp2...&quot;\n}\n{\n&quot;values&quot;: [&quot;d&quot;]\n&quot;resume_token&quot;: &quot;Zx1B...&quot;\n}\nThis sequence of <code>PartialResultSet<\/code>s encodes two rows, one\ncontaining the field value <code>\"Hello\"<\/code>, and a second containing the\nfield value <code>\"World\" = \"W\" + \"orl\" + \"d\"<\/code>.<\/p><\/li>\n<\/ul>\n<p>Generated from protobuf field <code>repeated .google.protobuf.Value values = 2;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>A streamed result set consists of a stream of values, which might\nbe split into many <code>PartialResultSet<\/code> messages to accommodate\nlarge rows and\/or large values. Every N complete values defines a\nrow, where N is equal to the number of entries in\n[metadata.row_type.fields][google.spanner.v1.StructType.fields].<\/p>\n<p>Most values are encoded based on type as described\n[here][google.spanner.v1.TypeCode].\nIt is possible that the last value in values is &quot;chunked&quot;,\nmeaning that the rest of the value is sent in subsequent\n<code>PartialResultSet<\/code>(s). This is denoted by the [chunked_value][google.spanner.v1.PartialResultSet.chunked_value]\nfield. Two or more chunked values can be merged to form a\ncomplete value as follows:<\/p>\n<ul>\n<li><code>bool\/number\/null<\/code>: cannot be chunked<\/li>\n<li><code>string<\/code>: concatenate the strings<\/li>\n<li><code>list<\/code>: concatenate the lists. If the last element in a list is a\n<code>string<\/code>, <code>list<\/code>, or <code>object<\/code>, merge it with the first element in\nthe next list by applying these rules recursively.<\/li>\n<li><code>object<\/code>: concatenate the (field name, field value) pairs. If a\nfield name is duplicated, then apply these rules recursively\nto merge the field values.\nSome examples of merging:\n<h1>Strings are concatenated.<\/h1>\n<p>&quot;foo&quot;, &quot;bar&quot; =&gt; &quot;foobar&quot;<\/p>\n<h1>Lists of non-strings are concatenated.<\/h1>\n<p>[2, 3], [4] =&gt; [2, 3, 4]<\/p>\n<h1>Lists are concatenated, but the last and first elements are merged<\/h1>\n<h1>because they are strings.<\/h1>\n<p>[&quot;a&quot;, &quot;b&quot;], [&quot;c&quot;, &quot;d&quot;] =&gt; [&quot;a&quot;, &quot;bc&quot;, &quot;d&quot;]<\/p>\n<h1>Lists are concatenated, but the last and first elements are merged<\/h1>\n<h1>because they are lists. Recursively, the last and first elements<\/h1>\n<h1>of the inner lists are merged because they are strings.<\/h1>\n<p>[&quot;a&quot;, [&quot;b&quot;, &quot;c&quot;]], [[&quot;d&quot;], &quot;e&quot;] =&gt; [&quot;a&quot;, [&quot;b&quot;, &quot;cd&quot;], &quot;e&quot;]<\/p>\n<h1>Non-overlapping object fields are combined.<\/h1>\n<p>{&quot;a&quot;: &quot;1&quot;}, {&quot;b&quot;: &quot;2&quot;} =&gt; {&quot;a&quot;: &quot;1&quot;, &quot;b&quot;: 2&quot;}<\/p>\n<h1>Overlapping object fields are merged.<\/h1>\n<p>{&quot;a&quot;: &quot;1&quot;}, {&quot;a&quot;: &quot;2&quot;} =&gt; {&quot;a&quot;: &quot;12&quot;}<\/p>\n<h1>Examples of merging objects containing lists of strings.<\/h1>\n<p>{&quot;a&quot;: [&quot;1&quot;]}, {&quot;a&quot;: [&quot;2&quot;]} =&gt; {&quot;a&quot;: [&quot;12&quot;]}\nFor a more complete example, suppose a streaming SQL query is\nyielding a result set whose rows contain a single string\nfield. The following <code>PartialResultSet<\/code>s might be yielded:\n{\n&quot;metadata&quot;: { ... }\n&quot;values&quot;: [&quot;Hello&quot;, &quot;W&quot;]\n&quot;chunked_value&quot;: true\n&quot;resume_token&quot;: &quot;Af65...&quot;\n}\n{\n&quot;values&quot;: [&quot;orl&quot;]\n&quot;chunked_value&quot;: true\n&quot;resume_token&quot;: &quot;Bqp2...&quot;\n}\n{\n&quot;values&quot;: [&quot;d&quot;]\n&quot;resume_token&quot;: &quot;Zx1B...&quot;\n}\nThis sequence of <code>PartialResultSet<\/code>s encodes two rows, one\ncontaining the field value <code>\"Hello\"<\/code>, and a second containing the\nfield value <code>\"World\" = \"W\" + \"orl\" + \"d\"<\/code>.<\/p><\/li>\n<\/ul>\n","types":["<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Value%5B%5D.php\" target=\"_blank\">Google\\Protobuf\\Value[]<\/a>","<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/RepeatedField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\RepeatedField<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/v1\/partialresultset\">Google\\Cloud\\Spanner\\V1\\PartialResultSet<\/a>"],"description":""}]},{"id":"getChunkedValue","type":"instance","name":"getChunkedValue","source":"Spanner\/src\/V1\/PartialResultSet.php#L402","description":"<p>If true, then the final value in [values][google.spanner.v1.PartialResultSet.values] is chunked, and must\nbe combined with more values from subsequent <code>PartialResultSet<\/code>s\nto obtain a complete field value.<\/p>\n<p>Generated from protobuf field <code>bool chunked_value = 3;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"setChunkedValue","type":"instance","name":"setChunkedValue","source":"Spanner\/src\/V1\/PartialResultSet.php#L416","description":"<p>If true, then the final value in [values][google.spanner.v1.PartialResultSet.values] is chunked, and must\nbe combined with more values from subsequent <code>PartialResultSet<\/code>s\nto obtain a complete field value.<\/p>\n<p>Generated from protobuf field <code>bool chunked_value = 3;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>If true, then the final value in [values][google.spanner.v1.PartialResultSet.values] is chunked, and must\nbe combined with more values from subsequent <code>PartialResultSet<\/code>s\nto obtain a complete field value.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/v1\/partialresultset\">Google\\Cloud\\Spanner\\V1\\PartialResultSet<\/a>"],"description":""}]},{"id":"getResumeToken","type":"instance","name":"getResumeToken","source":"Spanner\/src\/V1\/PartialResultSet.php#L434","description":"<p>Streaming calls might be interrupted for a variety of reasons, such\nas TCP connection loss. If this occurs, the stream of results can\nbe resumed by re-sending the original request and including\n<code>resume_token<\/code>. Note that executing any other transaction in the\nsame session invalidates the token.<\/p>\n<p>Generated from protobuf field <code>bytes resume_token = 4;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setResumeToken","type":"instance","name":"setResumeToken","source":"Spanner\/src\/V1\/PartialResultSet.php#L450","description":"<p>Streaming calls might be interrupted for a variety of reasons, such\nas TCP connection loss. If this occurs, the stream of results can\nbe resumed by re-sending the original request and including\n<code>resume_token<\/code>. Note that executing any other transaction in the\nsame session invalidates the token.<\/p>\n<p>Generated from protobuf field <code>bytes resume_token = 4;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Streaming calls might be interrupted for a variety of reasons, such\nas TCP connection loss. If this occurs, the stream of results can\nbe resumed by re-sending the original request and including\n<code>resume_token<\/code>. Note that executing any other transaction in the\nsame session invalidates the token.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/v1\/partialresultset\">Google\\Cloud\\Spanner\\V1\\PartialResultSet<\/a>"],"description":""}]},{"id":"getStats","type":"instance","name":"getStats","source":"Spanner\/src\/V1\/PartialResultSet.php#L469","description":"<p>Query plan and execution statistics for the statement that produced this\nstreaming result set. These can be requested by setting\n[ExecuteSqlRequest.query_mode][google.spanner.v1.ExecuteSqlRequest.query_mode] and are sent\nonly once with the last response in the stream.<\/p>\n<p>This field will also be present in the last response for DML\nstatements.<\/p>\n<p>Generated from protobuf field <code>.google.spanner.v1.ResultSetStats stats = 5;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/v1\/resultsetstats\">Google\\Cloud\\Spanner\\V1\\ResultSetStats<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"setStats","type":"instance","name":"setStats","source":"Spanner\/src\/V1\/PartialResultSet.php#L496","description":"<p>Query plan and execution statistics for the statement that produced this\nstreaming result set. These can be requested by setting\n[ExecuteSqlRequest.query_mode][google.spanner.v1.ExecuteSqlRequest.query_mode] and are sent\nonly once with the last response in the stream.<\/p>\n<p>This field will also be present in the last response for DML\nstatements.<\/p>\n<p>Generated from protobuf field <code>.google.spanner.v1.ResultSetStats stats = 5;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Query plan and execution statistics for the statement that produced this\nstreaming result set. These can be requested by setting\n[ExecuteSqlRequest.query_mode][google.spanner.v1.ExecuteSqlRequest.query_mode] and are sent\nonly once with the last response in the stream.<\/p>\n<p>This field will also be present in the last response for DML\nstatements.<\/p>\n","types":["<a data-custom-type=\"spanner\/v1\/resultsetstats\">Google\\Cloud\\Spanner\\V1\\ResultSetStats<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/v1\/partialresultset\">Google\\Cloud\\Spanner\\V1\\PartialResultSet<\/a>"],"description":""}]}]}