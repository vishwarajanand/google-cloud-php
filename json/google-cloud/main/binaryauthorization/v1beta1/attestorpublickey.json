{"id":"binaryauthorization\/v1beta1\/attestorpublickey","type":"","title":"Google\\Cloud\\BinaryAuthorization\\V1beta1\\AttestorPublicKey","name":"AttestorPublicKey","description":"<p>An [attestor public key][google.cloud.binaryauthorization.v1beta1.AttestorPublicKey] that will be used to verify\nattestations signed by this attestor.<\/p>\n<p>Generated from protobuf message <code>google.cloud.binaryauthorization.v1beta1.AttestorPublicKey<\/code><\/p>\n<p>Extends <a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/Message.php\" target=\"_blank\">Google\\Protobuf\\Internal\\Message<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"BinaryAuthorization\/src\/V1beta1\/AttestorPublicKey.php#L72","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"data","description":"<p>Optional. Data for populating the Message object.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"data.comment\n","description":"<p>Optional. A descriptive comment. This field may be updated.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"data.id\n","description":"<p>The ID of this public key. Signatures verified by BinAuthz must include the ID of the public key that can be used to verify them, and that ID must match the contents of this field exactly. Additional restrictions on this field can be imposed based on which public key type is encapsulated. See the documentation on <code>public_key<\/code> cases below for details.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"data.ascii_armored_pgp_public_key\n","description":"<p>ASCII-armored representation of a PGP public key, as the entire output by the command <code>gpg --export --armor foo&amp;#64;example.com<\/code> (either LF or CRLF line endings). When using this field, <code>id<\/code> should be left blank. The BinAuthz API handlers will calculate the ID and fill it in automatically. BinAuthz computes this ID as the OpenPGP RFC4880 V4 fingerprint, represented as upper-case hex. If <code>id<\/code> is provided by the caller, it will be overwritten by the API-calculated ID.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"data.pkix_public_key\n","description":"<p>A raw PKIX SubjectPublicKeyInfo format public key. NOTE: <code>id<\/code> may be explicitly provided by the caller when using this type of public key, but it MUST be a valid RFC3986 URI. If <code>id<\/code> is left blank, a default one will be computed based on the digest of the DER encoding of the public key.<\/p>","types":["<a data-custom-type=\"binaryauthorization\/v1beta1\/pkixpublickey\">Google\\Cloud\\BinaryAuthorization\\V1beta1\\PkixPublicKey<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"getComment","type":"instance","name":"getComment","source":"BinaryAuthorization\/src\/V1beta1\/AttestorPublicKey.php#L83","description":"<p>Optional. A descriptive comment. This field may be updated.<\/p>\n<p>Generated from protobuf field <code>string comment = 1 [(.google.api.field_behavior) = OPTIONAL];<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setComment","type":"instance","name":"setComment","source":"BinaryAuthorization\/src\/V1beta1\/AttestorPublicKey.php#L95","description":"<p>Optional. A descriptive comment. This field may be updated.<\/p>\n<p>Generated from protobuf field <code>string comment = 1 [(.google.api.field_behavior) = OPTIONAL];<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Optional. A descriptive comment. This field may be updated.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"binaryauthorization\/v1beta1\/attestorpublickey\">Google\\Cloud\\BinaryAuthorization\\V1beta1\\AttestorPublicKey<\/a>"],"description":""}]},{"id":"getId","type":"instance","name":"getId","source":"BinaryAuthorization\/src\/V1beta1\/AttestorPublicKey.php#L115","description":"<p>The ID of this public key.<\/p>\n<p>Signatures verified by BinAuthz must include the ID of the public key that\ncan be used to verify them, and that ID must match the contents of this\nfield exactly.\nAdditional restrictions on this field can be imposed based on which public\nkey type is encapsulated. See the documentation on <code>public_key<\/code> cases below\nfor details.<\/p>\n<p>Generated from protobuf field <code>string id = 2;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setId","type":"instance","name":"setId","source":"BinaryAuthorization\/src\/V1beta1\/AttestorPublicKey.php#L133","description":"<p>The ID of this public key.<\/p>\n<p>Signatures verified by BinAuthz must include the ID of the public key that\ncan be used to verify them, and that ID must match the contents of this\nfield exactly.\nAdditional restrictions on this field can be imposed based on which public\nkey type is encapsulated. See the documentation on <code>public_key<\/code> cases below\nfor details.<\/p>\n<p>Generated from protobuf field <code>string id = 2;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The ID of this public key.<\/p>\n<p>Signatures verified by BinAuthz must include the ID of the public key that\ncan be used to verify them, and that ID must match the contents of this\nfield exactly.\nAdditional restrictions on this field can be imposed based on which public\nkey type is encapsulated. See the documentation on <code>public_key<\/code> cases below\nfor details.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"binaryauthorization\/v1beta1\/attestorpublickey\">Google\\Cloud\\BinaryAuthorization\\V1beta1\\AttestorPublicKey<\/a>"],"description":""}]},{"id":"getAsciiArmoredPgpPublicKey","type":"instance","name":"getAsciiArmoredPgpPublicKey","source":"BinaryAuthorization\/src\/V1beta1\/AttestorPublicKey.php#L154","description":"<p>ASCII-armored representation of a PGP public key, as the entire output by\nthe command <code>gpg --export --armor foo&amp;#64;example.com<\/code> (either LF or CRLF\nline endings).<\/p>\n<p>When using this field, <code>id<\/code> should be left blank.  The BinAuthz API\nhandlers will calculate the ID and fill it in automatically.  BinAuthz\ncomputes this ID as the OpenPGP RFC4880 V4 fingerprint, represented as\nupper-case hex.  If <code>id<\/code> is provided by the caller, it will be\noverwritten by the API-calculated ID.<\/p>\n<p>Generated from protobuf field <code>string ascii_armored_pgp_public_key = 3;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setAsciiArmoredPgpPublicKey","type":"instance","name":"setAsciiArmoredPgpPublicKey","source":"BinaryAuthorization\/src\/V1beta1\/AttestorPublicKey.php#L178","description":"<p>ASCII-armored representation of a PGP public key, as the entire output by\nthe command <code>gpg --export --armor foo&amp;#64;example.com<\/code> (either LF or CRLF\nline endings).<\/p>\n<p>When using this field, <code>id<\/code> should be left blank.  The BinAuthz API\nhandlers will calculate the ID and fill it in automatically.  BinAuthz\ncomputes this ID as the OpenPGP RFC4880 V4 fingerprint, represented as\nupper-case hex.  If <code>id<\/code> is provided by the caller, it will be\noverwritten by the API-calculated ID.<\/p>\n<p>Generated from protobuf field <code>string ascii_armored_pgp_public_key = 3;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>ASCII-armored representation of a PGP public key, as the entire output by\nthe command <code>gpg --export --armor foo&amp;#64;example.com<\/code> (either LF or CRLF\nline endings).<\/p>\n<p>When using this field, <code>id<\/code> should be left blank.  The BinAuthz API\nhandlers will calculate the ID and fill it in automatically.  BinAuthz\ncomputes this ID as the OpenPGP RFC4880 V4 fingerprint, represented as\nupper-case hex.  If <code>id<\/code> is provided by the caller, it will be\noverwritten by the API-calculated ID.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"binaryauthorization\/v1beta1\/attestorpublickey\">Google\\Cloud\\BinaryAuthorization\\V1beta1\\AttestorPublicKey<\/a>"],"description":""}]},{"id":"getPkixPublicKey","type":"instance","name":"getPkixPublicKey","source":"BinaryAuthorization\/src\/V1beta1\/AttestorPublicKey.php#L196","description":"<p>A raw PKIX SubjectPublicKeyInfo format public key.<\/p>\n<p>NOTE: <code>id<\/code> may be explicitly provided by the caller when using this\ntype of public key, but it MUST be a valid RFC3986 URI. If <code>id<\/code> is left\nblank, a default one will be computed based on the digest of the DER\nencoding of the public key.<\/p>\n<p>Generated from protobuf field <code>.google.cloud.binaryauthorization.v1beta1.PkixPublicKey pkix_public_key = 5;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"binaryauthorization\/v1beta1\/pkixpublickey\">Google\\Cloud\\BinaryAuthorization\\V1beta1\\PkixPublicKey<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"setPkixPublicKey","type":"instance","name":"setPkixPublicKey","source":"BinaryAuthorization\/src\/V1beta1\/AttestorPublicKey.php#L217","description":"<p>A raw PKIX SubjectPublicKeyInfo format public key.<\/p>\n<p>NOTE: <code>id<\/code> may be explicitly provided by the caller when using this\ntype of public key, but it MUST be a valid RFC3986 URI. If <code>id<\/code> is left\nblank, a default one will be computed based on the digest of the DER\nencoding of the public key.<\/p>\n<p>Generated from protobuf field <code>.google.cloud.binaryauthorization.v1beta1.PkixPublicKey pkix_public_key = 5;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>A raw PKIX SubjectPublicKeyInfo format public key.<\/p>\n<p>NOTE: <code>id<\/code> may be explicitly provided by the caller when using this\ntype of public key, but it MUST be a valid RFC3986 URI. If <code>id<\/code> is left\nblank, a default one will be computed based on the digest of the DER\nencoding of the public key.<\/p>\n","types":["<a data-custom-type=\"binaryauthorization\/v1beta1\/pkixpublickey\">Google\\Cloud\\BinaryAuthorization\\V1beta1\\PkixPublicKey<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"binaryauthorization\/v1beta1\/attestorpublickey\">Google\\Cloud\\BinaryAuthorization\\V1beta1\\AttestorPublicKey<\/a>"],"description":""}]},{"id":"getPublicKey","type":"instance","name":"getPublicKey","source":"BinaryAuthorization\/src\/V1beta1\/AttestorPublicKey.php#L228","description":"","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]}]}