{"id":"vision\/v1\/importproductsetsgcssource","type":"","title":"Google\\Cloud\\Vision\\V1\\ImportProductSetsGcsSource","name":"ImportProductSetsGcsSource","description":"<p>The Google Cloud Storage location for a csv file which preserves a list of\nImportProductSetRequests in each line.<\/p>\n<p>Generated from protobuf message <code>google.cloud.vision.v1.ImportProductSetsGcsSource<\/code><\/p>\n<p>Extends <a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/Message.php\" target=\"_blank\">Google\\Protobuf\\Internal\\Message<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Vision\/src\/V1\/ImportProductSetsGcsSource.php#L128","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"data","description":"<p>Optional. Data for populating the Message object.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"data.csv_file_uri\n","description":"<p>The Google Cloud Storage URI of the input csv file. The URI must start with <code>gs:\/\/<\/code>. The format of the input csv file should be one image per line. In each line, there are 8 columns. 1. image-uri 2. image-id 3. product-set-id 4. product-id 5. product-category 6. product-display-name 7. labels 8. bounding-poly The <code>image-uri<\/code>, <code>product-set-id<\/code>, <code>product-id<\/code>, and <code>product-category<\/code> columns are required. All other columns are optional. If the <code>ProductSet<\/code> or <code>Product<\/code> specified by the <code>product-set-id<\/code> and <code>product-id<\/code> values does not exist, then the system will create a new <code>ProductSet<\/code> or <code>Product<\/code> for the image. In this case, the <code>product-display-name<\/code> column refers to [display_name][google.cloud.vision.v1.Product.display_name], the <code>product-category<\/code> column refers to [product_category][google.cloud.vision.v1.Product.product_category], and the <code>labels<\/code> column refers to [product_labels][google.cloud.vision.v1.Product.product_labels]. The <code>image-id<\/code> column is optional but must be unique if provided. If it is empty, the system will automatically assign a unique id to the image. The <code>product-display-name<\/code> column is optional. If it is empty, the system sets the [display_name][google.cloud.vision.v1.Product.display_name] field for the product to a space (&quot; &quot;). You can update the <code>display_name<\/code> later by using the API. If a <code>Product<\/code> with the specified <code>product-id<\/code> already exists, then the system ignores the <code>product-display-name<\/code>, <code>product-category<\/code>, and <code>labels<\/code> columns. The <code>labels<\/code> column (optional) is a line containing a list of comma-separated key-value pairs, in the following format: &quot;key_1=value_1,key_2=value_2,...,key_n=value_n&quot; The <code>bounding-poly<\/code> column (optional) identifies one region of interest from the image in the same manner as <code>CreateReferenceImage<\/code>. If you do not specify the <code>bounding-poly<\/code> column, then the system will try to detect regions of interest automatically. At most one <code>bounding-poly<\/code> column is allowed per line. If the image contains multiple regions of interest, add a line to the CSV file that includes the same product information, and the <code>bounding-poly<\/code> values for each region of interest. The <code>bounding-poly<\/code> column must contain an even number of comma-separated numbers, in the format &quot;p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y&quot;. Use non-negative integers for absolute bounding polygons, and float values in [0, 1] for normalized bounding polygons. The system will resize the image if the image resolution is too large to process (larger than 20MP).<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"getCsvFileUri","type":"instance","name":"getCsvFileUri","source":"Vision\/src\/V1\/ImportProductSetsGcsSource.php#L185","description":"<p>The Google Cloud Storage URI of the input csv file.<\/p>\n<p>The URI must start with <code>gs:\/\/<\/code>.\nThe format of the input csv file should be one image per line.\nIn each line, there are 8 columns.<\/p>\n<ol>\n<li>image-uri<\/li>\n<li>image-id<\/li>\n<li>product-set-id<\/li>\n<li>product-id<\/li>\n<li>product-category<\/li>\n<li>product-display-name<\/li>\n<li>labels<\/li>\n<li>bounding-poly\nThe <code>image-uri<\/code>, <code>product-set-id<\/code>, <code>product-id<\/code>, and <code>product-category<\/code>\ncolumns are required. All other columns are optional.\nIf the <code>ProductSet<\/code> or <code>Product<\/code> specified by the <code>product-set-id<\/code> and\n<code>product-id<\/code> values does not exist, then the system will create a new\n<code>ProductSet<\/code> or <code>Product<\/code> for the image. In this case, the\n<code>product-display-name<\/code> column refers to\n[display_name][google.cloud.vision.v1.Product.display_name], the\n<code>product-category<\/code> column refers to\n[product_category][google.cloud.vision.v1.Product.product_category], and the\n<code>labels<\/code> column refers to [product_labels][google.cloud.vision.v1.Product.product_labels].\nThe <code>image-id<\/code> column is optional but must be unique if provided. If it is\nempty, the system will automatically assign a unique id to the image.\nThe <code>product-display-name<\/code> column is optional. If it is empty, the system\nsets the [display_name][google.cloud.vision.v1.Product.display_name] field for the product to a\nspace (&quot; &quot;). You can update the <code>display_name<\/code> later by using the API.\nIf a <code>Product<\/code> with the specified <code>product-id<\/code> already exists, then the\nsystem ignores the <code>product-display-name<\/code>, <code>product-category<\/code>, and <code>labels<\/code>\ncolumns.\nThe <code>labels<\/code> column (optional) is a line containing a list of\ncomma-separated key-value pairs, in the following format:\n&quot;key_1=value_1,key_2=value_2,...,key_n=value_n&quot;\nThe <code>bounding-poly<\/code> column (optional) identifies one region of\ninterest from the image in the same manner as <code>CreateReferenceImage<\/code>. If\nyou do not specify the <code>bounding-poly<\/code> column, then the system will try to\ndetect regions of interest automatically.\nAt most one <code>bounding-poly<\/code> column is allowed per line. If the image\ncontains multiple regions of interest, add a line to the CSV file that\nincludes the same product information, and the <code>bounding-poly<\/code> values for\neach region of interest.\nThe <code>bounding-poly<\/code> column must contain an even number of comma-separated\nnumbers, in the format &quot;p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y&quot;. Use\nnon-negative integers for absolute bounding polygons, and float values\nin [0, 1] for normalized bounding polygons.\nThe system will resize the image if the image resolution is too\nlarge to process (larger than 20MP).<\/li>\n<\/ol>\n<p>Generated from protobuf field <code>string csv_file_uri = 1;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setCsvFileUri","type":"instance","name":"setCsvFileUri","source":"Vision\/src\/V1\/ImportProductSetsGcsSource.php#L243","description":"<p>The Google Cloud Storage URI of the input csv file.<\/p>\n<p>The URI must start with <code>gs:\/\/<\/code>.\nThe format of the input csv file should be one image per line.\nIn each line, there are 8 columns.<\/p>\n<ol>\n<li>image-uri<\/li>\n<li>image-id<\/li>\n<li>product-set-id<\/li>\n<li>product-id<\/li>\n<li>product-category<\/li>\n<li>product-display-name<\/li>\n<li>labels<\/li>\n<li>bounding-poly\nThe <code>image-uri<\/code>, <code>product-set-id<\/code>, <code>product-id<\/code>, and <code>product-category<\/code>\ncolumns are required. All other columns are optional.\nIf the <code>ProductSet<\/code> or <code>Product<\/code> specified by the <code>product-set-id<\/code> and\n<code>product-id<\/code> values does not exist, then the system will create a new\n<code>ProductSet<\/code> or <code>Product<\/code> for the image. In this case, the\n<code>product-display-name<\/code> column refers to\n[display_name][google.cloud.vision.v1.Product.display_name], the\n<code>product-category<\/code> column refers to\n[product_category][google.cloud.vision.v1.Product.product_category], and the\n<code>labels<\/code> column refers to [product_labels][google.cloud.vision.v1.Product.product_labels].\nThe <code>image-id<\/code> column is optional but must be unique if provided. If it is\nempty, the system will automatically assign a unique id to the image.\nThe <code>product-display-name<\/code> column is optional. If it is empty, the system\nsets the [display_name][google.cloud.vision.v1.Product.display_name] field for the product to a\nspace (&quot; &quot;). You can update the <code>display_name<\/code> later by using the API.\nIf a <code>Product<\/code> with the specified <code>product-id<\/code> already exists, then the\nsystem ignores the <code>product-display-name<\/code>, <code>product-category<\/code>, and <code>labels<\/code>\ncolumns.\nThe <code>labels<\/code> column (optional) is a line containing a list of\ncomma-separated key-value pairs, in the following format:\n&quot;key_1=value_1,key_2=value_2,...,key_n=value_n&quot;\nThe <code>bounding-poly<\/code> column (optional) identifies one region of\ninterest from the image in the same manner as <code>CreateReferenceImage<\/code>. If\nyou do not specify the <code>bounding-poly<\/code> column, then the system will try to\ndetect regions of interest automatically.\nAt most one <code>bounding-poly<\/code> column is allowed per line. If the image\ncontains multiple regions of interest, add a line to the CSV file that\nincludes the same product information, and the <code>bounding-poly<\/code> values for\neach region of interest.\nThe <code>bounding-poly<\/code> column must contain an even number of comma-separated\nnumbers, in the format &quot;p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y&quot;. Use\nnon-negative integers for absolute bounding polygons, and float values\nin [0, 1] for normalized bounding polygons.\nThe system will resize the image if the image resolution is too\nlarge to process (larger than 20MP).<\/li>\n<\/ol>\n<p>Generated from protobuf field <code>string csv_file_uri = 1;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The Google Cloud Storage URI of the input csv file.<\/p>\n<p>The URI must start with <code>gs:\/\/<\/code>.\nThe format of the input csv file should be one image per line.\nIn each line, there are 8 columns.<\/p>\n<ol>\n<li>image-uri<\/li>\n<li>image-id<\/li>\n<li>product-set-id<\/li>\n<li>product-id<\/li>\n<li>product-category<\/li>\n<li>product-display-name<\/li>\n<li>labels<\/li>\n<li>bounding-poly\nThe <code>image-uri<\/code>, <code>product-set-id<\/code>, <code>product-id<\/code>, and <code>product-category<\/code>\ncolumns are required. All other columns are optional.\nIf the <code>ProductSet<\/code> or <code>Product<\/code> specified by the <code>product-set-id<\/code> and\n<code>product-id<\/code> values does not exist, then the system will create a new\n<code>ProductSet<\/code> or <code>Product<\/code> for the image. In this case, the\n<code>product-display-name<\/code> column refers to\n[display_name][google.cloud.vision.v1.Product.display_name], the\n<code>product-category<\/code> column refers to\n[product_category][google.cloud.vision.v1.Product.product_category], and the\n<code>labels<\/code> column refers to [product_labels][google.cloud.vision.v1.Product.product_labels].\nThe <code>image-id<\/code> column is optional but must be unique if provided. If it is\nempty, the system will automatically assign a unique id to the image.\nThe <code>product-display-name<\/code> column is optional. If it is empty, the system\nsets the [display_name][google.cloud.vision.v1.Product.display_name] field for the product to a\nspace (&quot; &quot;). You can update the <code>display_name<\/code> later by using the API.\nIf a <code>Product<\/code> with the specified <code>product-id<\/code> already exists, then the\nsystem ignores the <code>product-display-name<\/code>, <code>product-category<\/code>, and <code>labels<\/code>\ncolumns.\nThe <code>labels<\/code> column (optional) is a line containing a list of\ncomma-separated key-value pairs, in the following format:\n&quot;key_1=value_1,key_2=value_2,...,key_n=value_n&quot;\nThe <code>bounding-poly<\/code> column (optional) identifies one region of\ninterest from the image in the same manner as <code>CreateReferenceImage<\/code>. If\nyou do not specify the <code>bounding-poly<\/code> column, then the system will try to\ndetect regions of interest automatically.\nAt most one <code>bounding-poly<\/code> column is allowed per line. If the image\ncontains multiple regions of interest, add a line to the CSV file that\nincludes the same product information, and the <code>bounding-poly<\/code> values for\neach region of interest.\nThe <code>bounding-poly<\/code> column must contain an even number of comma-separated\nnumbers, in the format &quot;p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y&quot;. Use\nnon-negative integers for absolute bounding polygons, and float values\nin [0, 1] for normalized bounding polygons.\nThe system will resize the image if the image resolution is too\nlarge to process (larger than 20MP).<\/li>\n<\/ol>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"vision\/v1\/importproductsetsgcssource\">Google\\Cloud\\Vision\\V1\\ImportProductSetsGcsSource<\/a>"],"description":""}]}]}