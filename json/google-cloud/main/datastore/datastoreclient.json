{"id":"datastore\/datastoreclient","type":"","title":"Google\\Cloud\\Datastore\\DatastoreClient","name":"DatastoreClient","description":"<p>Google Cloud Datastore is a highly-scalable NoSQL database for your\napplications. Find more information at the\n<a href=\"https:\/\/cloud.google.com\/datastore\/docs\/\">Google Cloud Datastore docs<\/a>.<\/p>\n<p>Cloud Datastore supports\n<a href=\"https:\/\/cloud.google.com\/datastore\/docs\/concepts\/multitenancy\">multi-tenant<\/a>\napplications through use of data partitions. A partition ID can be supplied\nwhen creating an instance of Cloud Datastore, and will be used in all\noperations executed in that instance.<\/p>\n<p>To enable the\n<a href=\"https:\/\/cloud.google.com\/datastore\/docs\/tools\/datastore-emulator\">Google Cloud Datastore Emulator<\/a>,\nset the <a href=\"https:\/\/goo.gl\/vCVZrY\"><code>DATASTORE_EMULATOR_HOST<\/code><\/a> environment variable.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Datastore\\DatastoreClient;\n\n$datastore = new DatastoreClient();"},{"caption":"<p>Multi-tenant applications can supply a namespace ID.<\/p>","code":"use Google\\Cloud\\Datastore\\DatastoreClient;\n\n$datastore = new DatastoreClient([\n    'namespaceId' => 'my-application-namespace'\n]);"},{"caption":"<p>Using the Datastore Emulator<\/p>","code":"use Google\\Cloud\\Datastore\\DatastoreClient;\n\n\/\/ Be sure to use the port specified when starting the emulator.\n\/\/ `8900` is used as an example only.\nputenv('DATASTORE_EMULATOR_HOST=localhost:8900');\n\n$datastore = new DatastoreClient();"}],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Datastore\/src\/DatastoreClient.php#L143","description":"<p>Create a Datastore client.<\/p>","examples":[],"resources":[],"params":[{"name":"config","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"config.apiEndpoint","description":"<p>A hostname with optional port to use in place of the service's default endpoint.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"config.projectId","description":"<p>The project ID from the Google Developer's Console.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"config.authCache","description":"<p>A cache for storing access tokens. <strong>Defaults to<\/strong> a simple in memory implementation.<\/p>","types":["<a href=\"https:\/\/github.com\/php-fig\/cache\/tree\/1.0.1\/src\/CacheItemPoolInterface.php\" target=\"_blank\">Psr\\Cache\\CacheItemPoolInterface<\/a>"],"optional":null,"nullable":null},{"name":"config.authCacheOptions","description":"<p>Cache configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"config.authHttpHandler","description":"<p>A handler used to deliver Psr7 requests specifically for authentication.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.callable.php\" target=\"_blank\">callable<\/a>"],"optional":null,"nullable":null},{"name":"config.credentialsFetcher","description":"<p>A credentials fetcher instance.<\/p>","types":["<a href=\"https:\/\/github.com\/googleapis\/google-auth-library-php\/tree\/v1.23.1\/src\/FetchAuthTokenInterface.php\" target=\"_blank\">Google\\Auth\\FetchAuthTokenInterface<\/a>"],"optional":null,"nullable":null},{"name":"config.httpHandler","description":"<p>A handler used to deliver Psr7 requests. Only valid for requests sent over REST.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.callable.php\" target=\"_blank\">callable<\/a>"],"optional":null,"nullable":null},{"name":"config.keyFile","description":"<p>The contents of the service account credentials .json file retrieved from the Google Developer's Console. Ex: <code>json_decode(file_get_contents($path), true)<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"config.keyFilePath","description":"<p>The full path to your service account credentials .json file retrieved from the Google Developers Console.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"config.requestTimeout","description":"<p>Seconds to wait before timing out the request. <strong>Defaults to<\/strong> <code>0<\/code> with REST and <code>60<\/code> with gRPC.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.float.php\" target=\"_blank\">float<\/a>"],"optional":null,"nullable":null},{"name":"config.retries","description":"<p>Number of retries for a failed request. <strong>Defaults to<\/strong> <code>3<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"config.scopes","description":"<p>Scopes to be used for the request.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"config.quotaProject","description":"<p>Specifies a user project to bill for access charges associated with the request.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"config.namespaceId","description":"<p>Partitions data under a namespace. Useful for <a href=\"https:\/\/cloud.google.com\/datastore\/docs\/concepts\/multitenancy\">Multitenant Projects<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"config.returnInt64AsObject","description":"<p>If true, 64 bit integers will be returned as a <a data-custom-type=\"core\/int64\">Google\\Cloud\\Core\\Int64<\/a> object for 32 bit platform compatibility. <strong>Defaults to<\/strong> false.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\InvalidArgumentException","description":""}],"returns":[]},{"id":"key","type":"instance","name":"key","source":"Datastore\/src\/DatastoreClient.php#L207","description":"<p>Create a single Key instance<\/p>","examples":[{"caption":"","code":"$key = $datastore->key('Person', 'Bob');"},{"caption":"<p>To override the internal detection of identifier type, you can specify which type to use.<\/p>","code":"$key = $datastore->key('Robots', '1337', [\n    'identifierType' => Key::TYPE_NAME\n]);"}],"resources":[{"title":"Key","link":"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/Key"},{"title":"PathElement","link":"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/Key#PathElement"}],"params":[{"name":"kind","description":"<p>The kind.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"identifier","description":"<p>The ID or name.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":true,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.identifierType","description":"<p>If omitted, type will be determined internally. In cases where any ambiguity can be expected (i.e. if you want to create keys with <code>name<\/code> but your values may pass PHP's <code>is_numeric()<\/code> check), this value may be explicitly set using <code>Key::TYPE_ID<\/code> or <code>Key::TYPE_NAME<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key<\/a>"],"description":""}]},{"id":"keys","type":"instance","name":"keys","source":"Datastore\/src\/DatastoreClient.php#L255","description":"<p>Create multiple keys with the same configuration.<\/p>\n<p>When inserting multiple entities, creating a set of keys at once can be\nuseful. By defining the Key's kind and any ancestors up front, and\nallowing Cloud Datastore to allocate IDs, you can be sure that your\nentity identity and ancestry are correct and that there will be no\ncollisions during the insert operation.<\/p>","examples":[{"caption":"","code":"$keys = $datastore->keys('Person', [\n    'number' => 10\n]);"},{"caption":"<p>Ancestor paths can be specified<\/p>","code":"$keys = $datastore->keys('Person', [\n    'ancestors' => [\n        ['kind' => 'Person', 'name' => 'Grandpa Joe'],\n        ['kind' => 'Person', 'name' => 'Dad Mike']\n    ],\n    'number' => 3\n]);"}],"resources":[{"title":"Key","link":"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/Key"},{"title":"PathElement","link":"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/Key#PathElement"}],"params":[{"name":"kind","description":"<p>The kind to use in the final path element.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.ancestors","description":"<p>An array of <a href=\"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/Key#PathElement\">PathElement<\/a> arrays. Use to create <a href=\"https:\/\/cloud.google.com\/datastore\/docs\/concepts\/entities#ancestor_paths\">ancestor paths<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array[]<\/a>"],"optional":null,"nullable":null},{"name":"options.number","description":"<p>The number of keys to generate.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"options.id","description":"<p>The ID for the last pathElement.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"options.name","description":"<p>The Name for the last pathElement.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key[]<\/a>"],"description":""}]},{"id":"entity","type":"instance","name":"entity","source":"Datastore\/src\/DatastoreClient.php#L378","description":"<p>Create an entity.<\/p>\n<p>This method does not execute any service requests.<\/p>\n<p>Entities are created with a Datastore Key, or by specifying a Kind. Kinds\nare only allowed for insert operations. For any other case, you must\nspecify a named key. If a kind is given, an ID will be automatically\nallocated for the entity upon insert. Additionally, if your entity\nrequires a complex key elementPath, you must create the key separately.<\/p>\n<p>In complex applications you may want to create your own entity types.\nGoogle Cloud PHP supports subclassing of <a data-custom-type=\"datastore\/entity\">Google\\Cloud\\Datastore\\Entity<\/a>.\nIf the name of a subclass of Entity is given in the options array, an\nentity will be created with that class rather than the default class.<\/p>","examples":[{"caption":"","code":"$key = $datastore->key('Person', 'Bob');\n$entity = $datastore->entity($key, [\n    'firstName' => 'Bob',\n    'lastName' => 'Testguy'\n]);"},{"caption":"<p>Entity values can be assigned and accessed via the array syntax.<\/p>","code":"$entity = $datastore->entity($key);\n\n$entity['firstName'] = 'Bob';\n$entity['lastName'] = 'Testguy';"},{"caption":"<p>Entity values can also be assigned and accessed via an object syntax.<\/p>","code":"$entity = $datastore->entity($key);\n\n$entity->firstName = 'Bob';\n$entity->lastName = 'Testguy';"},{"caption":"<p>Entities can be created with a Kind only, for inserting into datastore<\/p>","code":"$entity = $datastore->entity('Person');"},{"caption":"<p>Entities can be custom classes implementing the Datastore entity interface.<\/p>","code":"use Google\\Cloud\\Datastore\\EntityTrait;\nuse Google\\Cloud\\Datastore\\EntityInterface;\n\nclass PersonEntity implements EntityInterface\n{\n    use EntityTrait;\n}\n\n$person = $datastore->entity('Person', [ 'firstName' => 'Bob'], [\n    'className' => PersonEntity::class\n]);\n\necho get_class($person); \/\/ `Person`"},{"caption":"<p>Custom entity types may also extend the built-in Entity class.<\/p>","code":"use Google\\Cloud\\Datastore\\Entity;\n\nclass OtherPersonEntity extends Entity\n{}\n\n$person = $datastore->entity('Person', [ 'firstName' => 'Bob'], [\n    'className' => OtherPersonEntity::class\n]);\n\necho get_class($person); \/\/ `Person`"},{"caption":"<p>If you wish to exclude certain properties from datastore indexes, property names may be supplied in the method $options:<\/p>","code":"$entity = $datastore->entity('Person', [\n    'firstName' => 'Bob',\n    'dateOfBirth' => new DateTime('January 31, 1969')\n], [\n    'excludeFromIndexes' => [\n        'dateOfBirth'\n    ]\n]);"}],"resources":[{"title":"Entity","link":"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/Entity"}],"params":[{"name":"key","description":"<p>The key used to identify the record, or\na string $kind. The key may be null only if the entity will be\nused as an embedded entity within another entity. Attempting to\nuse keyless entities as root entities will result in error.\n<strong>Defaults to<\/strong> <code>null<\/code>.<\/p>","types":["<a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"optional":true,"nullable":null},{"name":"entity","description":"<p>The data, provided as an array of keys\nand values to fill the entity with. <strong>Defaults to<\/strong> <code>[]<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.className","description":"<p>If set, the given class will be returned. Value must be the name of a class implementing <a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface<\/a>. <strong>Defaults to<\/strong> <a data-custom-type=\"datastore\/entity\">Google\\Cloud\\Datastore\\Entity<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.excludeFromIndexes","description":"<p>A list of entity keys to exclude from datastore indexes.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface<\/a>"],"description":""}]},{"id":"geoPoint","type":"instance","name":"geoPoint","source":"Datastore\/src\/DatastoreClient.php#L399","description":"<p>Create a new GeoPoint<\/p>","examples":[{"caption":"","code":"$geoPoint = $datastore->geoPoint(37.4220, -122.0841);"}],"resources":[{"title":"LatLng","link":"https:\/\/cloud.google.com\/datastore\/reference\/rest\/Shared.Types\/LatLng"}],"params":[{"name":"latitude","description":"<p>The latitude<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.float.php\" target=\"_blank\">float<\/a>"],"optional":false,"nullable":null},{"name":"longitude","description":"<p>The longitude<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.float.php\" target=\"_blank\">float<\/a>"],"optional":false,"nullable":null},{"name":"allowNull","description":"<p>Whether null values are allowed.\n<strong>Defaults to<\/strong> <code>false<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/geopoint\">Google\\Cloud\\Datastore\\GeoPoint<\/a>"],"description":""}]},{"id":"blob","type":"instance","name":"blob","source":"Datastore\/src\/DatastoreClient.php#L420","description":"<p>Create a new Blob<\/p>","examples":[{"caption":"","code":"$blob = $datastore->blob('hello world');"},{"caption":"<p>Blobs can be used to store binary data<\/p>","code":"$blob = $datastore->blob(file_get_contents(__DIR__ .'\/family-photo.jpg'));"}],"resources":[],"params":[{"name":"value","description":"<p>The value to store in a blob.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.resource.php\" target=\"_blank\">resource<\/a>","<a href=\"https:\/\/github.com\/php-fig\/http-message\/tree\/1.0.1\/src\/StreamInterface.php\" target=\"_blank\">Psr\\Http\\Message\\StreamInterface<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/blob\">Google\\Cloud\\Datastore\\Blob<\/a>"],"description":""}]},{"id":"int64","type":"instance","name":"int64","source":"Datastore\/src\/DatastoreClient.php#L437","description":"<p>Create an Int64 object. This can be used to work with 64 bit integers as\na string value while on a 32 bit platform.<\/p>","examples":[{"caption":"","code":"$int64 = $datastore->int64('9223372036854775807');"}],"resources":[],"params":[{"name":"value","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"core\/int64\">Google\\Cloud\\Core\\Int64<\/a>"],"description":""}]},{"id":"cursor","type":"instance","name":"cursor","source":"Datastore\/src\/DatastoreClient.php#L456","description":"<p>Create a Cursor.<\/p>\n<p>A cursor points to a position within a set of entities. Cloud Datastore\nuses Cursors for paginating query results.<\/p>","examples":[{"caption":"","code":"$cursor = $datastore->cursor($cursorValue);"}],"resources":[],"params":[{"name":"cursorValue","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/cursor\">Google\\Cloud\\Datastore\\Cursor<\/a>"],"description":""}]},{"id":"allocateId","type":"instance","name":"allocateId","source":"Datastore\/src\/DatastoreClient.php#L481","description":"<p>Allocates an available ID to a given incomplete key<\/p>\n<p>Key MUST be in an incomplete state (i.e. including a kind but not an ID\nor name in its final pathElement).<\/p>\n<p>This method will execute a service request.<\/p>","examples":[{"caption":"","code":"$key = $datastore->key('Person');\n$keyWithAllocatedId = $datastore->allocateId($key);"}],"resources":[{"title":"allocateIds","link":"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/projects\/allocateIds"}],"params":[{"name":"key","description":"<p>The incomplete key.<\/p>","types":["<a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key<\/a>"],"description":""}]},{"id":"allocateIds","type":"instance","name":"allocateIds","source":"Datastore\/src\/DatastoreClient.php#L511","description":"<p>Allocate available IDs to a set of keys<\/p>\n<p>Keys MUST be in an incomplete state (i.e. including a kind but not an ID\nor name in their final pathElement).<\/p>\n<p>This method will execute a service request.<\/p>","examples":[{"caption":"","code":"$keys = [\n    $datastore->key('Person'),\n    $datastore->key('Person')\n];\n\n$keysWithAllocatedIds = $datastore->allocateIds($keys);"}],"resources":[{"title":"allocateIds","link":"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/projects\/allocateIds"}],"params":[{"name":"keys","description":"<p>The incomplete keys.<\/p>","types":["<a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key[]<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key[]<\/a>"],"description":""}]},{"id":"transaction","type":"instance","name":"transaction","source":"Datastore\/src\/DatastoreClient.php#L537","description":"<p>Create a Transaction.<\/p>","examples":[{"caption":"","code":"$transaction = $datastore->transaction();"}],"resources":[{"title":"Datastore Transactions","link":"https:\/\/cloud.google.com\/datastore\/docs\/concepts\/transactions"},{"title":"beginTransaction","link":"https:\/\/cloud.google.com\/datastore\/docs\/reference\/rest\/v1\/projects\/beginTransaction"}],"params":[{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options.transactionOptions","description":"<p>Transaction configuration. See <a href=\"https:\/\/cloud.google.com\/datastore\/docs\/reference\/rest\/v1\/projects\/beginTransaction#ReadWrite\">ReadWrite<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/transaction\">Google\\Cloud\\Datastore\\Transaction<\/a>"],"description":""}]},{"id":"readOnlyTransaction","type":"instance","name":"readOnlyTransaction","source":"Datastore\/src\/DatastoreClient.php#L571","description":"<p>Create a Read-Only Transaction.<\/p>","examples":[{"caption":"","code":"$transaction = $datastore->readOnlyTransaction();"}],"resources":[{"title":"Datastore Transactions","link":"https:\/\/cloud.google.com\/datastore\/docs\/concepts\/transactions"},{"title":"beginTransaction","link":"https:\/\/cloud.google.com\/datastore\/docs\/reference\/rest\/v1\/projects\/beginTransaction"}],"params":[{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options.transactionOptions","description":"<p>See <a href=\"https:\/\/cloud.google.com\/datastore\/docs\/reference\/rest\/v1\/projects\/beginTransaction#ReadOnly\">ReadOnly<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/readonlytransaction\">Google\\Cloud\\Datastore\\ReadOnlyTransaction<\/a>"],"description":""}]},{"id":"insert","type":"instance","name":"insert","source":"Datastore\/src\/DatastoreClient.php#L608","description":"<p>Insert an entity<\/p>\n<p>An entity with incomplete keys will be allocated an ID prior to insertion.<\/p>\n<p>Insert by this method is non-transactional. If you need transaction\nsupport, use <a data-custom-type=\"datastore\/transaction\" data-method=\"insert\">Google\\Cloud\\Datastore\\Transaction::insert()<\/a>.<\/p>","examples":[{"caption":"","code":"$key = $datastore->key('Person', 'Bob');\n$entity = $datastore->entity($key, ['firstName' => 'Bob']);\n\n$datastore->insert($entity);"}],"resources":[{"title":"Commit API documentation","link":"https:\/\/cloud.google.com\/datastore\/docs\/reference\/rest\/v1\/projects\/commit"}],"params":[{"name":"entity","description":"<p>The entity to be inserted.<\/p>","types":["<a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null}],"exceptions":[{"type":"\\DomainException","description":"If a conflict occurs, fail."}],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":"<p>The entity version.<\/p>"}]},{"id":"insertBatch","type":"instance","name":"insertBatch","source":"Datastore\/src\/DatastoreClient.php#L639","description":"<p>Insert multiple entities<\/p>\n<p>Any entity with incomplete keys will be allocated an ID prior to insertion.<\/p>\n<p>Insert by this method is non-transactional. If you need transaction\nsupport, use <a data-custom-type=\"datastore\/transaction\" data-method=\"insertBatch\">Google\\Cloud\\Datastore\\Transaction::insertBatch()<\/a>.<\/p>","examples":[{"caption":"","code":"$entities = [\n    $datastore->entity('Person', ['firstName' => 'Bob']),\n    $datastore->entity('Person', ['firstName' => 'John'])\n];\n\n$datastore->insertBatch($entities);"}],"resources":[{"title":"Commit API documentation","link":"https:\/\/cloud.google.com\/datastore\/docs\/reference\/rest\/v1\/projects\/commit"}],"params":[{"name":"entities","description":"<p>The entities to be inserted.<\/p>","types":["<a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface[]<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":"<p><a href=\"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/projects\/commit#response-body\">Response Body<\/a><\/p>"}]},{"id":"update","type":"instance","name":"update","source":"Datastore\/src\/DatastoreClient.php#L685","description":"<p>Update an entity<\/p>\n<p>Please note that updating a record in Cloud Datastore will replace the\nexisting record. Adding, editing or removing a single property is only\npossible by first retrieving the entire entity in its existing state.<\/p>\n<p>Update by this method is non-transactional. If you need transaction\nsupport, use <a data-custom-type=\"datastore\/transaction\" data-method=\"update\">Google\\Cloud\\Datastore\\Transaction::update()<\/a>.<\/p>","examples":[{"caption":"","code":"$entity['firstName'] = 'John';\n\n$datastore->update($entity);"}],"resources":[{"title":"Commit API documentation","link":"https:\/\/cloud.google.com\/datastore\/docs\/reference\/rest\/v1\/projects\/commit"}],"params":[{"name":"entity","description":"<p>The entity to be updated.<\/p>","types":["<a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.allowOverwrite","description":"<p>Entities must be updated as an entire resource. Patch operations are not supported. Because entities can be created manually, or obtained by a lookup or query, it is possible to accidentally overwrite an existing record with a new one when manually creating an entity. To provide additional safety, this flag must be set to <code>true<\/code> in order to update a record when the entity provided was not obtained through a lookup or query. <strong>Defaults to<\/strong> <code>false<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\DomainException","description":"If a conflict occurs, fail."}],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":"<p>The entity version.<\/p>"}]},{"id":"updateBatch","type":"instance","name":"updateBatch","source":"Datastore\/src\/DatastoreClient.php#L726","description":"<p>Update multiple entities<\/p>\n<p>Please note that updating a record in Cloud Datastore will replace the\nexisting record. Adding, editing or removing a single property is only\npossible by first retrieving the entire entity in its existing state.<\/p>\n<p>Update by this method is non-transactional. If you need transaction\nsupport, use <a data-custom-type=\"datastore\/transaction\" data-method=\"updateBatch\">Google\\Cloud\\Datastore\\Transaction::updateBatch()<\/a>.<\/p>","examples":[{"caption":"","code":"$entities[0]['firstName'] = 'Bob';\n$entities[1]['firstName'] = 'John';\n\n$datastore->updateBatch($entities);"}],"resources":[{"title":"Commit API documentation","link":"https:\/\/cloud.google.com\/datastore\/docs\/reference\/rest\/v1\/projects\/commit"}],"params":[{"name":"entities","description":"<p>The entities to be updated.<\/p>","types":["<a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface[]<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.allowOverwrite","description":"<p>Entities must be updated as an entire resource. Patch operations are not supported. Because entities can be created manually, or obtained by a lookup or query, it is possible to accidentally overwrite an existing record with a new one when manually creating an entity. To provide additional safety, this flag must be set to <code>true<\/code> in order to update a record when the entity provided was not obtained through a lookup or query. <strong>Defaults to<\/strong> <code>false<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":"<p><a href=\"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/projects\/commit#response-body\">Response Body<\/a><\/p>"}]},{"id":"upsert","type":"instance","name":"upsert","source":"Datastore\/src\/DatastoreClient.php#L772","description":"<p>Upsert an entity<\/p>\n<p>Upsert will create a record if one does not already exist, or overwrite\nexisting record if one already exists.<\/p>\n<p>Please note that upserting a record in Cloud Datastore will replace the\nexisting record, if one exists. Adding, editing or removing a single\nproperty is only possible by first retrieving the entire entity in its\nexisting state.<\/p>\n<p>An entity with incomplete keys will be allocated an ID prior to insertion.<\/p>\n<p>Upsert by this method is non-transactional. If you need transaction\nsupport, use <a data-custom-type=\"datastore\/transaction\" data-method=\"upsert\">Google\\Cloud\\Datastore\\Transaction::upsert()<\/a>.<\/p>","examples":[{"caption":"","code":"$key = $datastore->key('Person', 'Bob');\n$entity = $datastore->entity($key, ['firstName' => 'Bob']);\n\n$datastore->upsert($entity);"}],"resources":[{"title":"Commit API documentation","link":"https:\/\/cloud.google.com\/datastore\/docs\/reference\/rest\/v1\/projects\/commit"}],"params":[{"name":"entity","description":"<p>The entity to be upserted.<\/p>","types":["<a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null}],"exceptions":[{"type":"\\DomainException","description":"If a conflict occurs, fail."}],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":"<p>The entity version.<\/p>"}]},{"id":"upsertBatch","type":"instance","name":"upsertBatch","source":"Datastore\/src\/DatastoreClient.php#L815","description":"<p>Upsert multiple entities<\/p>\n<p>Upsert will create a record if one does not already exist, or overwrite\nan existing record if one already exists.<\/p>\n<p>Please note that upserting a record in Cloud Datastore will replace the\nexisting record, if one exists. Adding, editing or removing a single\nproperty is only possible by first retrieving the entire entity in its\nexisting state.<\/p>\n<p>Any entity with incomplete keys will be allocated an ID prior to insertion.<\/p>\n<p>Upsert by this method is non-transactional. If you need transaction\nsupport, use <a data-custom-type=\"datastore\/transaction\" data-method=\"upsertBatch\">Google\\Cloud\\Datastore\\Transaction::upsertBatch()<\/a>.<\/p>","examples":[{"caption":"","code":"$keys = [\n    $datastore->key('Person', 'Bob'),\n    $datastore->key('Person', 'John')\n];\n\n$entities = [\n    $datastore->entity($keys[0], ['firstName' => 'Bob']),\n    $datastore->entity($keys[1], ['firstName' => 'John'])\n];\n\n$datastore->upsertBatch($entities);"}],"resources":[{"title":"Commit API documentation","link":"https:\/\/cloud.google.com\/datastore\/docs\/reference\/rest\/v1\/projects\/commit"}],"params":[{"name":"entities","description":"<p>The entities to be upserted.<\/p>","types":["<a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface[]<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":"<p><a href=\"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/projects\/commit#response-body\">Response Body<\/a><\/p>"}]},{"id":"delete","type":"instance","name":"delete","source":"Datastore\/src\/DatastoreClient.php#L853","description":"<p>Delete an entity<\/p>\n<p>Deletion by this method is non-transactional. If you need transaction\nsupport, use <a data-custom-type=\"datastore\/transaction\" data-method=\"delete\">Google\\Cloud\\Datastore\\Transaction::delete()<\/a>.<\/p>","examples":[{"caption":"","code":"$key = $datastore->key('Person', 'Bob');\n\n$datastore->delete($key);"}],"resources":[{"title":"Commit API documentation","link":"https:\/\/cloud.google.com\/datastore\/docs\/reference\/rest\/v1\/projects\/commit"}],"params":[{"name":"key","description":"<p>The identifier to delete.<\/p>","types":["<a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.baseVersion","description":"<p>Provides concurrency control. The version of the entity that this mutation is being applied to. If this does not match the current version on the server, the mutation conflicts.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\DomainException","description":"If a conflict occurs, fail."}],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":"<p>The updated entity version number.<\/p>"}]},{"id":"deleteBatch","type":"instance","name":"deleteBatch","source":"Datastore\/src\/DatastoreClient.php#L888","description":"<p>Delete multiple entities<\/p>\n<p>Deletion by this method is non-transactional. If you need transaction\nsupport, use <a data-custom-type=\"datastore\/transaction\" data-method=\"deleteBatch\">Google\\Cloud\\Datastore\\Transaction::deleteBatch()<\/a>.<\/p>","examples":[{"caption":"","code":"$keys = [\n    $datastore->key('Person', 'Bob'),\n    $datastore->key('Person', 'John')\n];\n\n$datastore->deleteBatch($keys);"}],"resources":[{"title":"Commit API documentation","link":"https:\/\/cloud.google.com\/datastore\/docs\/reference\/rest\/v1\/projects\/commit"}],"params":[{"name":"keys","description":"<p>The identifiers to delete.<\/p>","types":["<a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key[]<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.baseVersion","description":"<p>Provides concurrency control. The version of the entity that this mutation is being applied to. If this does not match the current version on the server, the mutation conflicts.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":"<p><a href=\"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/projects\/commit#response-body\">Response Body<\/a><\/p>"}]},{"id":"lookup","type":"instance","name":"lookup","source":"Datastore\/src\/DatastoreClient.php#L933","description":"<p>Retrieve an entity from the datastore<\/p>\n<p>To lookup an entity inside a transaction, use\n<a data-custom-type=\"datastore\/transaction\" data-method=\"lookup\">Google\\Cloud\\Datastore\\Transaction::lookup()<\/a>.<\/p>","examples":[{"caption":"","code":"$key = $datastore->key('Person', 'Bob');\n\n$entity = $datastore->lookup($key);\nif (!is_null($entity)) {\n    echo $entity['firstName']; \/\/ 'Bob'\n}"}],"resources":[{"title":"Lookup API documentation","link":"https:\/\/cloud.google.com\/datastore\/docs\/reference\/rest\/v1\/projects\/lookup"}],"params":[{"name":"key","description":"<p>The identifier to use to locate a desired entity.<\/p>","types":["<a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.readConsistency","description":"<p>See <a href=\"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/ReadOptions#ReadConsistency\">ReadConsistency<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.className","description":"<p>If set, the given class will be returned. Value must be the name of a class implementing <a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface<\/a>. <strong>Defaults to<\/strong> <a data-custom-type=\"datastore\/entity\">Google\\Cloud\\Datastore\\Entity<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"lookupBatch","type":"instance","name":"lookupBatch","source":"Datastore\/src\/DatastoreClient.php#L985","description":"<p>Get multiple entities<\/p>\n<p>To lookup entities inside a transaction, use\n<a data-custom-type=\"datastore\/transaction\" data-method=\"lookupBatch\">Google\\Cloud\\Datastore\\Transaction::lookupBatch()<\/a>.<\/p>","examples":[{"caption":"","code":"$keys = [\n    $datastore->key('Person', 'Bob'),\n    $datastore->key('Person', 'John')\n];\n\n$entities = $datastore->lookupBatch($keys);\n\nforeach ($entities['found'] as $entity) {\n    echo $entity['firstName'] . PHP_EOL;\n}"}],"resources":[{"title":"Lookup API documentation","link":"https:\/\/cloud.google.com\/datastore\/docs\/reference\/rest\/v1\/projects\/lookup"}],"params":[{"name":"keys","description":"<p>The identifiers to look up.<\/p>","types":["<a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key[]<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.readConsistency","description":"<p>See <a href=\"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/ReadOptions#ReadConsistency\">ReadConsistency<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.className","description":"<p>If a string, the given class will be returned. Value must be the name of a class implementing <a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface<\/a>. If an array is given, it must be an associative array, where the key is a Kind and the value must implement <a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface<\/a>. <strong>Defaults to<\/strong> <a data-custom-type=\"datastore\/entity\">Google\\Cloud\\Datastore\\Entity<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.sort","description":"<p>If set to true, results in each set will be sorted to match the order given in $keys. <strong>Defaults to<\/strong> <code>false<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":"<p>Returns an array with keys [<code>found<\/code>, <code>missing<\/code>, and <code>deferred<\/code>].\nMembers of <code>found<\/code> will be instance of\n<a data-custom-type=\"datastore\/entity\">Google\\Cloud\\Datastore\\Entity<\/a>. Members of <code>missing<\/code> and\n<code>deferred<\/code> will be instance of <a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key<\/a>.<\/p>"}]},{"id":"query","type":"instance","name":"query","source":"Datastore\/src\/DatastoreClient.php#L1004","description":"<p>Create a Query object.<\/p>\n<p>The Query class can be used as a builder, or it can accept a query\nrepresentation at instantiation.<\/p>","examples":[{"caption":"","code":"$query = $datastore->query();"}],"resources":[],"params":[{"name":"query","description":"<p><a href=\"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/projects\/runQuery#query\">Query<\/a><\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/query\/query\">Google\\Cloud\\Datastore\\Query\\Query<\/a>"],"description":""}]},{"id":"gqlQuery","type":"instance","name":"gqlQuery","source":"Datastore\/src\/DatastoreClient.php#L1079","description":"<p>Create a GqlQuery object.<\/p>\n<p>Returns a Query object which can be executed using\n<a data-custom-type=\"datastore\/datastoreclient\" data-method=\"runQuery\">Google\\Cloud\\Datastore\\DatastoreClient::runQuery()<\/a>.<\/p>","examples":[{"caption":"","code":"$query = $datastore->gqlQuery('SELECT * FROM Companies');"},{"caption":"<p>Literals must be provided as bound parameters by default:<\/p>","code":"$query = $datastore->gqlQuery('SELECT * FROM Companies WHERE companyName = @companyName', [\n    'bindings' => [\n        'companyName' => 'Google'\n    ]\n]);"},{"caption":"<p>Positional binding is also supported:<\/p>","code":"$query = $datastore->gqlQuery('SELECT * FROM Companies WHERE companyName = @1 LIMIT 1', [\n    'bindings' => [\n        'Google'\n    ]\n]);"},{"caption":"<p>While not recommended, you can use literals in your query string:<\/p>","code":"$query = $datastore->gqlQuery('SELECT * FROM Companies WHERE companyName = \\'Google\\'', [\n    'allowLiterals' => true\n]);"},{"caption":"<p>Using cursors as query bindings:<\/p>","code":"$cursor = $datastore->cursor($cursorValue);\n\n$query = $datastore->gqlQuery('SELECT * FROM Companies OFFSET @offset', [\n    'bindings' => [\n        'offset' => $cursor\n    ]\n]);"}],"resources":[],"params":[{"name":"query","description":"<p>The <a href=\"https:\/\/cloud.google.com\/datastore\/docs\/apis\/gql\/gql_reference\">GQL Query<\/a> string.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.allowLiterals","description":"<p>Whether literal values will be allowed in the query string. Parameter binding is strongly encouraged over literals. <strong>Defaults to<\/strong> <code>false<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"options.bindings","description":"<p>An array of values to bind to the query string. Queries using Named Bindings should provide a key\/value set, while queries using Positional Bindings must provide a simple array. Query cursors may be provided using instances of <a data-custom-type=\"datastore\/cursor\">Google\\Cloud\\Datastore\\Cursor<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.readConsistency","description":"<p>See <a href=\"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/ReadOptions#ReadConsistency\">ReadConsistency<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/query\/gqlquery\">Google\\Cloud\\Datastore\\Query\\GqlQuery<\/a>"],"description":""}]},{"id":"runQuery","type":"instance","name":"runQuery","source":"Datastore\/src\/DatastoreClient.php#L1114","description":"<p>Run a query and return entities<\/p>\n<p>To query datastore inside a transaction, use\n<a data-custom-type=\"datastore\/transaction\" data-method=\"runQuery\">Google\\Cloud\\Datastore\\Transaction::runQuery()<\/a>.<\/p>","examples":[{"caption":"","code":"$result = $datastore->runQuery($query);\n\nforeach ($result as $entity) {\n    echo $entity['firstName'];\n}"}],"resources":[{"title":"RunQuery API documentation","link":"https:\/\/cloud.google.com\/datastore\/docs\/reference\/rest\/v1\/projects\/runQuery"}],"params":[{"name":"query","description":"<p>A query object.<\/p>","types":["<a data-custom-type=\"datastore\/query\/queryinterface\">Google\\Cloud\\Datastore\\Query\\QueryInterface<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.className","description":"<p>If set, the given class will be returned. Value must be the name of a class implementing <a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface<\/a>. <strong>Defaults to<\/strong> <a data-custom-type=\"datastore\/entity\">Google\\Cloud\\Datastore\\Entity<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.readConsistency","description":"<p>See <a href=\"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/ReadOptions#ReadConsistency\">ReadConsistency<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/entityiterator\">Google\\Cloud\\Datastore\\EntityIterator<\/a>&lt;<a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface<\/a>&gt;"],"description":""}]}]}