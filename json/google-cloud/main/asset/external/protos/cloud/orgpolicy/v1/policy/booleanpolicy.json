{"id":"asset\/external\/protos\/cloud\/orgpolicy\/v1\/policy\/booleanpolicy","type":"","title":"Google\\Cloud\\OrgPolicy\\V1\\Policy\\BooleanPolicy","name":"BooleanPolicy","description":"<p>Used in <code>policy_type<\/code> to specify how <code>boolean_policy<\/code> will behave at this\nresource.<\/p>\n<p>Generated from protobuf message <code>google.cloud.orgpolicy.v1.Policy.BooleanPolicy<\/code><\/p>\n<p>Extends <a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/Message.php\" target=\"_blank\">Google\\Protobuf\\Internal\\Message<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"BooleanPolicy.php#L112","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"data","description":"<p>Optional. Data for populating the Message object.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"data.enforced\n","description":"<p>If <code>true<\/code>, then the <code>Policy<\/code> is enforced. If <code>false<\/code>, then any configuration is acceptable. Suppose you have a <code>Constraint<\/code> <code>constraints\/compute.disableSerialPortAccess<\/code> with <code>constraint_default<\/code> set to <code>ALLOW<\/code>. A <code>Policy<\/code> for that <code>Constraint<\/code> exhibits the following behavior: - If the <code>Policy<\/code> at this resource has enforced set to <code>false<\/code>, serial port connection attempts will be allowed. - If the <code>Policy<\/code> at this resource has enforced set to <code>true<\/code>, serial port connection attempts will be refused. - If the <code>Policy<\/code> at this resource is <code>RestoreDefault<\/code>, serial port connection attempts will be allowed. - If no <code>Policy<\/code> is set at this resource or anywhere higher in the resource hierarchy, serial port connection attempts will be allowed. - If no <code>Policy<\/code> is set at this resource, but one exists higher in the resource hierarchy, the behavior is as if the<code>Policy<\/code> were set at this resource. The following examples demonstrate the different possible layerings: Example 1 (nearest <code>Constraint<\/code> wins): <code>organizations\/foo<\/code> has a <code>Policy<\/code> with: {enforced: false} <code>projects\/bar<\/code> has no <code>Policy<\/code> set. The constraint at <code>projects\/bar<\/code> and <code>organizations\/foo<\/code> will not be enforced. Example 2 (enforcement gets replaced): <code>organizations\/foo<\/code> has a <code>Policy<\/code> with: {enforced: false} <code>projects\/bar<\/code> has a <code>Policy<\/code> with: {enforced: true} The constraint at <code>organizations\/foo<\/code> is not enforced. The constraint at <code>projects\/bar<\/code> is enforced. Example 3 (RestoreDefault): <code>organizations\/foo<\/code> has a <code>Policy<\/code> with: {enforced: true} <code>projects\/bar<\/code> has a <code>Policy<\/code> with: {RestoreDefault: {}} The constraint at <code>organizations\/foo<\/code> is enforced. The constraint at <code>projects\/bar<\/code> is not enforced, because <code>constraint_default<\/code> for the <code>Constraint<\/code> is <code>ALLOW<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"getEnforced","type":"instance","name":"getEnforced","source":"BooleanPolicy.php#L161","description":"<p>If <code>true<\/code>, then the <code>Policy<\/code> is enforced. If <code>false<\/code>, then any\nconfiguration is acceptable.<\/p>\n<p>Suppose you have a <code>Constraint<\/code>\n<code>constraints\/compute.disableSerialPortAccess<\/code> with <code>constraint_default<\/code>\nset to <code>ALLOW<\/code>. A <code>Policy<\/code> for that <code>Constraint<\/code> exhibits the following\nbehavior:<\/p>\n<ul>\n<li>If the <code>Policy<\/code> at this resource has enforced set to <code>false<\/code>, serial\nport connection attempts will be allowed.<\/li>\n<li>If the <code>Policy<\/code> at this resource has enforced set to <code>true<\/code>, serial\nport connection attempts will be refused.<\/li>\n<li>If the <code>Policy<\/code> at this resource is <code>RestoreDefault<\/code>, serial port\nconnection attempts will be allowed.<\/li>\n<li>If no <code>Policy<\/code> is set at this resource or anywhere higher in the\nresource hierarchy, serial port connection attempts will be allowed.<\/li>\n<li>If no <code>Policy<\/code> is set at this resource, but one exists higher in the\nresource hierarchy, the behavior is as if the<code>Policy<\/code> were set at\nthis resource.\nThe following examples demonstrate the different possible layerings:\nExample 1 (nearest <code>Constraint<\/code> wins):\n<code>organizations\/foo<\/code> has a <code>Policy<\/code> with:\n{enforced: false}\n<code>projects\/bar<\/code> has no <code>Policy<\/code> set.\nThe constraint at <code>projects\/bar<\/code> and <code>organizations\/foo<\/code> will not be\nenforced.\nExample 2 (enforcement gets replaced):\n<code>organizations\/foo<\/code> has a <code>Policy<\/code> with:\n{enforced: false}\n<code>projects\/bar<\/code> has a <code>Policy<\/code> with:\n{enforced: true}\nThe constraint at <code>organizations\/foo<\/code> is not enforced.\nThe constraint at <code>projects\/bar<\/code> is enforced.\nExample 3 (RestoreDefault):\n<code>organizations\/foo<\/code> has a <code>Policy<\/code> with:\n{enforced: true}\n<code>projects\/bar<\/code> has a <code>Policy<\/code> with:\n{RestoreDefault: {}}\nThe constraint at <code>organizations\/foo<\/code> is enforced.\nThe constraint at <code>projects\/bar<\/code> is not enforced, because\n<code>constraint_default<\/code> for the <code>Constraint<\/code> is <code>ALLOW<\/code>.<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>bool enforced = 1;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"setEnforced","type":"instance","name":"setEnforced","source":"BooleanPolicy.php#L211","description":"<p>If <code>true<\/code>, then the <code>Policy<\/code> is enforced. If <code>false<\/code>, then any\nconfiguration is acceptable.<\/p>\n<p>Suppose you have a <code>Constraint<\/code>\n<code>constraints\/compute.disableSerialPortAccess<\/code> with <code>constraint_default<\/code>\nset to <code>ALLOW<\/code>. A <code>Policy<\/code> for that <code>Constraint<\/code> exhibits the following\nbehavior:<\/p>\n<ul>\n<li>If the <code>Policy<\/code> at this resource has enforced set to <code>false<\/code>, serial\nport connection attempts will be allowed.<\/li>\n<li>If the <code>Policy<\/code> at this resource has enforced set to <code>true<\/code>, serial\nport connection attempts will be refused.<\/li>\n<li>If the <code>Policy<\/code> at this resource is <code>RestoreDefault<\/code>, serial port\nconnection attempts will be allowed.<\/li>\n<li>If no <code>Policy<\/code> is set at this resource or anywhere higher in the\nresource hierarchy, serial port connection attempts will be allowed.<\/li>\n<li>If no <code>Policy<\/code> is set at this resource, but one exists higher in the\nresource hierarchy, the behavior is as if the<code>Policy<\/code> were set at\nthis resource.\nThe following examples demonstrate the different possible layerings:\nExample 1 (nearest <code>Constraint<\/code> wins):\n<code>organizations\/foo<\/code> has a <code>Policy<\/code> with:\n{enforced: false}\n<code>projects\/bar<\/code> has no <code>Policy<\/code> set.\nThe constraint at <code>projects\/bar<\/code> and <code>organizations\/foo<\/code> will not be\nenforced.\nExample 2 (enforcement gets replaced):\n<code>organizations\/foo<\/code> has a <code>Policy<\/code> with:\n{enforced: false}\n<code>projects\/bar<\/code> has a <code>Policy<\/code> with:\n{enforced: true}\nThe constraint at <code>organizations\/foo<\/code> is not enforced.\nThe constraint at <code>projects\/bar<\/code> is enforced.\nExample 3 (RestoreDefault):\n<code>organizations\/foo<\/code> has a <code>Policy<\/code> with:\n{enforced: true}\n<code>projects\/bar<\/code> has a <code>Policy<\/code> with:\n{RestoreDefault: {}}\nThe constraint at <code>organizations\/foo<\/code> is enforced.\nThe constraint at <code>projects\/bar<\/code> is not enforced, because\n<code>constraint_default<\/code> for the <code>Constraint<\/code> is <code>ALLOW<\/code>.<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>bool enforced = 1;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>If <code>true<\/code>, then the <code>Policy<\/code> is enforced. If <code>false<\/code>, then any\nconfiguration is acceptable.<\/p>\n<p>Suppose you have a <code>Constraint<\/code>\n<code>constraints\/compute.disableSerialPortAccess<\/code> with <code>constraint_default<\/code>\nset to <code>ALLOW<\/code>. A <code>Policy<\/code> for that <code>Constraint<\/code> exhibits the following\nbehavior:<\/p>\n<ul>\n<li>If the <code>Policy<\/code> at this resource has enforced set to <code>false<\/code>, serial\nport connection attempts will be allowed.<\/li>\n<li>If the <code>Policy<\/code> at this resource has enforced set to <code>true<\/code>, serial\nport connection attempts will be refused.<\/li>\n<li>If the <code>Policy<\/code> at this resource is <code>RestoreDefault<\/code>, serial port\nconnection attempts will be allowed.<\/li>\n<li>If no <code>Policy<\/code> is set at this resource or anywhere higher in the\nresource hierarchy, serial port connection attempts will be allowed.<\/li>\n<li>If no <code>Policy<\/code> is set at this resource, but one exists higher in the\nresource hierarchy, the behavior is as if the<code>Policy<\/code> were set at\nthis resource.\nThe following examples demonstrate the different possible layerings:\nExample 1 (nearest <code>Constraint<\/code> wins):\n<code>organizations\/foo<\/code> has a <code>Policy<\/code> with:\n{enforced: false}\n<code>projects\/bar<\/code> has no <code>Policy<\/code> set.\nThe constraint at <code>projects\/bar<\/code> and <code>organizations\/foo<\/code> will not be\nenforced.\nExample 2 (enforcement gets replaced):\n<code>organizations\/foo<\/code> has a <code>Policy<\/code> with:\n{enforced: false}\n<code>projects\/bar<\/code> has a <code>Policy<\/code> with:\n{enforced: true}\nThe constraint at <code>organizations\/foo<\/code> is not enforced.\nThe constraint at <code>projects\/bar<\/code> is enforced.\nExample 3 (RestoreDefault):\n<code>organizations\/foo<\/code> has a <code>Policy<\/code> with:\n{enforced: true}\n<code>projects\/bar<\/code> has a <code>Policy<\/code> with:\n{RestoreDefault: {}}\nThe constraint at <code>organizations\/foo<\/code> is enforced.\nThe constraint at <code>projects\/bar<\/code> is not enforced, because\n<code>constraint_default<\/code> for the <code>Constraint<\/code> is <code>ALLOW<\/code>.<\/li>\n<\/ul>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"asset\/external\/protos\/cloud\/orgpolicy\/v1\/policy\/booleanpolicy\">Google\\Cloud\\OrgPolicy\\V1\\Policy\\BooleanPolicy<\/a>"],"description":""}]}]}