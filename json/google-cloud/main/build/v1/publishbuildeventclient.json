{"id":"build\/v1\/publishbuildeventclient","type":"","title":"Google\\Cloud\\Build\\V1\\PublishBuildEventClient","name":"PublishBuildEventClient","description":"<p>Service Description: A service for publishing BuildEvents. BuildEvents are generated by Build\nSystems to record actions taken during a Build. Events occur in streams,\nare identified by a StreamId, and ordered by sequence number in a stream.<\/p>\n<p>A Build may contain several streams of BuildEvents, depending on the systems\nthat are involved in the Build. Some BuildEvents are used to declare the\nbeginning and end of major portions of a Build; these are called\nLifecycleEvents, and are used (for example) to indicate the beginning or end\nof a Build, and the beginning or end of an Invocation attempt (there can be\nmore than 1 Invocation in a Build if, for example, a failure occurs somewhere\nand it needs to be retried).<\/p>\n<p>Other, build-tool events represent actions taken by the Build tool, such as\ntarget objects produced via compilation, tests run, et cetera. There could be\nmore than one build tool stream for an invocation attempt of a build.<\/p>\n<p>This class provides the ability to make remote calls to the backing service through method\ncalls that map to API methods. Sample code to get started:<\/p>\n<pre><code>$publishBuildEventClient = new PublishBuildEventClient();\ntry {\n    $orderedBuildEvent = new OrderedBuildEvent();\n    $projectId = 'project_id';\n    $request = new PublishBuildToolEventStreamRequest();\n    $request-&gt;setOrderedBuildEvent($orderedBuildEvent);\n    $request-&gt;setProjectId($projectId);\n    \/\/ Write all requests to the server, then read all responses until the\n    \/\/ stream is complete\n    $requests = [\n        $request,\n    ];\n    $stream = $publishBuildEventClient-&gt;publishBuildToolEventStream();\n    $stream-&gt;writeAll($requests);\n    foreach ($stream-&gt;closeWriteAndReadAll() as $element) {\n        \/\/ doSomethingWith($element);\n    }\n    \/\/ Alternatively:\n    \/\/ Write requests individually, making read() calls if\n    \/\/ required. Call closeWrite() once writes are complete, and read the\n    \/\/ remaining responses from the server.\n    $requests = [\n        $request,\n    ];\n    $stream = $publishBuildEventClient-&gt;publishBuildToolEventStream();\n    foreach ($requests as $request) {\n        $stream-&gt;write($request);\n        \/\/ if required, read a single response from the stream\n        $element = $stream-&gt;read();\n        \/\/ doSomethingWith($element)\n    }\n    $stream-&gt;closeWrite();\n    $element = $stream-&gt;read();\n    while (!is_null($element)) {\n        \/\/ doSomethingWith($element)\n        $element = $stream-&gt;read();\n    }\n} finally {\n    $publishBuildEventClient-&gt;close();\n}<\/code><\/pre>\n<p>Extends <a data-custom-type=\"build\/v1\/gapic\/publishbuildeventgapicclient\">Google\\Cloud\\Build\\V1\\Gapic\\PublishBuildEventGapicClient<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Build\/src\/V1\/Gapic\/PublishBuildEventGapicClient.php#L215","description":"<p>Constructor.<\/p>\n\nImplemented in <a data-custom-type=\"build\/v1\/gapic\/publishbuildeventgapicclient\">Google\\Cloud\\Build\\V1\\Gapic\\PublishBuildEventGapicClient<\/a>","examples":[],"resources":[],"params":[{"name":"options","description":"<p>Optional. Options for configuring the service API wrapper.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options.serviceAddress\n","description":"<p><strong>Deprecated<\/strong>. This option will be removed in a future major release. Please utilize the <code>$apiEndpoint<\/code> option instead.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.apiEndpoint\n","description":"<p>The address of the API remote host. May optionally include the port, formatted as &quot;<uri>:<port>&quot;. Default 'buildeventservice.googleapis.com:443'.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.credentials\n","description":"<p>The credentials to be used by the client to authorize API calls. This option accepts either a path to a credentials file, or a decoded credentials file as a PHP array. <em>Advanced usage<\/em>: In addition, this option can also accept a pre-constructed <a href=\"https:\/\/github.com\/googleapis\/google-auth-library-php\/tree\/v1.23.1\/src\/FetchAuthTokenInterface.php\" target=\"_blank\">Google\\Auth\\FetchAuthTokenInterface<\/a> object or <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/CredentialsWrapper.html\" target=\"_blank\">Google\\ApiCore\\CredentialsWrapper<\/a> object. Note that when one of these objects are provided, any settings in $credentialsConfig will be ignored.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>","<a href=\"https:\/\/github.com\/googleapis\/google-auth-library-php\/tree\/v1.23.1\/src\/FetchAuthTokenInterface.php\" target=\"_blank\">Google\\Auth\\FetchAuthTokenInterface<\/a>","<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/CredentialsWrapper.html\" target=\"_blank\">Google\\ApiCore\\CredentialsWrapper<\/a>"],"optional":null,"nullable":null},{"name":"options.credentialsConfig\n","description":"<p>Options used to configure credentials, including auth token caching, for the client. For a full list of supporting configuration options, see <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/CredentialsWrapper.html\" target=\"_blank\">Google\\ApiCore\\CredentialsWrapper::build()<\/a> .<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.disableRetries\n","description":"<p>Determines whether or not retries defined by the client configuration should be disabled. Defaults to <code>false<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"options.clientConfig\n","description":"<p>Client method configuration, including retry settings. This option can be either a path to a JSON file, or a PHP array containing the decoded JSON data. By default this settings points to the default client config file, which is provided in the resources folder.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.transport\n","description":"<p>The transport used for executing network requests. May be either the string <code>rest<\/code> or <code>grpc<\/code>. Defaults to <code>grpc<\/code> if gRPC support is detected on the system. <em>Advanced usage<\/em>: Additionally, it is possible to pass in an already instantiated <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/Transport\/TransportInterface.html\" target=\"_blank\">Google\\ApiCore\\Transport\\TransportInterface<\/a> object. Note that when this object is provided, any settings in $transportConfig, and any $serviceAddress setting, will be ignored.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/Transport\/TransportInterface.html\" target=\"_blank\">Google\\ApiCore\\Transport\\TransportInterface<\/a>"],"optional":null,"nullable":null},{"name":"options.transportConfig\n","description":"<p>Configuration options that will be used to construct the transport. Options for each supported transport type should be passed in a key for that transport. For example: $transportConfig = [ 'grpc' =&gt; [...], 'rest' =&gt; [...], ]; See the <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/Transport\/GrpcTransport.html\" target=\"_blank\">Google\\ApiCore\\Transport\\GrpcTransport::build()<\/a> and <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/Transport\/RestTransport.html\" target=\"_blank\">Google\\ApiCore\\Transport\\RestTransport::build()<\/a> methods for the supported options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.clientCertSource\n","description":"<p>A callable which returns the client cert as a string. This can be used to provide a certificate and private key to the transport layer for mTLS.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.callable.php\" target=\"_blank\">callable<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ValidationException","description":""}],"returns":[]},{"id":"publishBuildToolEventStream","type":"instance","name":"publishBuildToolEventStream","source":"Build\/src\/V1\/Gapic\/PublishBuildEventGapicClient.php#L280","description":"<p>Publish build tool events belonging to the same stream to a backend job\nusing bidirectional streaming.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$publishBuildEventClient = new PublishBuildEventClient();\ntry {\n    $orderedBuildEvent = new OrderedBuildEvent();\n    $projectId = 'project_id';\n    $request = new PublishBuildToolEventStreamRequest();\n    $request-&gt;setOrderedBuildEvent($orderedBuildEvent);\n    $request-&gt;setProjectId($projectId);\n    \/\/ Write all requests to the server, then read all responses until the\n    \/\/ stream is complete\n    $requests = [\n        $request,\n    ];\n    $stream = $publishBuildEventClient-&gt;publishBuildToolEventStream();\n    $stream-&gt;writeAll($requests);\n    foreach ($stream-&gt;closeWriteAndReadAll() as $element) {\n        \/\/ doSomethingWith($element);\n    }\n    \/\/ Alternatively:\n    \/\/ Write requests individually, making read() calls if\n    \/\/ required. Call closeWrite() once writes are complete, and read the\n    \/\/ remaining responses from the server.\n    $requests = [\n        $request,\n    ];\n    $stream = $publishBuildEventClient-&gt;publishBuildToolEventStream();\n    foreach ($requests as $request) {\n        $stream-&gt;write($request);\n        \/\/ if required, read a single response from the stream\n        $element = $stream-&gt;read();\n        \/\/ doSomethingWith($element)\n    }\n    $stream-&gt;closeWrite();\n    $element = $stream-&gt;read();\n    while (!is_null($element)) {\n        \/\/ doSomethingWith($element)\n        $element = $stream-&gt;read();\n    }\n} finally {\n    $publishBuildEventClient-&gt;close();\n}<\/code><\/pre>\n\nImplemented in <a data-custom-type=\"build\/v1\/gapic\/publishbuildeventgapicclient\">Google\\Cloud\\Build\\V1\\Gapic\\PublishBuildEventGapicClient<\/a>","examples":[],"resources":[],"params":[{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.timeoutMillis\n","description":"<p>Timeout to use for this call.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/BidiStream.html\" target=\"_blank\">Google\\ApiCore\\BidiStream<\/a>"],"description":""}]},{"id":"publishLifecycleEvent","type":"instance","name":"publishLifecycleEvent","source":"Build\/src\/V1\/Gapic\/PublishBuildEventGapicClient.php#L346","description":"<p>Publish a build event stating the new state of a build (typically from the\nbuild queue). The BuildEnqueued event must be publishd before all other\nevents for the same build ID.<\/p>\n<p>The backend will persist the event and deliver it to registered frontend\njobs immediately without batching.<\/p>\n<p>The commit status of the request is reported by the RPC's util_status()\nfunction. The error code is the canoncial error code defined in\n\/\/util\/task\/codes.proto.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$publishBuildEventClient = new PublishBuildEventClient();\ntry {\n    $buildEvent = new OrderedBuildEvent();\n    $projectId = 'project_id';\n    $publishBuildEventClient-&gt;publishLifecycleEvent($buildEvent, $projectId);\n} finally {\n    $publishBuildEventClient-&gt;close();\n}<\/code><\/pre>\n\nImplemented in <a data-custom-type=\"build\/v1\/gapic\/publishbuildeventgapicclient\">Google\\Cloud\\Build\\V1\\Gapic\\PublishBuildEventGapicClient<\/a>","examples":[],"resources":[],"params":[{"name":"buildEvent","description":"<p>Required. The lifecycle build event. If this is a build tool event, the RPC\nwill fail with INVALID_REQUEST.<\/p>","types":["<a data-custom-type=\"build\/v1\/orderedbuildevent\">Google\\Cloud\\Build\\V1\\OrderedBuildEvent<\/a>"],"optional":false,"nullable":null},{"name":"projectId","description":"<p>Required. The project this build is associated with.\nThis should match the project used for the initial call to\nPublishLifecycleEvent (containing a BuildEnqueued message).<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.serviceLevel\n","description":"<p>The interactivity of this build. For allowed values, use constants defined on <a data-custom-type=\"build\/v1\/publishlifecycleeventrequest\/servicelevel\">Google\\Cloud\\Build\\V1\\PublishLifecycleEventRequest\\ServiceLevel<\/a><\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.streamTimeout\n","description":"<p>If the next event for this build or invocation (depending on the event type) hasn't been published after this duration from when {build_event} is written to BES, consider this stream expired. If this field is not set, BES backend will use its own default value.<\/p>","types":["<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Duration.php\" target=\"_blank\">Google\\Protobuf\\Duration<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.notificationKeywords\n","description":"<p>Additional information about a build request. These are define by the event publishers, and the Build Event Service does not validate or interpret them. They are used while notifying internal systems of new builds and invocations if the OrderedBuildEvent.event type is BuildEnqueued\/InvocationAttemptStarted.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string[]<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.checkPrecedingLifecycleEventsPresent\n","description":"<p>Whether to require a previously received matching parent lifecycle event for the current request's event before continuing processing. - InvocationAttemptStarted and BuildFinished events require a BuildEnqueued parent event. - InvocationAttemptFinished events require an InvocationAttemptStarted parent event.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[]}]}