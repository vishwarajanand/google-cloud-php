{"id":"securitycenter\/v1p1beta1\/notificationconfig\/streamingconfig","type":"","title":"Google\\Cloud\\SecurityCenter\\V1p1beta1\\NotificationConfig\\StreamingConfig","name":"StreamingConfig","description":"<p>The config for streaming-based notifications, which send each event as soon\nas it is detected.<\/p>\n<p>Generated from protobuf message <code>google.cloud.securitycenter.v1p1beta1.NotificationConfig.StreamingConfig<\/code><\/p>\n<p>Extends <a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/Message.php\" target=\"_blank\">Google\\Protobuf\\Internal\\Message<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"SecurityCenter\/src\/V1p1beta1\/NotificationConfig\/StreamingConfig.php#L66","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"data","description":"<p>Optional. Data for populating the Message object.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"data.filter\n","description":"<p>Expression that defines the filter to apply across create\/update events of assets or findings as specified by the event type. The expression is a list of zero or more restrictions combined via logical operators <code>AND<\/code> and <code>OR<\/code>. Parentheses are supported, and <code>OR<\/code> has higher precedence than <code>AND<\/code>. Restrictions have the form <code>&lt;field&gt; &lt;operator&gt; &lt;value&gt;<\/code> and may have a <code>-<\/code> character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: <em> <code>=<\/code> for all value types. <\/em> <code>&gt;<\/code>, <code>&lt;<\/code>, <code>&gt;=<\/code>, <code>&lt;=<\/code> for integer values. <em> <code>:<\/code>, meaning substring matching, for strings. The supported value types are: <\/em> string literals in quotes. <em> integer literals without quotes. <\/em> boolean literals <code>true<\/code> and <code>false<\/code> without quotes.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"getFilter","type":"instance","name":"getFilter","source":"SecurityCenter\/src\/V1p1beta1\/NotificationConfig\/StreamingConfig.php#L92","description":"<p>Expression that defines the filter to apply across create\/update events\nof assets or findings as specified by the event type. The expression is a\nlist of zero or more restrictions combined via logical operators <code>AND<\/code>\nand <code>OR<\/code>. Parentheses are supported, and <code>OR<\/code> has higher precedence than\n<code>AND<\/code>.<\/p>\n<p>Restrictions have the form <code>&lt;field&gt; &lt;operator&gt; &lt;value&gt;<\/code> and may have a\n<code>-<\/code> character in front of them to indicate negation. The fields map to\nthose defined in the corresponding resource.\nThe supported operators are:<\/p>\n<ul>\n<li><code>=<\/code> for all value types.<\/li>\n<li><code>&gt;<\/code>, <code>&lt;<\/code>, <code>&gt;=<\/code>, <code>&lt;=<\/code> for integer values.<\/li>\n<li><code>:<\/code>, meaning substring matching, for strings.\nThe supported value types are:<\/li>\n<li>string literals in quotes.<\/li>\n<li>integer literals without quotes.<\/li>\n<li>boolean literals <code>true<\/code> and <code>false<\/code> without quotes.<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>string filter = 1;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setFilter","type":"instance","name":"setFilter","source":"SecurityCenter\/src\/V1p1beta1\/NotificationConfig\/StreamingConfig.php#L119","description":"<p>Expression that defines the filter to apply across create\/update events\nof assets or findings as specified by the event type. The expression is a\nlist of zero or more restrictions combined via logical operators <code>AND<\/code>\nand <code>OR<\/code>. Parentheses are supported, and <code>OR<\/code> has higher precedence than\n<code>AND<\/code>.<\/p>\n<p>Restrictions have the form <code>&lt;field&gt; &lt;operator&gt; &lt;value&gt;<\/code> and may have a\n<code>-<\/code> character in front of them to indicate negation. The fields map to\nthose defined in the corresponding resource.\nThe supported operators are:<\/p>\n<ul>\n<li><code>=<\/code> for all value types.<\/li>\n<li><code>&gt;<\/code>, <code>&lt;<\/code>, <code>&gt;=<\/code>, <code>&lt;=<\/code> for integer values.<\/li>\n<li><code>:<\/code>, meaning substring matching, for strings.\nThe supported value types are:<\/li>\n<li>string literals in quotes.<\/li>\n<li>integer literals without quotes.<\/li>\n<li>boolean literals <code>true<\/code> and <code>false<\/code> without quotes.<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>string filter = 1;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Expression that defines the filter to apply across create\/update events\nof assets or findings as specified by the event type. The expression is a\nlist of zero or more restrictions combined via logical operators <code>AND<\/code>\nand <code>OR<\/code>. Parentheses are supported, and <code>OR<\/code> has higher precedence than\n<code>AND<\/code>.<\/p>\n<p>Restrictions have the form <code>&lt;field&gt; &lt;operator&gt; &lt;value&gt;<\/code> and may have a\n<code>-<\/code> character in front of them to indicate negation. The fields map to\nthose defined in the corresponding resource.\nThe supported operators are:<\/p>\n<ul>\n<li><code>=<\/code> for all value types.<\/li>\n<li><code>&gt;<\/code>, <code>&lt;<\/code>, <code>&gt;=<\/code>, <code>&lt;=<\/code> for integer values.<\/li>\n<li><code>:<\/code>, meaning substring matching, for strings.\nThe supported value types are:<\/li>\n<li>string literals in quotes.<\/li>\n<li>integer literals without quotes.<\/li>\n<li>boolean literals <code>true<\/code> and <code>false<\/code> without quotes.<\/li>\n<\/ul>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"securitycenter\/v1p1beta1\/notificationconfig\/streamingconfig\">Google\\Cloud\\SecurityCenter\\V1p1beta1\\NotificationConfig\\StreamingConfig<\/a>"],"description":""}]}]}