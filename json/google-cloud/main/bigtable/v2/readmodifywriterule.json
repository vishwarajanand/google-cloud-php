{"id":"bigtable\/v2\/readmodifywriterule","type":"","title":"Google\\Cloud\\Bigtable\\V2\\ReadModifyWriteRule","name":"ReadModifyWriteRule","description":"<p>Specifies an atomic read\/modify\/write operation on the latest value of the\nspecified column.<\/p>\n<p>Generated from protobuf message <code>google.bigtable.v2.ReadModifyWriteRule<\/code><\/p>\n<p>Extends <a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/Message.php\" target=\"_blank\">Google\\Protobuf\\Internal\\Message<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Bigtable\/src\/V2\/ReadModifyWriteRule.php#L60","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"data","description":"<p>Optional. Data for populating the Message object.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"data.family_name\n","description":"<p>The name of the family to which the read\/modify\/write should be applied. Must match <code>[-_.a-zA-Z0-9]+<\/code><\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"data.column_qualifier\n","description":"<p>The qualifier of the column to which the read\/modify\/write should be applied. Can be any byte string, including the empty string.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"data.append_value\n","description":"<p>Rule specifying that <code>append_value<\/code> be appended to the existing value. If the targeted cell is unset, it will be treated as containing the empty string.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"data.increment_amount\n","description":"<p>Rule specifying that <code>increment_amount<\/code> be added to the existing value. If the targeted cell is unset, it will be treated as containing a zero. Otherwise, the targeted cell must contain an 8-byte value (interpreted as a 64-bit big-endian signed integer), or the entire request will fail.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"getFamilyName","type":"instance","name":"getFamilyName","source":"Bigtable\/src\/V2\/ReadModifyWriteRule.php#L72","description":"<p>The name of the family to which the read\/modify\/write should be applied.<\/p>\n<p>Must match <code>[-_.a-zA-Z0-9]+<\/code><\/p>\n<p>Generated from protobuf field <code>string family_name = 1;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setFamilyName","type":"instance","name":"setFamilyName","source":"Bigtable\/src\/V2\/ReadModifyWriteRule.php#L85","description":"<p>The name of the family to which the read\/modify\/write should be applied.<\/p>\n<p>Must match <code>[-_.a-zA-Z0-9]+<\/code><\/p>\n<p>Generated from protobuf field <code>string family_name = 1;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The name of the family to which the read\/modify\/write should be applied.<\/p>\n<p>Must match <code>[-_.a-zA-Z0-9]+<\/code><\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"bigtable\/v2\/readmodifywriterule\">Google\\Cloud\\Bigtable\\V2\\ReadModifyWriteRule<\/a>"],"description":""}]},{"id":"getColumnQualifier","type":"instance","name":"getColumnQualifier","source":"Bigtable\/src\/V2\/ReadModifyWriteRule.php#L101","description":"<p>The qualifier of the column to which the read\/modify\/write should be\napplied.<\/p>\n<p>Can be any byte string, including the empty string.<\/p>\n<p>Generated from protobuf field <code>bytes column_qualifier = 2;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setColumnQualifier","type":"instance","name":"setColumnQualifier","source":"Bigtable\/src\/V2\/ReadModifyWriteRule.php#L115","description":"<p>The qualifier of the column to which the read\/modify\/write should be\napplied.<\/p>\n<p>Can be any byte string, including the empty string.<\/p>\n<p>Generated from protobuf field <code>bytes column_qualifier = 2;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The qualifier of the column to which the read\/modify\/write should be\napplied.<\/p>\n<p>Can be any byte string, including the empty string.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"bigtable\/v2\/readmodifywriterule\">Google\\Cloud\\Bigtable\\V2\\ReadModifyWriteRule<\/a>"],"description":""}]},{"id":"getAppendValue","type":"instance","name":"getAppendValue","source":"Bigtable\/src\/V2\/ReadModifyWriteRule.php#L131","description":"<p>Rule specifying that <code>append_value<\/code> be appended to the existing value.<\/p>\n<p>If the targeted cell is unset, it will be treated as containing the\nempty string.<\/p>\n<p>Generated from protobuf field <code>bytes append_value = 3;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setAppendValue","type":"instance","name":"setAppendValue","source":"Bigtable\/src\/V2\/ReadModifyWriteRule.php#L150","description":"<p>Rule specifying that <code>append_value<\/code> be appended to the existing value.<\/p>\n<p>If the targeted cell is unset, it will be treated as containing the\nempty string.<\/p>\n<p>Generated from protobuf field <code>bytes append_value = 3;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Rule specifying that <code>append_value<\/code> be appended to the existing value.<\/p>\n<p>If the targeted cell is unset, it will be treated as containing the\nempty string.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"bigtable\/v2\/readmodifywriterule\">Google\\Cloud\\Bigtable\\V2\\ReadModifyWriteRule<\/a>"],"description":""}]},{"id":"getIncrementAmount","type":"instance","name":"getIncrementAmount","source":"Bigtable\/src\/V2\/ReadModifyWriteRule.php#L167","description":"<p>Rule specifying that <code>increment_amount<\/code> be added to the existing value.<\/p>\n<p>If the targeted cell is unset, it will be treated as containing a zero.\nOtherwise, the targeted cell must contain an 8-byte value (interpreted\nas a 64-bit big-endian signed integer), or the entire request will fail.<\/p>\n<p>Generated from protobuf field <code>int64 increment_amount = 4;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setIncrementAmount","type":"instance","name":"setIncrementAmount","source":"Bigtable\/src\/V2\/ReadModifyWriteRule.php#L187","description":"<p>Rule specifying that <code>increment_amount<\/code> be added to the existing value.<\/p>\n<p>If the targeted cell is unset, it will be treated as containing a zero.\nOtherwise, the targeted cell must contain an 8-byte value (interpreted\nas a 64-bit big-endian signed integer), or the entire request will fail.<\/p>\n<p>Generated from protobuf field <code>int64 increment_amount = 4;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Rule specifying that <code>increment_amount<\/code> be added to the existing value.<\/p>\n<p>If the targeted cell is unset, it will be treated as containing a zero.\nOtherwise, the targeted cell must contain an 8-byte value (interpreted\nas a 64-bit big-endian signed integer), or the entire request will fail.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"bigtable\/v2\/readmodifywriterule\">Google\\Cloud\\Bigtable\\V2\\ReadModifyWriteRule<\/a>"],"description":""}]},{"id":"getRule","type":"instance","name":"getRule","source":"Bigtable\/src\/V2\/ReadModifyWriteRule.php#L198","description":"","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]}]}