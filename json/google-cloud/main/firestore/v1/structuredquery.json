{"id":"firestore\/v1\/structuredquery","type":"","title":"Google\\Cloud\\Firestore\\V1\\StructuredQuery","name":"StructuredQuery","description":"<p>A Firestore query.<\/p>\n<p>Generated from protobuf message <code>google.firestore.v1.StructuredQuery<\/code><\/p>\n<p>Extends <a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/Message.php\" target=\"_blank\">Google\\Protobuf\\Internal\\Message<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Firestore\/src\/V1\/StructuredQuery.php#L187","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"data","description":"<p>Optional. Data for populating the Message object.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"data.select\n","description":"<p>The projection to return.<\/p>","types":["<a data-custom-type=\"firestore\/v1\/structuredquery\/projection\">Google\\Cloud\\Firestore\\V1\\StructuredQuery\\Projection<\/a>"],"optional":null,"nullable":null},{"name":"data.from\n","description":"<p>The collections to query.<\/p>","types":["<a data-custom-type=\"firestore\/v1\/structuredquery\/collectionselector\">Google\\Cloud\\Firestore\\V1\\StructuredQuery\\CollectionSelector[]<\/a>","<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/RepeatedField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\RepeatedField<\/a>"],"optional":null,"nullable":null},{"name":"data.where\n","description":"<p>The filter to apply.<\/p>","types":["<a data-custom-type=\"firestore\/v1\/structuredquery\/filter\">Google\\Cloud\\Firestore\\V1\\StructuredQuery\\Filter<\/a>"],"optional":null,"nullable":null},{"name":"data.order_by\n","description":"<p>The order to apply to the query results. Firestore allows callers to provide a full ordering, a partial ordering, or no ordering at all. In all cases, Firestore guarantees a stable ordering through the following rules: <em> The <code>order_by<\/code> is required to reference all fields used with an inequality filter. <\/em> All fields that are required to be in the <code>order_by<\/code> but are not already present are appended in lexicographical ordering of the field name. <em> If an order on <code>__name__<\/code> is not specified, it is appended by default. Fields are appended with the same sort direction as the last order specified, or 'ASCENDING' if no order was specified. For example: <\/em> <code>ORDER BY a<\/code> becomes <code>ORDER BY a ASC, __name__ ASC<\/code> <em> <code>ORDER BY a DESC<\/code> becomes <code>ORDER BY a DESC, __name__ DESC<\/code> <\/em> <code>WHERE a &gt; 1<\/code> becomes <code>WHERE a &gt; 1 ORDER BY a ASC, __name__ ASC<\/code> * <code>WHERE __name__ &gt; ... AND a &gt; 1<\/code> becomes <code>WHERE __name__ &gt; ... AND a &gt; 1 ORDER BY a ASC, __name__ ASC<\/code><\/p>","types":["<a data-custom-type=\"firestore\/v1\/structuredquery\/order\">Google\\Cloud\\Firestore\\V1\\StructuredQuery\\Order[]<\/a>","<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/RepeatedField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\RepeatedField<\/a>"],"optional":null,"nullable":null},{"name":"data.start_at\n","description":"<p>A potential prefix of a position in the result set to start the query at. The ordering of the result set is based on the <code>ORDER BY<\/code> clause of the original query. <code>SELECT * FROM k WHERE a = 1 AND b &gt; 2 ORDER BY b ASC, __name__ ASC;<\/code> This query's results are ordered by <code>(b ASC, __name__ ASC)<\/code>. Cursors can reference either the full ordering or a prefix of the location, though it cannot reference more fields than what are in the provided <code>ORDER BY<\/code>. Continuing off the example above, attaching the following start cursors will have varying impact: - <code>START BEFORE (2, \/k\/123)<\/code>: start the query right before <code>a = 1 AND b &gt; 2 AND __name__ &gt; \/k\/123<\/code>. - <code>START AFTER (10)<\/code>: start the query right after <code>a = 1 AND b &gt; 10<\/code>. Unlike <code>OFFSET<\/code> which requires scanning over the first N results to skip, a start cursor allows the query to begin at a logical position. This position is not required to match an actual result, it will scan forward from this position to find the next document. Requires: * The number of values cannot be greater than the number of fields specified in the <code>ORDER BY<\/code> clause.<\/p>","types":["<a data-custom-type=\"firestore\/v1\/cursor\">Google\\Cloud\\Firestore\\V1\\Cursor<\/a>"],"optional":null,"nullable":null},{"name":"data.end_at\n","description":"<p>A potential prefix of a position in the result set to end the query at. This is similar to <code>START_AT<\/code> but with it controlling the end position rather than the start position. Requires: * The number of values cannot be greater than the number of fields specified in the <code>ORDER BY<\/code> clause.<\/p>","types":["<a data-custom-type=\"firestore\/v1\/cursor\">Google\\Cloud\\Firestore\\V1\\Cursor<\/a>"],"optional":null,"nullable":null},{"name":"data.offset\n","description":"<p>The number of documents to skip before returning the first result. This applies after the constraints specified by the <code>WHERE<\/code>, <code>START AT<\/code>, &amp; <code>END AT<\/code> but before the <code>LIMIT<\/code> clause. Requires: * The value must be greater than or equal to zero if specified.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"data.limit\n","description":"<p>The maximum number of results to return. Applies after all other constraints. Requires: * The value must be greater than or equal to zero if specified.<\/p>","types":["<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Int32Value.php\" target=\"_blank\">Google\\Protobuf\\Int32Value<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"getSelect","type":"instance","name":"getSelect","source":"Firestore\/src\/V1\/StructuredQuery.php#L198","description":"<p>The projection to return.<\/p>\n<p>Generated from protobuf field <code>.google.firestore.v1.StructuredQuery.Projection select = 1;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/v1\/structuredquery\/projection\">Google\\Cloud\\Firestore\\V1\\StructuredQuery\\Projection<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"setSelect","type":"instance","name":"setSelect","source":"Firestore\/src\/V1\/StructuredQuery.php#L220","description":"<p>The projection to return.<\/p>\n<p>Generated from protobuf field <code>.google.firestore.v1.StructuredQuery.Projection select = 1;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The projection to return.<\/p>\n","types":["<a data-custom-type=\"firestore\/v1\/structuredquery\/projection\">Google\\Cloud\\Firestore\\V1\\StructuredQuery\\Projection<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/v1\/structuredquery\">Google\\Cloud\\Firestore\\V1\\StructuredQuery<\/a>"],"description":""}]},{"id":"getFrom","type":"instance","name":"getFrom","source":"Firestore\/src\/V1\/StructuredQuery.php#L234","description":"<p>The collections to query.<\/p>\n<p>Generated from protobuf field <code>repeated .google.firestore.v1.StructuredQuery.CollectionSelector from = 2;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/RepeatedField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\RepeatedField<\/a>"],"description":""}]},{"id":"setFrom","type":"instance","name":"setFrom","source":"Firestore\/src\/V1\/StructuredQuery.php#L246","description":"<p>The collections to query.<\/p>\n<p>Generated from protobuf field <code>repeated .google.firestore.v1.StructuredQuery.CollectionSelector from = 2;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The collections to query.<\/p>\n","types":["<a data-custom-type=\"firestore\/v1\/structuredquery\/collectionselector\">Google\\Cloud\\Firestore\\V1\\StructuredQuery\\CollectionSelector[]<\/a>","<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/RepeatedField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\RepeatedField<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/v1\/structuredquery\">Google\\Cloud\\Firestore\\V1\\StructuredQuery<\/a>"],"description":""}]},{"id":"getWhere","type":"instance","name":"getWhere","source":"Firestore\/src\/V1\/StructuredQuery.php#L260","description":"<p>The filter to apply.<\/p>\n<p>Generated from protobuf field <code>.google.firestore.v1.StructuredQuery.Filter where = 3;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/v1\/structuredquery\/filter\">Google\\Cloud\\Firestore\\V1\\StructuredQuery\\Filter<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"setWhere","type":"instance","name":"setWhere","source":"Firestore\/src\/V1\/StructuredQuery.php#L282","description":"<p>The filter to apply.<\/p>\n<p>Generated from protobuf field <code>.google.firestore.v1.StructuredQuery.Filter where = 3;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The filter to apply.<\/p>\n","types":["<a data-custom-type=\"firestore\/v1\/structuredquery\/filter\">Google\\Cloud\\Firestore\\V1\\StructuredQuery\\Filter<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/v1\/structuredquery\">Google\\Cloud\\Firestore\\V1\\StructuredQuery<\/a>"],"description":""}]},{"id":"getOrderBy","type":"instance","name":"getOrderBy","source":"Firestore\/src\/V1\/StructuredQuery.php#L311","description":"<p>The order to apply to the query results.<\/p>\n<p>Firestore allows callers to provide a full ordering, a partial ordering, or\nno ordering at all. In all cases, Firestore guarantees a stable ordering\nthrough the following rules:<\/p>\n<ul>\n<li>The <code>order_by<\/code> is required to reference all fields used with an\ninequality filter.<\/li>\n<li>All fields that are required to be in the <code>order_by<\/code> but are not already\npresent are appended in lexicographical ordering of the field name.<\/li>\n<li>If an order on <code>__name__<\/code> is not specified, it is appended by default.\nFields are appended with the same sort direction as the last order\nspecified, or 'ASCENDING' if no order was specified. For example:<\/li>\n<li><code>ORDER BY a<\/code> becomes <code>ORDER BY a ASC, __name__ ASC<\/code><\/li>\n<li><code>ORDER BY a DESC<\/code> becomes <code>ORDER BY a DESC, __name__ DESC<\/code><\/li>\n<li><code>WHERE a &gt; 1<\/code> becomes <code>WHERE a &gt; 1 ORDER BY a ASC, __name__ ASC<\/code><\/li>\n<li><code>WHERE __name__ &gt; ... AND a &gt; 1<\/code> becomes\n<code>WHERE __name__ &gt; ... AND a &gt; 1 ORDER BY a ASC, __name__ ASC<\/code><\/li>\n<\/ul>\n<p>Generated from protobuf field <code>repeated .google.firestore.v1.StructuredQuery.Order order_by = 4;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/RepeatedField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\RepeatedField<\/a>"],"description":""}]},{"id":"setOrderBy","type":"instance","name":"setOrderBy","source":"Firestore\/src\/V1\/StructuredQuery.php#L338","description":"<p>The order to apply to the query results.<\/p>\n<p>Firestore allows callers to provide a full ordering, a partial ordering, or\nno ordering at all. In all cases, Firestore guarantees a stable ordering\nthrough the following rules:<\/p>\n<ul>\n<li>The <code>order_by<\/code> is required to reference all fields used with an\ninequality filter.<\/li>\n<li>All fields that are required to be in the <code>order_by<\/code> but are not already\npresent are appended in lexicographical ordering of the field name.<\/li>\n<li>If an order on <code>__name__<\/code> is not specified, it is appended by default.\nFields are appended with the same sort direction as the last order\nspecified, or 'ASCENDING' if no order was specified. For example:<\/li>\n<li><code>ORDER BY a<\/code> becomes <code>ORDER BY a ASC, __name__ ASC<\/code><\/li>\n<li><code>ORDER BY a DESC<\/code> becomes <code>ORDER BY a DESC, __name__ DESC<\/code><\/li>\n<li><code>WHERE a &gt; 1<\/code> becomes <code>WHERE a &gt; 1 ORDER BY a ASC, __name__ ASC<\/code><\/li>\n<li><code>WHERE __name__ &gt; ... AND a &gt; 1<\/code> becomes\n<code>WHERE __name__ &gt; ... AND a &gt; 1 ORDER BY a ASC, __name__ ASC<\/code><\/li>\n<\/ul>\n<p>Generated from protobuf field <code>repeated .google.firestore.v1.StructuredQuery.Order order_by = 4;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The order to apply to the query results.<\/p>\n<p>Firestore allows callers to provide a full ordering, a partial ordering, or\nno ordering at all. In all cases, Firestore guarantees a stable ordering\nthrough the following rules:<\/p>\n<ul>\n<li>The <code>order_by<\/code> is required to reference all fields used with an\ninequality filter.<\/li>\n<li>All fields that are required to be in the <code>order_by<\/code> but are not already\npresent are appended in lexicographical ordering of the field name.<\/li>\n<li>If an order on <code>__name__<\/code> is not specified, it is appended by default.\nFields are appended with the same sort direction as the last order\nspecified, or 'ASCENDING' if no order was specified. For example:<\/li>\n<li><code>ORDER BY a<\/code> becomes <code>ORDER BY a ASC, __name__ ASC<\/code><\/li>\n<li><code>ORDER BY a DESC<\/code> becomes <code>ORDER BY a DESC, __name__ DESC<\/code><\/li>\n<li><code>WHERE a &gt; 1<\/code> becomes <code>WHERE a &gt; 1 ORDER BY a ASC, __name__ ASC<\/code><\/li>\n<li><code>WHERE __name__ &gt; ... AND a &gt; 1<\/code> becomes\n<code>WHERE __name__ &gt; ... AND a &gt; 1 ORDER BY a ASC, __name__ ASC<\/code><\/li>\n<\/ul>\n","types":["<a data-custom-type=\"firestore\/v1\/structuredquery\/order\">Google\\Cloud\\Firestore\\V1\\StructuredQuery\\Order[]<\/a>","<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/RepeatedField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\RepeatedField<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/v1\/structuredquery\">Google\\Cloud\\Firestore\\V1\\StructuredQuery<\/a>"],"description":""}]},{"id":"getStartAt","type":"instance","name":"getStartAt","source":"Firestore\/src\/V1\/StructuredQuery.php#L373","description":"<p>A potential prefix of a position in the result set to start the query at.<\/p>\n<p>The ordering of the result set is based on the <code>ORDER BY<\/code> clause of the\noriginal query.<\/p>\n<pre><code>SELECT * FROM k WHERE a = 1 AND b &gt; 2 ORDER BY b ASC, __name__ ASC;<\/code><\/pre>\n<p>This query's results are ordered by <code>(b ASC, __name__ ASC)<\/code>.\nCursors can reference either the full ordering or a prefix of the location,\nthough it cannot reference more fields than what are in the provided\n<code>ORDER BY<\/code>.\nContinuing off the example above, attaching the following start cursors\nwill have varying impact:<\/p>\n<ul>\n<li><code>START BEFORE (2, \/k\/123)<\/code>: start the query right before <code>a = 1 AND b &gt; 2 AND __name__ &gt; \/k\/123<\/code>.<\/li>\n<li><code>START AFTER (10)<\/code>: start the query right after <code>a = 1 AND b &gt; 10<\/code>.\nUnlike <code>OFFSET<\/code> which requires scanning over the first N results to skip,\na start cursor allows the query to begin at a logical position. This\nposition is not required to match an actual result, it will scan forward\nfrom this position to find the next document.\nRequires:<\/li>\n<li>The number of values cannot be greater than the number of fields\nspecified in the <code>ORDER BY<\/code> clause.<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>.google.firestore.v1.Cursor start_at = 7;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/v1\/cursor\">Google\\Cloud\\Firestore\\V1\\Cursor<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"setStartAt","type":"instance","name":"setStartAt","source":"Firestore\/src\/V1\/StructuredQuery.php#L416","description":"<p>A potential prefix of a position in the result set to start the query at.<\/p>\n<p>The ordering of the result set is based on the <code>ORDER BY<\/code> clause of the\noriginal query.<\/p>\n<pre><code>SELECT * FROM k WHERE a = 1 AND b &gt; 2 ORDER BY b ASC, __name__ ASC;<\/code><\/pre>\n<p>This query's results are ordered by <code>(b ASC, __name__ ASC)<\/code>.\nCursors can reference either the full ordering or a prefix of the location,\nthough it cannot reference more fields than what are in the provided\n<code>ORDER BY<\/code>.\nContinuing off the example above, attaching the following start cursors\nwill have varying impact:<\/p>\n<ul>\n<li><code>START BEFORE (2, \/k\/123)<\/code>: start the query right before <code>a = 1 AND b &gt; 2 AND __name__ &gt; \/k\/123<\/code>.<\/li>\n<li><code>START AFTER (10)<\/code>: start the query right after <code>a = 1 AND b &gt; 10<\/code>.\nUnlike <code>OFFSET<\/code> which requires scanning over the first N results to skip,\na start cursor allows the query to begin at a logical position. This\nposition is not required to match an actual result, it will scan forward\nfrom this position to find the next document.\nRequires:<\/li>\n<li>The number of values cannot be greater than the number of fields\nspecified in the <code>ORDER BY<\/code> clause.<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>.google.firestore.v1.Cursor start_at = 7;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>A potential prefix of a position in the result set to start the query at.<\/p>\n<p>The ordering of the result set is based on the <code>ORDER BY<\/code> clause of the\noriginal query.<\/p>\n<pre><code>SELECT * FROM k WHERE a = 1 AND b &gt; 2 ORDER BY b ASC, __name__ ASC;<\/code><\/pre>\n<p>This query's results are ordered by <code>(b ASC, __name__ ASC)<\/code>.\nCursors can reference either the full ordering or a prefix of the location,\nthough it cannot reference more fields than what are in the provided\n<code>ORDER BY<\/code>.\nContinuing off the example above, attaching the following start cursors\nwill have varying impact:<\/p>\n<ul>\n<li><code>START BEFORE (2, \/k\/123)<\/code>: start the query right before <code>a = 1 AND b &gt; 2 AND __name__ &gt; \/k\/123<\/code>.<\/li>\n<li><code>START AFTER (10)<\/code>: start the query right after <code>a = 1 AND b &gt; 10<\/code>.\nUnlike <code>OFFSET<\/code> which requires scanning over the first N results to skip,\na start cursor allows the query to begin at a logical position. This\nposition is not required to match an actual result, it will scan forward\nfrom this position to find the next document.\nRequires:<\/li>\n<li>The number of values cannot be greater than the number of fields\nspecified in the <code>ORDER BY<\/code> clause.<\/li>\n<\/ul>\n","types":["<a data-custom-type=\"firestore\/v1\/cursor\">Google\\Cloud\\Firestore\\V1\\Cursor<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/v1\/structuredquery\">Google\\Cloud\\Firestore\\V1\\StructuredQuery<\/a>"],"description":""}]},{"id":"getEndAt","type":"instance","name":"getEndAt","source":"Firestore\/src\/V1\/StructuredQuery.php#L435","description":"<p>A potential prefix of a position in the result set to end the query at.<\/p>\n<p>This is similar to <code>START_AT<\/code> but with it controlling the end position\nrather than the start position.\nRequires:<\/p>\n<ul>\n<li>The number of values cannot be greater than the number of fields\nspecified in the <code>ORDER BY<\/code> clause.<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>.google.firestore.v1.Cursor end_at = 8;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/v1\/cursor\">Google\\Cloud\\Firestore\\V1\\Cursor<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"setEndAt","type":"instance","name":"setEndAt","source":"Firestore\/src\/V1\/StructuredQuery.php#L462","description":"<p>A potential prefix of a position in the result set to end the query at.<\/p>\n<p>This is similar to <code>START_AT<\/code> but with it controlling the end position\nrather than the start position.\nRequires:<\/p>\n<ul>\n<li>The number of values cannot be greater than the number of fields\nspecified in the <code>ORDER BY<\/code> clause.<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>.google.firestore.v1.Cursor end_at = 8;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>A potential prefix of a position in the result set to end the query at.<\/p>\n<p>This is similar to <code>START_AT<\/code> but with it controlling the end position\nrather than the start position.\nRequires:<\/p>\n<ul>\n<li>The number of values cannot be greater than the number of fields\nspecified in the <code>ORDER BY<\/code> clause.<\/li>\n<\/ul>\n","types":["<a data-custom-type=\"firestore\/v1\/cursor\">Google\\Cloud\\Firestore\\V1\\Cursor<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/v1\/structuredquery\">Google\\Cloud\\Firestore\\V1\\StructuredQuery<\/a>"],"description":""}]},{"id":"getOffset","type":"instance","name":"getOffset","source":"Firestore\/src\/V1\/StructuredQuery.php#L480","description":"<p>The number of documents to skip before returning the first result.<\/p>\n<p>This applies after the constraints specified by the <code>WHERE<\/code>, <code>START AT<\/code>, &amp;\n<code>END AT<\/code> but before the <code>LIMIT<\/code> clause.\nRequires:<\/p>\n<ul>\n<li>The value must be greater than or equal to zero if specified.<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>int32 offset = 6;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"description":""}]},{"id":"setOffset","type":"instance","name":"setOffset","source":"Firestore\/src\/V1\/StructuredQuery.php#L496","description":"<p>The number of documents to skip before returning the first result.<\/p>\n<p>This applies after the constraints specified by the <code>WHERE<\/code>, <code>START AT<\/code>, &amp;\n<code>END AT<\/code> but before the <code>LIMIT<\/code> clause.\nRequires:<\/p>\n<ul>\n<li>The value must be greater than or equal to zero if specified.<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>int32 offset = 6;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The number of documents to skip before returning the first result.<\/p>\n<p>This applies after the constraints specified by the <code>WHERE<\/code>, <code>START AT<\/code>, &amp;\n<code>END AT<\/code> but before the <code>LIMIT<\/code> clause.\nRequires:<\/p>\n<ul>\n<li>The value must be greater than or equal to zero if specified.<\/li>\n<\/ul>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/v1\/structuredquery\">Google\\Cloud\\Firestore\\V1\\StructuredQuery<\/a>"],"description":""}]},{"id":"getLimit","type":"instance","name":"getLimit","source":"Firestore\/src\/V1\/StructuredQuery.php#L513","description":"<p>The maximum number of results to return.<\/p>\n<p>Applies after all other constraints.\nRequires:<\/p>\n<ul>\n<li>The value must be greater than or equal to zero if specified.<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>.google.protobuf.Int32Value limit = 5;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Int32Value.php\" target=\"_blank\">Google\\Protobuf\\Int32Value<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"getLimitValue","type":"instance","name":"getLimitValue","source":"Firestore\/src\/V1\/StructuredQuery.php#L539","description":"<p>Returns the unboxed value from <code>getLimit()<\/code><\/p>\n<p>The maximum number of results to return.\nApplies after all other constraints.\nRequires:<\/p>\n<ul>\n<li>The value must be greater than or equal to zero if specified.<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>.google.protobuf.Int32Value limit = 5;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"setLimit","type":"instance","name":"setLimit","source":"Firestore\/src\/V1\/StructuredQuery.php#L554","description":"<p>The maximum number of results to return.<\/p>\n<p>Applies after all other constraints.\nRequires:<\/p>\n<ul>\n<li>The value must be greater than or equal to zero if specified.<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>.google.protobuf.Int32Value limit = 5;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The maximum number of results to return.<\/p>\n<p>Applies after all other constraints.\nRequires:<\/p>\n<ul>\n<li>The value must be greater than or equal to zero if specified.<\/li>\n<\/ul>\n","types":["<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Int32Value.php\" target=\"_blank\">Google\\Protobuf\\Int32Value<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/v1\/structuredquery\">Google\\Cloud\\Firestore\\V1\\StructuredQuery<\/a>"],"description":""}]},{"id":"setLimitValue","type":"instance","name":"setLimitValue","source":"Firestore\/src\/V1\/StructuredQuery.php#L574","description":"<p>Sets the field by wrapping a primitive type in a Google\\Protobuf\\Int32Value object.<\/p>\n<p>The maximum number of results to return.\nApplies after all other constraints.\nRequires:<\/p>\n<ul>\n<li>The value must be greater than or equal to zero if specified.<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>.google.protobuf.Int32Value limit = 5;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Sets the field by wrapping a primitive type in a Google\\Protobuf\\Int32Value object.<\/p>\n<p>The maximum number of results to return.\nApplies after all other constraints.\nRequires:<\/p>\n<ul>\n<li>The value must be greater than or equal to zero if specified.<\/li>\n<\/ul>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/v1\/structuredquery\">Google\\Cloud\\Firestore\\V1\\StructuredQuery<\/a>"],"description":""}]}]}