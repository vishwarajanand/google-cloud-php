{"id":"debugger\/v2\/controller2client","type":"","title":"Google\\Cloud\\Debugger\\V2\\Controller2Client","name":"Controller2Client","description":"<p>Service Description: The Controller service provides the API for orchestrating a collection of\ndebugger agents to perform debugging tasks. These agents are each attached\nto a process of an application which may include one or more replicas.<\/p>\n<p>The debugger agents register with the Controller to identify the application\nbeing debugged, the Debuggee. All agents that register with the same data,\nrepresent the same Debuggee, and are assigned the same <code>debuggee_id<\/code>.<\/p>\n<p>The debugger agents call the Controller to retrieve  the list of active\nBreakpoints. Agents with the same <code>debuggee_id<\/code> get the same breakpoints\nlist. An agent that can fulfill the breakpoint request updates the\nController with the breakpoint result. The controller selects the first\nresult received and discards the rest of the results.\nAgents that poll again for active breakpoints will no longer have\nthe completed breakpoint in the list and should remove that breakpoint from\ntheir attached process.<\/p>\n<p>The Controller service does not provide a way to retrieve the results of\na completed breakpoint. This functionality is available using the Debugger\nservice.<\/p>\n<p>This class provides the ability to make remote calls to the backing service through method\ncalls that map to API methods. Sample code to get started:<\/p>\n<pre><code>$controller2Client = new Controller2Client();\ntry {\n    $debuggeeId = 'debuggee_id';\n    $response = $controller2Client-&gt;listActiveBreakpoints($debuggeeId);\n} finally {\n    $controller2Client-&gt;close();\n}<\/code><\/pre>\n<p>Extends <a data-custom-type=\"cloud-debugger\/main\/debugger\/v2\/gapic\/controller2gapicclient\">Google\\Cloud\\Debugger\\V2\\Gapic\\Controller2GapicClient<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Debugger\/src\/V2\/Gapic\/Controller2GapicClient.php#L194","description":"<p>Constructor.<\/p>\n\nImplemented in <a data-custom-type=\"cloud-debugger\/main\/debugger\/v2\/gapic\/controller2gapicclient\">Google\\Cloud\\Debugger\\V2\\Gapic\\Controller2GapicClient<\/a>","examples":[],"resources":[],"params":[{"name":"options","description":"<p>Optional. Options for configuring the service API wrapper.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options.serviceAddress\n","description":"<p><strong>Deprecated<\/strong>. This option will be removed in a future major release. Please utilize the <code>$apiEndpoint<\/code> option instead.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.apiEndpoint\n","description":"<p>The address of the API remote host. May optionally include the port, formatted as &quot;<uri>:<port>&quot;. Default 'clouddebugger.googleapis.com:443'.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.credentials\n","description":"<p>The credentials to be used by the client to authorize API calls. This option accepts either a path to a credentials file, or a decoded credentials file as a PHP array. <em>Advanced usage<\/em>: In addition, this option can also accept a pre-constructed <a href=\"https:\/\/github.com\/googleapis\/google-auth-library-php\/tree\/v1.23.1\/src\/FetchAuthTokenInterface.php\" target=\"_blank\">Google\\Auth\\FetchAuthTokenInterface<\/a> object or <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/CredentialsWrapper.html\" target=\"_blank\">Google\\ApiCore\\CredentialsWrapper<\/a> object. Note that when one of these objects are provided, any settings in $credentialsConfig will be ignored.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>","<a href=\"https:\/\/github.com\/googleapis\/google-auth-library-php\/tree\/v1.23.1\/src\/FetchAuthTokenInterface.php\" target=\"_blank\">Google\\Auth\\FetchAuthTokenInterface<\/a>","<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/CredentialsWrapper.html\" target=\"_blank\">Google\\ApiCore\\CredentialsWrapper<\/a>"],"optional":null,"nullable":null},{"name":"options.credentialsConfig\n","description":"<p>Options used to configure credentials, including auth token caching, for the client. For a full list of supporting configuration options, see <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/CredentialsWrapper.html\" target=\"_blank\">Google\\ApiCore\\CredentialsWrapper::build()<\/a> .<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.disableRetries\n","description":"<p>Determines whether or not retries defined by the client configuration should be disabled. Defaults to <code>false<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"options.clientConfig\n","description":"<p>Client method configuration, including retry settings. This option can be either a path to a JSON file, or a PHP array containing the decoded JSON data. By default this settings points to the default client config file, which is provided in the resources folder.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.transport\n","description":"<p>The transport used for executing network requests. May be either the string <code>rest<\/code> or <code>grpc<\/code>. Defaults to <code>grpc<\/code> if gRPC support is detected on the system. <em>Advanced usage<\/em>: Additionally, it is possible to pass in an already instantiated <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/Transport\/TransportInterface.html\" target=\"_blank\">Google\\ApiCore\\Transport\\TransportInterface<\/a> object. Note that when this object is provided, any settings in $transportConfig, and any $serviceAddress setting, will be ignored.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/Transport\/TransportInterface.html\" target=\"_blank\">Google\\ApiCore\\Transport\\TransportInterface<\/a>"],"optional":null,"nullable":null},{"name":"options.transportConfig\n","description":"<p>Configuration options that will be used to construct the transport. Options for each supported transport type should be passed in a key for that transport. For example: $transportConfig = [ 'grpc' =&gt; [...], 'rest' =&gt; [...], ]; See the <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/Transport\/GrpcTransport.html\" target=\"_blank\">Google\\ApiCore\\Transport\\GrpcTransport::build()<\/a> and <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/Transport\/RestTransport.html\" target=\"_blank\">Google\\ApiCore\\Transport\\RestTransport::build()<\/a> methods for the supported options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.clientCertSource\n","description":"<p>A callable which returns the client cert as a string. This can be used to provide a certificate and private key to the transport layer for mTLS.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.callable.php\" target=\"_blank\">callable<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ValidationException","description":""}],"returns":[]},{"id":"listActiveBreakpoints","type":"instance","name":"listActiveBreakpoints","source":"Debugger\/src\/V2\/Gapic\/Controller2GapicClient.php#L252","description":"<p>Returns the list of all active breakpoints for the debuggee.<\/p>\n<p>The breakpoint specification (<code>location<\/code>, <code>condition<\/code>, and <code>expressions<\/code>\nfields) is semantically immutable, although the field values may\nchange. For example, an agent may update the location line number\nto reflect the actual line where the breakpoint was set, but this\ndoesn't change the breakpoint semantics.<\/p>\n<p>This means that an agent does not need to check if a breakpoint has changed\nwhen it encounters the same breakpoint on a successive call.\nMoreover, an agent should remember the breakpoints that are completed\nuntil the controller removes them from the active list to avoid\nsetting those breakpoints again.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$controller2Client = new Controller2Client();\ntry {\n    $debuggeeId = 'debuggee_id';\n    $response = $controller2Client-&gt;listActiveBreakpoints($debuggeeId);\n} finally {\n    $controller2Client-&gt;close();\n}<\/code><\/pre>\n\nImplemented in <a data-custom-type=\"cloud-debugger\/main\/debugger\/v2\/gapic\/controller2gapicclient\">Google\\Cloud\\Debugger\\V2\\Gapic\\Controller2GapicClient<\/a>","examples":[],"resources":[],"params":[{"name":"debuggeeId","description":"<p>Required. Identifies the debuggee.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.waitToken\n","description":"<p>A token that, if specified, blocks the method call until the list of active breakpoints has changed, or a server-selected timeout has expired. The value should be set from the <code>next_wait_token<\/code> field in the last response. The initial value should be set to <code>\"init\"<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.successOnTimeout\n","description":"<p>If set to <code>true<\/code> (recommended), returns <code>google.rpc.Code.OK<\/code> status and sets the <code>wait_expired<\/code> response field to <code>true<\/code> when the server-selected timeout has expired. If set to <code>false<\/code> (deprecated), returns <code>google.rpc.Code.ABORTED<\/code> status when the server-selected timeout has expired.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a data-custom-type=\"cloud-debugger\/main\/debugger\/v2\/listactivebreakpointsresponse\">Google\\Cloud\\Debugger\\V2\\ListActiveBreakpointsResponse<\/a>"],"description":""}]},{"id":"registerDebuggee","type":"instance","name":"registerDebuggee","source":"Debugger\/src\/V2\/Gapic\/Controller2GapicClient.php#L319","description":"<p>Registers the debuggee with the controller service.<\/p>\n<p>All agents attached to the same application must call this method with\nexactly the same request content to get back the same stable <code>debuggee_id<\/code>.\nAgents should call this method again whenever <code>google.rpc.Code.NOT_FOUND<\/code>\nis returned from any controller method.<\/p>\n<p>This protocol allows the controller service to disable debuggees, recover\nfrom data loss, or change the <code>debuggee_id<\/code> format. Agents must handle\n<code>debuggee_id<\/code> value changing upon re-registration.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$controller2Client = new Controller2Client();\ntry {\n    $debuggee = new Debuggee();\n    $response = $controller2Client-&gt;registerDebuggee($debuggee);\n} finally {\n    $controller2Client-&gt;close();\n}<\/code><\/pre>\n\nImplemented in <a data-custom-type=\"cloud-debugger\/main\/debugger\/v2\/gapic\/controller2gapicclient\">Google\\Cloud\\Debugger\\V2\\Gapic\\Controller2GapicClient<\/a>","examples":[],"resources":[],"params":[{"name":"debuggee","description":"<p>Required. Debuggee information to register.\nThe fields <code>project<\/code>, <code>uniquifier<\/code>, <code>description<\/code> and <code>agent_version<\/code>\nof the debuggee must be set.<\/p>","types":["<a data-custom-type=\"cloud-debugger\/main\/debugger\/v2\/debuggee\">Google\\Cloud\\Debugger\\V2\\Debuggee<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a data-custom-type=\"cloud-debugger\/main\/debugger\/v2\/registerdebuggeeresponse\">Google\\Cloud\\Debugger\\V2\\RegisterDebuggeeResponse<\/a>"],"description":""}]},{"id":"updateActiveBreakpoint","type":"instance","name":"updateActiveBreakpoint","source":"Debugger\/src\/V2\/Gapic\/Controller2GapicClient.php#L370","description":"<p>Updates the breakpoint state or mutable fields.<\/p>\n<p>The entire Breakpoint message must be sent back to the controller service.<\/p>\n<p>Updates to active breakpoint fields are only allowed if the new value\ndoes not change the breakpoint specification. Updates to the <code>location<\/code>,\n<code>condition<\/code> and <code>expressions<\/code> fields should not alter the breakpoint\nsemantics. These may only make changes such as canonicalizing a value\nor snapping the location to the correct line of code.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$controller2Client = new Controller2Client();\ntry {\n    $debuggeeId = 'debuggee_id';\n    $breakpoint = new Breakpoint();\n    $response = $controller2Client-&gt;updateActiveBreakpoint($debuggeeId, $breakpoint);\n} finally {\n    $controller2Client-&gt;close();\n}<\/code><\/pre>\n\nImplemented in <a data-custom-type=\"cloud-debugger\/main\/debugger\/v2\/gapic\/controller2gapicclient\">Google\\Cloud\\Debugger\\V2\\Gapic\\Controller2GapicClient<\/a>","examples":[],"resources":[],"params":[{"name":"debuggeeId","description":"<p>Required. Identifies the debuggee being debugged.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"breakpoint","description":"<p>Required. Updated breakpoint information.\nThe field <code>id<\/code> must be set.\nThe agent must echo all Breakpoint specification fields in the update.<\/p>","types":["<a data-custom-type=\"cloud-debugger\/main\/debugger\/v2\/breakpoint\">Google\\Cloud\\Debugger\\V2\\Breakpoint<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a data-custom-type=\"cloud-debugger\/main\/debugger\/v2\/updateactivebreakpointresponse\">Google\\Cloud\\Debugger\\V2\\UpdateActiveBreakpointResponse<\/a>"],"description":""}]}]}