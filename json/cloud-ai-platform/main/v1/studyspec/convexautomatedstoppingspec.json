{"id":"aiplatform\/v1\/studyspec\/convexautomatedstoppingspec","type":"","title":"Google\\Cloud\\AIPlatform\\V1\\StudySpec\\ConvexAutomatedStoppingSpec","name":"ConvexAutomatedStoppingSpec","description":"<p>Configuration for ConvexAutomatedStoppingSpec.<\/p>\n<p>When there are enough completed trials (configured by\nmin_measurement_count), for pending trials with enough measurements and\nsteps, the policy first computes an overestimate of the objective value at\nmax_num_steps according to the slope of the incomplete objective value\ncurve. No prediction can be made if the curve is completely flat. If the\noverestimation is worse than the best objective value of the completed\ntrials, this pending trial will be early-stopped, but a last measurement\nwill be added to the pending trial with max_num_steps and predicted\nobjective value from the autoregression model.<\/p>\n<p>Generated from protobuf message <code>google.cloud.aiplatform.v1.StudySpec.ConvexAutomatedStoppingSpec<\/code><\/p>\n<p>Extends <a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/Message.php\" target=\"_blank\">Google\\Protobuf\\Internal\\Message<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"AiPlatform\/src\/V1\/StudySpec\/ConvexAutomatedStoppingSpec.php#L118","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"data","description":"<p>Optional. Data for populating the Message object.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"data.max_step_count\n","description":"<p>Steps used in predicting the final objective for early stopped trials. In general, it's set to be the same as the defined steps in training \/ tuning. If not defined, it will learn it from the completed trials. When use_steps is false, this field is set to the maximum elapsed seconds.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"data.min_step_count\n","description":"<p>Minimum number of steps for a trial to complete. Trials which do not have a measurement with step_count &gt; min_step_count won't be considered for early stopping. It's ok to set it to 0, and a trial can be early stopped at any stage. By default, min_step_count is set to be one-tenth of the max_step_count. When use_elapsed_duration is true, this field is set to the minimum elapsed seconds.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"data.min_measurement_count\n","description":"<p>The minimal number of measurements in a Trial. Early-stopping checks will not trigger if less than min_measurement_count+1 completed trials or pending trials with less than min_measurement_count measurements. If not defined, the default value is 5.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"data.learning_rate_parameter_name\n","description":"<p>The hyper-parameter name used in the tuning job that stands for learning rate. Leave it blank if learning rate is not in a parameter in tuning. The learning_rate is used to estimate the objective value of the ongoing trial.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"data.use_elapsed_duration\n","description":"<p>This bool determines whether or not the rule is applied based on elapsed_secs or steps. If use_elapsed_duration==false, the early stopping decision is made according to the predicted objective values according to the target steps. If use_elapsed_duration==true, elapsed_secs is used instead of steps. Also, in this case, the parameters max_num_steps and min_num_steps are overloaded to contain max_elapsed_seconds and min_elapsed_seconds.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"getMaxStepCount","type":"instance","name":"getMaxStepCount","source":"AiPlatform\/src\/V1\/StudySpec\/ConvexAutomatedStoppingSpec.php#L132","description":"<p>Steps used in predicting the final objective for early stopped trials. In\ngeneral, it's set to be the same as the defined steps in training \/\ntuning. If not defined, it will learn it from the completed trials. When\nuse_steps is false, this field is set to the maximum elapsed seconds.<\/p>\n<p>Generated from protobuf field <code>int64 max_step_count = 1;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setMaxStepCount","type":"instance","name":"setMaxStepCount","source":"AiPlatform\/src\/V1\/StudySpec\/ConvexAutomatedStoppingSpec.php#L147","description":"<p>Steps used in predicting the final objective for early stopped trials. In\ngeneral, it's set to be the same as the defined steps in training \/\ntuning. If not defined, it will learn it from the completed trials. When\nuse_steps is false, this field is set to the maximum elapsed seconds.<\/p>\n<p>Generated from protobuf field <code>int64 max_step_count = 1;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Steps used in predicting the final objective for early stopped trials. In\ngeneral, it's set to be the same as the defined steps in training \/\ntuning. If not defined, it will learn it from the completed trials. When\nuse_steps is false, this field is set to the maximum elapsed seconds.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-ai-platform\/main\/aiplatform\/v1\/studyspec\/convexautomatedstoppingspec\">Google\\Cloud\\AIPlatform\\V1\\StudySpec\\ConvexAutomatedStoppingSpec<\/a>"],"description":""}]},{"id":"getMinStepCount","type":"instance","name":"getMinStepCount","source":"AiPlatform\/src\/V1\/StudySpec\/ConvexAutomatedStoppingSpec.php#L167","description":"<p>Minimum number of steps for a trial to complete. Trials which do not have\na measurement with step_count &gt; min_step_count won't be considered for\nearly stopping. It's ok to set it to 0, and a trial can be early stopped\nat any stage. By default, min_step_count is set to be one-tenth of the\nmax_step_count.<\/p>\n<p>When use_elapsed_duration is true, this field is set to the minimum\nelapsed seconds.<\/p>\n<p>Generated from protobuf field <code>int64 min_step_count = 2;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setMinStepCount","type":"instance","name":"setMinStepCount","source":"AiPlatform\/src\/V1\/StudySpec\/ConvexAutomatedStoppingSpec.php#L185","description":"<p>Minimum number of steps for a trial to complete. Trials which do not have\na measurement with step_count &gt; min_step_count won't be considered for\nearly stopping. It's ok to set it to 0, and a trial can be early stopped\nat any stage. By default, min_step_count is set to be one-tenth of the\nmax_step_count.<\/p>\n<p>When use_elapsed_duration is true, this field is set to the minimum\nelapsed seconds.<\/p>\n<p>Generated from protobuf field <code>int64 min_step_count = 2;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Minimum number of steps for a trial to complete. Trials which do not have\na measurement with step_count &gt; min_step_count won't be considered for\nearly stopping. It's ok to set it to 0, and a trial can be early stopped\nat any stage. By default, min_step_count is set to be one-tenth of the\nmax_step_count.<\/p>\n<p>When use_elapsed_duration is true, this field is set to the minimum\nelapsed seconds.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-ai-platform\/main\/aiplatform\/v1\/studyspec\/convexautomatedstoppingspec\">Google\\Cloud\\AIPlatform\\V1\\StudySpec\\ConvexAutomatedStoppingSpec<\/a>"],"description":""}]},{"id":"getMinMeasurementCount","type":"instance","name":"getMinMeasurementCount","source":"AiPlatform\/src\/V1\/StudySpec\/ConvexAutomatedStoppingSpec.php#L202","description":"<p>The minimal number of measurements in a Trial.  Early-stopping checks\nwill not trigger if less than min_measurement_count+1 completed trials or\npending trials with less than min_measurement_count measurements. If not\ndefined, the default value is 5.<\/p>\n<p>Generated from protobuf field <code>int64 min_measurement_count = 3;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setMinMeasurementCount","type":"instance","name":"setMinMeasurementCount","source":"AiPlatform\/src\/V1\/StudySpec\/ConvexAutomatedStoppingSpec.php#L217","description":"<p>The minimal number of measurements in a Trial.  Early-stopping checks\nwill not trigger if less than min_measurement_count+1 completed trials or\npending trials with less than min_measurement_count measurements. If not\ndefined, the default value is 5.<\/p>\n<p>Generated from protobuf field <code>int64 min_measurement_count = 3;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The minimal number of measurements in a Trial.  Early-stopping checks\nwill not trigger if less than min_measurement_count+1 completed trials or\npending trials with less than min_measurement_count measurements. If not\ndefined, the default value is 5.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-ai-platform\/main\/aiplatform\/v1\/studyspec\/convexautomatedstoppingspec\">Google\\Cloud\\AIPlatform\\V1\\StudySpec\\ConvexAutomatedStoppingSpec<\/a>"],"description":""}]},{"id":"getLearningRateParameterName","type":"instance","name":"getLearningRateParameterName","source":"AiPlatform\/src\/V1\/StudySpec\/ConvexAutomatedStoppingSpec.php#L234","description":"<p>The hyper-parameter name used in the tuning job that stands for learning\nrate. Leave it blank if learning rate is not in a parameter in tuning.<\/p>\n<p>The learning_rate is used to estimate the objective value of the ongoing\ntrial.<\/p>\n<p>Generated from protobuf field <code>string learning_rate_parameter_name = 4;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setLearningRateParameterName","type":"instance","name":"setLearningRateParameterName","source":"AiPlatform\/src\/V1\/StudySpec\/ConvexAutomatedStoppingSpec.php#L249","description":"<p>The hyper-parameter name used in the tuning job that stands for learning\nrate. Leave it blank if learning rate is not in a parameter in tuning.<\/p>\n<p>The learning_rate is used to estimate the objective value of the ongoing\ntrial.<\/p>\n<p>Generated from protobuf field <code>string learning_rate_parameter_name = 4;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The hyper-parameter name used in the tuning job that stands for learning\nrate. Leave it blank if learning rate is not in a parameter in tuning.<\/p>\n<p>The learning_rate is used to estimate the objective value of the ongoing\ntrial.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-ai-platform\/main\/aiplatform\/v1\/studyspec\/convexautomatedstoppingspec\">Google\\Cloud\\AIPlatform\\V1\\StudySpec\\ConvexAutomatedStoppingSpec<\/a>"],"description":""}]},{"id":"getUseElapsedDuration","type":"instance","name":"getUseElapsedDuration","source":"AiPlatform\/src\/V1\/StudySpec\/ConvexAutomatedStoppingSpec.php#L269","description":"<p>This bool determines whether or not the rule is applied based on\nelapsed_secs or steps. If use_elapsed_duration==false, the early stopping\ndecision is made according to the predicted objective values according to\nthe target steps. If use_elapsed_duration==true, elapsed_secs is used\ninstead of steps. Also, in this case, the parameters max_num_steps and\nmin_num_steps are overloaded to contain max_elapsed_seconds and\nmin_elapsed_seconds.<\/p>\n<p>Generated from protobuf field <code>bool use_elapsed_duration = 5;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"setUseElapsedDuration","type":"instance","name":"setUseElapsedDuration","source":"AiPlatform\/src\/V1\/StudySpec\/ConvexAutomatedStoppingSpec.php#L287","description":"<p>This bool determines whether or not the rule is applied based on\nelapsed_secs or steps. If use_elapsed_duration==false, the early stopping\ndecision is made according to the predicted objective values according to\nthe target steps. If use_elapsed_duration==true, elapsed_secs is used\ninstead of steps. Also, in this case, the parameters max_num_steps and\nmin_num_steps are overloaded to contain max_elapsed_seconds and\nmin_elapsed_seconds.<\/p>\n<p>Generated from protobuf field <code>bool use_elapsed_duration = 5;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>This bool determines whether or not the rule is applied based on\nelapsed_secs or steps. If use_elapsed_duration==false, the early stopping\ndecision is made according to the predicted objective values according to\nthe target steps. If use_elapsed_duration==true, elapsed_secs is used\ninstead of steps. Also, in this case, the parameters max_num_steps and\nmin_num_steps are overloaded to contain max_elapsed_seconds and\nmin_elapsed_seconds.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-ai-platform\/main\/aiplatform\/v1\/studyspec\/convexautomatedstoppingspec\">Google\\Cloud\\AIPlatform\\V1\\StudySpec\\ConvexAutomatedStoppingSpec<\/a>"],"description":""}]}]}