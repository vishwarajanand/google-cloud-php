{"id":"monitoring\/v3\/uptimecheckconfig\/httpcheck","type":"","title":"Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck","name":"HttpCheck","description":"<p>Information involved in an HTTP\/HTTPS Uptime check request.<\/p>\n<p>Generated from protobuf message <code>google.monitoring.v3.UptimeCheckConfig.HttpCheck<\/code><\/p>\n<p>Extends <a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/Message.php\" target=\"_blank\">Google\\Protobuf\\Internal\\Message<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L183","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"data","description":"<p>Optional. Data for populating the Message object.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"data.request_method\n","description":"<p>The HTTP request method to use for the check. If set to <code>METHOD_UNSPECIFIED<\/code> then <code>request_method<\/code> defaults to <code>GET<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"data.use_ssl\n","description":"<p>If <code>true<\/code>, use HTTPS instead of HTTP to run the check.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"data.path\n","description":"<p>Optional (defaults to &quot;\/&quot;). The path to the page against which to run the check. Will be combined with the <code>host<\/code> (specified within the <code>monitored_resource<\/code>) and <code>port<\/code> to construct the full URL. If the provided path does not begin with &quot;\/&quot;, a &quot;\/&quot; will be prepended automatically.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"data.port\n","description":"<p>Optional (defaults to 80 when <code>use_ssl<\/code> is <code>false<\/code>, and 443 when <code>use_ssl<\/code> is <code>true<\/code>). The TCP port on the HTTP server against which to run the check. Will be combined with host (specified within the <code>monitored_resource<\/code>) and <code>path<\/code> to construct the full URL.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"data.auth_info\n","description":"<p>The authentication information. Optional when creating an HTTP check; defaults to empty.<\/p>","types":["<a data-custom-type=\"cloud-monitoring\/main\/monitoring\/v3\/uptimecheckconfig\/httpcheck\/basicauthentication\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck\\BasicAuthentication<\/a>"],"optional":null,"nullable":null},{"name":"data.mask_headers\n","description":"<p>Boolean specifying whether to encrypt the header information. Encryption should be specified for any headers related to authentication that you do not wish to be seen when retrieving the configuration. The server will be responsible for encrypting the headers. On Get\/List calls, if <code>mask_headers<\/code> is set to <code>true<\/code> then the headers will be obscured with <code>******.<\/code><\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"data.headers\n","description":"<p>The list of headers to send as part of the Uptime check request. If two headers have the same key and different values, they should be entered as a single header, with the value being a comma-separated list of all the desired values as described at <a href=\"https:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616.txt\">https:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616.txt<\/a> (page 31). Entering two separate headers with the same key in a Create call will cause the first to be overwritten by the second. The maximum number of headers allowed is 100.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>","<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/MapField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\MapField<\/a>"],"optional":null,"nullable":null},{"name":"data.content_type\n","description":"<p>The content type header to use for the check. The following configurations result in errors: 1. Content type is specified in both the <code>headers<\/code> field and the <code>content_type<\/code> field. 2. Request method is <code>GET<\/code> and <code>content_type<\/code> is not <code>TYPE_UNSPECIFIED<\/code> 3. Request method is <code>POST<\/code> and <code>content_type<\/code> is <code>TYPE_UNSPECIFIED<\/code>. 4. Request method is <code>POST<\/code> and a &quot;Content-Type&quot; header is provided via <code>headers<\/code> field. The <code>content_type<\/code> field should be used instead.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"data.validate_ssl\n","description":"<p>Boolean specifying whether to include SSL certificate validation as a part of the Uptime check. Only applies to checks where <code>monitored_resource<\/code> is set to <code>uptime_url<\/code>. If <code>use_ssl<\/code> is <code>false<\/code>, setting <code>validate_ssl<\/code> to <code>true<\/code> has no effect.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"data.body\n","description":"<p>The request body associated with the HTTP POST request. If <code>content_type<\/code> is <code>URL_ENCODED<\/code>, the body passed in must be URL-encoded. Users can provide a <code>Content-Length<\/code> header via the <code>headers<\/code> field or the API will do so. If the <code>request_method<\/code> is <code>GET<\/code> and <code>body<\/code> is not empty, the API will return an error. The maximum byte size is 1 megabyte. Note: As with all <code>bytes<\/code> fields, JSON representations are base64 encoded. e.g.: &quot;foo=bar&quot; in URL-encoded form is &quot;foo%3Dbar&quot; and in base64 encoding is &quot;Zm9vJTI1M0RiYXI=&quot;.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"getRequestMethod","type":"instance","name":"getRequestMethod","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L195","description":"<p>The HTTP request method to use for the check. If set to\n<code>METHOD_UNSPECIFIED<\/code> then <code>request_method<\/code> defaults to <code>GET<\/code>.<\/p>\n<p>Generated from protobuf field <code>.google.monitoring.v3.UptimeCheckConfig.HttpCheck.RequestMethod request_method = 8;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"description":""}]},{"id":"setRequestMethod","type":"instance","name":"setRequestMethod","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L208","description":"<p>The HTTP request method to use for the check. If set to\n<code>METHOD_UNSPECIFIED<\/code> then <code>request_method<\/code> defaults to <code>GET<\/code>.<\/p>\n<p>Generated from protobuf field <code>.google.monitoring.v3.UptimeCheckConfig.HttpCheck.RequestMethod request_method = 8;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The HTTP request method to use for the check. If set to\n<code>METHOD_UNSPECIFIED<\/code> then <code>request_method<\/code> defaults to <code>GET<\/code>.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-monitoring\/main\/monitoring\/v3\/uptimecheckconfig\/httpcheck\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck<\/a>"],"description":""}]},{"id":"getUseSsl","type":"instance","name":"getUseSsl","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L222","description":"<p>If <code>true<\/code>, use HTTPS instead of HTTP to run the check.<\/p>\n<p>Generated from protobuf field <code>bool use_ssl = 1;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"setUseSsl","type":"instance","name":"setUseSsl","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L234","description":"<p>If <code>true<\/code>, use HTTPS instead of HTTP to run the check.<\/p>\n<p>Generated from protobuf field <code>bool use_ssl = 1;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>If <code>true<\/code>, use HTTPS instead of HTTP to run the check.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-monitoring\/main\/monitoring\/v3\/uptimecheckconfig\/httpcheck\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck<\/a>"],"description":""}]},{"id":"getPath","type":"instance","name":"getPath","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L252","description":"<p>Optional (defaults to &quot;\/&quot;). The path to the page against which to run\nthe check. Will be combined with the <code>host<\/code> (specified within the\n<code>monitored_resource<\/code>) and <code>port<\/code> to construct the full URL. If the\nprovided path does not begin with &quot;\/&quot;, a &quot;\/&quot; will be prepended\nautomatically.<\/p>\n<p>Generated from protobuf field <code>string path = 2;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setPath","type":"instance","name":"setPath","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L268","description":"<p>Optional (defaults to &quot;\/&quot;). The path to the page against which to run\nthe check. Will be combined with the <code>host<\/code> (specified within the\n<code>monitored_resource<\/code>) and <code>port<\/code> to construct the full URL. If the\nprovided path does not begin with &quot;\/&quot;, a &quot;\/&quot; will be prepended\nautomatically.<\/p>\n<p>Generated from protobuf field <code>string path = 2;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Optional (defaults to &quot;\/&quot;). The path to the page against which to run\nthe check. Will be combined with the <code>host<\/code> (specified within the\n<code>monitored_resource<\/code>) and <code>port<\/code> to construct the full URL. If the\nprovided path does not begin with &quot;\/&quot;, a &quot;\/&quot; will be prepended\nautomatically.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-monitoring\/main\/monitoring\/v3\/uptimecheckconfig\/httpcheck\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck<\/a>"],"description":""}]},{"id":"getPort","type":"instance","name":"getPort","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L285","description":"<p>Optional (defaults to 80 when <code>use_ssl<\/code> is <code>false<\/code>, and 443 when\n<code>use_ssl<\/code> is <code>true<\/code>). The TCP port on the HTTP server against which to\nrun the check. Will be combined with host (specified within the\n<code>monitored_resource<\/code>) and <code>path<\/code> to construct the full URL.<\/p>\n<p>Generated from protobuf field <code>int32 port = 3;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"description":""}]},{"id":"setPort","type":"instance","name":"setPort","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L300","description":"<p>Optional (defaults to 80 when <code>use_ssl<\/code> is <code>false<\/code>, and 443 when\n<code>use_ssl<\/code> is <code>true<\/code>). The TCP port on the HTTP server against which to\nrun the check. Will be combined with host (specified within the\n<code>monitored_resource<\/code>) and <code>path<\/code> to construct the full URL.<\/p>\n<p>Generated from protobuf field <code>int32 port = 3;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Optional (defaults to 80 when <code>use_ssl<\/code> is <code>false<\/code>, and 443 when\n<code>use_ssl<\/code> is <code>true<\/code>). The TCP port on the HTTP server against which to\nrun the check. Will be combined with host (specified within the\n<code>monitored_resource<\/code>) and <code>path<\/code> to construct the full URL.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-monitoring\/main\/monitoring\/v3\/uptimecheckconfig\/httpcheck\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck<\/a>"],"description":""}]},{"id":"getAuthInfo","type":"instance","name":"getAuthInfo","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L315","description":"<p>The authentication information. Optional when creating an HTTP check;\ndefaults to empty.<\/p>\n<p>Generated from protobuf field <code>.google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication auth_info = 4;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-monitoring\/main\/monitoring\/v3\/uptimecheckconfig\/httpcheck\/basicauthentication\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck\\BasicAuthentication<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"setAuthInfo","type":"instance","name":"setAuthInfo","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L338","description":"<p>The authentication information. Optional when creating an HTTP check;\ndefaults to empty.<\/p>\n<p>Generated from protobuf field <code>.google.monitoring.v3.UptimeCheckConfig.HttpCheck.BasicAuthentication auth_info = 4;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The authentication information. Optional when creating an HTTP check;\ndefaults to empty.<\/p>\n","types":["<a data-custom-type=\"cloud-monitoring\/main\/monitoring\/v3\/uptimecheckconfig\/httpcheck\/basicauthentication\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck\\BasicAuthentication<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-monitoring\/main\/monitoring\/v3\/uptimecheckconfig\/httpcheck\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck<\/a>"],"description":""}]},{"id":"getMaskHeaders","type":"instance","name":"getMaskHeaders","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L357","description":"<p>Boolean specifying whether to encrypt the header information.<\/p>\n<p>Encryption should be specified for any headers related to authentication\nthat you do not wish to be seen when retrieving the configuration. The\nserver will be responsible for encrypting the headers.\nOn Get\/List calls, if <code>mask_headers<\/code> is set to <code>true<\/code> then the headers\nwill be obscured with <code>******.<\/code><\/p>\n<p>Generated from protobuf field <code>bool mask_headers = 5;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"setMaskHeaders","type":"instance","name":"setMaskHeaders","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L374","description":"<p>Boolean specifying whether to encrypt the header information.<\/p>\n<p>Encryption should be specified for any headers related to authentication\nthat you do not wish to be seen when retrieving the configuration. The\nserver will be responsible for encrypting the headers.\nOn Get\/List calls, if <code>mask_headers<\/code> is set to <code>true<\/code> then the headers\nwill be obscured with <code>******.<\/code><\/p>\n<p>Generated from protobuf field <code>bool mask_headers = 5;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Boolean specifying whether to encrypt the header information.<\/p>\n<p>Encryption should be specified for any headers related to authentication\nthat you do not wish to be seen when retrieving the configuration. The\nserver will be responsible for encrypting the headers.\nOn Get\/List calls, if <code>mask_headers<\/code> is set to <code>true<\/code> then the headers\nwill be obscured with <code>******.<\/code><\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-monitoring\/main\/monitoring\/v3\/uptimecheckconfig\/httpcheck\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck<\/a>"],"description":""}]},{"id":"getHeaders","type":"instance","name":"getHeaders","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L395","description":"<p>The list of headers to send as part of the Uptime check request.<\/p>\n<p>If two headers have the same key and different values, they should\nbe entered as a single header, with the value being a comma-separated\nlist of all the desired values as described at\n<a href=\"https:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616.txt\">https:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616.txt<\/a> (page 31).\nEntering two separate headers with the same key in a Create call will\ncause the first to be overwritten by the second.\nThe maximum number of headers allowed is 100.<\/p>\n<p>Generated from protobuf field <code>map&lt;string, string&gt; headers = 6;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/MapField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\MapField<\/a>"],"description":""}]},{"id":"setHeaders","type":"instance","name":"setHeaders","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L414","description":"<p>The list of headers to send as part of the Uptime check request.<\/p>\n<p>If two headers have the same key and different values, they should\nbe entered as a single header, with the value being a comma-separated\nlist of all the desired values as described at\n<a href=\"https:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616.txt\">https:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616.txt<\/a> (page 31).\nEntering two separate headers with the same key in a Create call will\ncause the first to be overwritten by the second.\nThe maximum number of headers allowed is 100.<\/p>\n<p>Generated from protobuf field <code>map&lt;string, string&gt; headers = 6;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The list of headers to send as part of the Uptime check request.<\/p>\n<p>If two headers have the same key and different values, they should\nbe entered as a single header, with the value being a comma-separated\nlist of all the desired values as described at\n<a href=\"https:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616.txt\">https:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616.txt<\/a> (page 31).\nEntering two separate headers with the same key in a Create call will\ncause the first to be overwritten by the second.\nThe maximum number of headers allowed is 100.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>","<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/MapField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\MapField<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-monitoring\/main\/monitoring\/v3\/uptimecheckconfig\/httpcheck\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck<\/a>"],"description":""}]},{"id":"getContentType","type":"instance","name":"getContentType","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L435","description":"<p>The content type header to use for the check. The following\nconfigurations result in errors:<\/p>\n<ol>\n<li>\n<p>Content type is specified in both the <code>headers<\/code> field and the\n<code>content_type<\/code> field.<\/p>\n<\/li>\n<li>\n<p>Request method is <code>GET<\/code> and <code>content_type<\/code> is not <code>TYPE_UNSPECIFIED<\/code><\/p>\n<\/li>\n<li>\n<p>Request method is <code>POST<\/code> and <code>content_type<\/code> is <code>TYPE_UNSPECIFIED<\/code>.<\/p>\n<\/li>\n<li>\n<p>Request method is <code>POST<\/code> and a &quot;Content-Type&quot; header is provided via\n<code>headers<\/code> field. The <code>content_type<\/code> field should be used instead.<\/p>\n<\/li>\n<\/ol>\n<p>Generated from protobuf field <code>.google.monitoring.v3.UptimeCheckConfig.HttpCheck.ContentType content_type = 9;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"description":""}]},{"id":"setContentType","type":"instance","name":"setContentType","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L454","description":"<p>The content type header to use for the check. The following\nconfigurations result in errors:<\/p>\n<ol>\n<li>\n<p>Content type is specified in both the <code>headers<\/code> field and the\n<code>content_type<\/code> field.<\/p>\n<\/li>\n<li>\n<p>Request method is <code>GET<\/code> and <code>content_type<\/code> is not <code>TYPE_UNSPECIFIED<\/code><\/p>\n<\/li>\n<li>\n<p>Request method is <code>POST<\/code> and <code>content_type<\/code> is <code>TYPE_UNSPECIFIED<\/code>.<\/p>\n<\/li>\n<li>\n<p>Request method is <code>POST<\/code> and a &quot;Content-Type&quot; header is provided via\n<code>headers<\/code> field. The <code>content_type<\/code> field should be used instead.<\/p>\n<\/li>\n<\/ol>\n<p>Generated from protobuf field <code>.google.monitoring.v3.UptimeCheckConfig.HttpCheck.ContentType content_type = 9;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The content type header to use for the check. The following\nconfigurations result in errors:<\/p>\n<ol>\n<li>\n<p>Content type is specified in both the <code>headers<\/code> field and the\n<code>content_type<\/code> field.<\/p>\n<\/li>\n<li>\n<p>Request method is <code>GET<\/code> and <code>content_type<\/code> is not <code>TYPE_UNSPECIFIED<\/code><\/p>\n<\/li>\n<li>\n<p>Request method is <code>POST<\/code> and <code>content_type<\/code> is <code>TYPE_UNSPECIFIED<\/code>.<\/p>\n<\/li>\n<li>\n<p>Request method is <code>POST<\/code> and a &quot;Content-Type&quot; header is provided via\n<code>headers<\/code> field. The <code>content_type<\/code> field should be used instead.<\/p>\n<\/li>\n<\/ol>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-monitoring\/main\/monitoring\/v3\/uptimecheckconfig\/httpcheck\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck<\/a>"],"description":""}]},{"id":"getValidateSsl","type":"instance","name":"getValidateSsl","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L471","description":"<p>Boolean specifying whether to include SSL certificate validation as a\npart of the Uptime check. Only applies to checks where\n<code>monitored_resource<\/code> is set to <code>uptime_url<\/code>. If <code>use_ssl<\/code> is <code>false<\/code>,\nsetting <code>validate_ssl<\/code> to <code>true<\/code> has no effect.<\/p>\n<p>Generated from protobuf field <code>bool validate_ssl = 7;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"setValidateSsl","type":"instance","name":"setValidateSsl","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L486","description":"<p>Boolean specifying whether to include SSL certificate validation as a\npart of the Uptime check. Only applies to checks where\n<code>monitored_resource<\/code> is set to <code>uptime_url<\/code>. If <code>use_ssl<\/code> is <code>false<\/code>,\nsetting <code>validate_ssl<\/code> to <code>true<\/code> has no effect.<\/p>\n<p>Generated from protobuf field <code>bool validate_ssl = 7;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Boolean specifying whether to include SSL certificate validation as a\npart of the Uptime check. Only applies to checks where\n<code>monitored_resource<\/code> is set to <code>uptime_url<\/code>. If <code>use_ssl<\/code> is <code>false<\/code>,\nsetting <code>validate_ssl<\/code> to <code>true<\/code> has no effect.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-monitoring\/main\/monitoring\/v3\/uptimecheckconfig\/httpcheck\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck<\/a>"],"description":""}]},{"id":"getBody","type":"instance","name":"getBody","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L507","description":"<p>The request body associated with the HTTP POST request. If <code>content_type<\/code>\nis <code>URL_ENCODED<\/code>, the body passed in must be URL-encoded. Users can\nprovide a <code>Content-Length<\/code> header via the <code>headers<\/code> field or the API will\ndo so. If the <code>request_method<\/code> is <code>GET<\/code> and <code>body<\/code> is not empty, the API\nwill return an error. The maximum byte size is 1 megabyte. Note: As with\nall <code>bytes<\/code> fields, JSON representations are base64 encoded. e.g.:\n&quot;foo=bar&quot; in URL-encoded form is &quot;foo%3Dbar&quot; and in base64 encoding is\n&quot;Zm9vJTI1M0RiYXI=&quot;.<\/p>\n<p>Generated from protobuf field <code>bytes body = 10;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setBody","type":"instance","name":"setBody","source":"Monitoring\/src\/V3\/UptimeCheckConfig\/HttpCheck.php#L526","description":"<p>The request body associated with the HTTP POST request. If <code>content_type<\/code>\nis <code>URL_ENCODED<\/code>, the body passed in must be URL-encoded. Users can\nprovide a <code>Content-Length<\/code> header via the <code>headers<\/code> field or the API will\ndo so. If the <code>request_method<\/code> is <code>GET<\/code> and <code>body<\/code> is not empty, the API\nwill return an error. The maximum byte size is 1 megabyte. Note: As with\nall <code>bytes<\/code> fields, JSON representations are base64 encoded. e.g.:\n&quot;foo=bar&quot; in URL-encoded form is &quot;foo%3Dbar&quot; and in base64 encoding is\n&quot;Zm9vJTI1M0RiYXI=&quot;.<\/p>\n<p>Generated from protobuf field <code>bytes body = 10;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The request body associated with the HTTP POST request. If <code>content_type<\/code>\nis <code>URL_ENCODED<\/code>, the body passed in must be URL-encoded. Users can\nprovide a <code>Content-Length<\/code> header via the <code>headers<\/code> field or the API will\ndo so. If the <code>request_method<\/code> is <code>GET<\/code> and <code>body<\/code> is not empty, the API\nwill return an error. The maximum byte size is 1 megabyte. Note: As with\nall <code>bytes<\/code> fields, JSON representations are base64 encoded. e.g.:\n&quot;foo=bar&quot; in URL-encoded form is &quot;foo%3Dbar&quot; and in base64 encoding is\n&quot;Zm9vJTI1M0RiYXI=&quot;.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-monitoring\/main\/monitoring\/v3\/uptimecheckconfig\/httpcheck\">Google\\Cloud\\Monitoring\\V3\\UptimeCheckConfig\\HttpCheck<\/a>"],"description":""}]}]}