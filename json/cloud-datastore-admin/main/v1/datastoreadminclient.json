{"id":"datastoreadmin\/v1\/datastoreadminclient","type":"","title":"Google\\Cloud\\Datastore\\Admin\\V1\\DatastoreAdminClient","name":"DatastoreAdminClient","description":"<p>Service Description: Google Cloud Datastore Admin API<\/p>\n<p>The Datastore Admin API provides several admin services for Cloud Datastore.<\/p>\n<hr \/>\n<h2>Concepts<\/h2>\n<p>Project, namespace, kind, and entity as defined in the Google Cloud Datastore\nAPI.<\/p>\n<p>Operation: An Operation represents work being performed in the background.<\/p>\n<p>EntityFilter: Allows specifying a subset of entities in a project. This is\nspecified as a combination of kinds and namespaces (either or both of which\nmay be all).<\/p>\n<hr \/>\n<h2>Services<\/h2>\n<h1>Export\/Import<\/h1>\n<p>The Export\/Import service provides the ability to copy all or a subset of\nentities to\/from Google Cloud Storage.<\/p>\n<p>Exported data may be imported into Cloud Datastore for any Google Cloud\nPlatform project. It is not restricted to the export source project. It is\npossible to export from one project and then import into another.<\/p>\n<p>Exported data can also be loaded into Google BigQuery for analysis.<\/p>\n<p>Exports and imports are performed asynchronously. An Operation resource is\ncreated for each export\/import. The state (including any errors encountered)\nof the export\/import may be queried via the Operation resource.<\/p>\n<h1>Index<\/h1>\n<p>The index service manages Cloud Datastore composite indexes.<\/p>\n<p>Index creation and deletion are performed asynchronously.\nAn Operation resource is created for each such asynchronous operation.\nThe state of the operation (including any errors encountered)\nmay be queried via the Operation resource.<\/p>\n<h1>Operation<\/h1>\n<p>The Operations collection provides a record of actions performed for the\nspecified project (including any operations in progress). Operations are not\ncreated directly but through calls on other collections or resources.<\/p>\n<p>An operation that is not yet done may be cancelled. The request to cancel is\nasynchronous and the operation may continue to run for some time after the\nrequest to cancel is made.<\/p>\n<p>An operation that is done may be deleted so that it is no longer listed as\npart of the Operation collection.<\/p>\n<p>ListOperations returns all pending operations, but not completed operations.<\/p>\n<p>Operations are created by service DatastoreAdmin,\nbut are accessed via service google.longrunning.Operations.<\/p>\n<p>This class provides the ability to make remote calls to the backing service through method\ncalls that map to API methods. Sample code to get started:<\/p>\n<pre><code>$datastoreAdminClient = new DatastoreAdminClient();\ntry {\n    $operationResponse = $datastoreAdminClient-&gt;createIndex();\n    $operationResponse-&gt;pollUntilComplete();\n    if ($operationResponse-&gt;operationSucceeded()) {\n        $result = $operationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $operationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n    \/\/ Alternatively:\n    \/\/ start the operation, keep the operation name, and resume later\n    $operationResponse = $datastoreAdminClient-&gt;createIndex();\n    $operationName = $operationResponse-&gt;getName();\n    \/\/ ... do other work\n    $newOperationResponse = $datastoreAdminClient-&gt;resumeOperation($operationName, 'createIndex');\n    while (!$newOperationResponse-&gt;isDone()) {\n        \/\/ ... do other work\n        $newOperationResponse-&gt;reload();\n    }\n    if ($newOperationResponse-&gt;operationSucceeded()) {\n        $result = $newOperationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $newOperationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n} finally {\n    $datastoreAdminClient-&gt;close();\n}<\/code><\/pre>\n<p>Extends <a data-custom-type=\"cloud-datastore-admin\/main\/datastoreadmin\/v1\/gapic\/datastoreadmingapicclient\">Google\\Cloud\\Datastore\\Admin\\V1\\Gapic\\DatastoreAdminGapicClient<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"getOperationsClient","type":"instance","name":"getOperationsClient","source":"DatastoreAdmin\/src\/V1\/Gapic\/DatastoreAdminGapicClient.php#L217","description":"<p>Return an OperationsClient object with the same endpoint as $this.<\/p>\n\nImplemented in <a data-custom-type=\"cloud-datastore-admin\/main\/datastoreadmin\/v1\/gapic\/datastoreadmingapicclient\">Google\\Cloud\\Datastore\\Admin\\V1\\Gapic\\DatastoreAdminGapicClient<\/a>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/LongRunning\/OperationsClient.html\" target=\"_blank\">Google\\ApiCore\\LongRunning\\OperationsClient<\/a>"],"description":""}]},{"id":"resumeOperation","type":"instance","name":"resumeOperation","source":"DatastoreAdmin\/src\/V1\/Gapic\/DatastoreAdminGapicClient.php#L233","description":"<p>Resume an existing long running operation that was previously started by a long\nrunning API method. If $methodName is not provided, or does not match a long\nrunning API method, then the operation can still be resumed, but the\nOperationResponse object will not deserialize the final response.<\/p>\n\nImplemented in <a data-custom-type=\"cloud-datastore-admin\/main\/datastoreadmin\/v1\/gapic\/datastoreadmingapicclient\">Google\\Cloud\\Datastore\\Admin\\V1\\Gapic\\DatastoreAdminGapicClient<\/a>","examples":[],"resources":[],"params":[{"name":"operationName","description":"<p>The name of the long running operation<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"methodName","description":"<p>The name of the method used to start the operation<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/OperationResponse.html\" target=\"_blank\">Google\\ApiCore\\OperationResponse<\/a>"],"description":""}]},{"id":"__construct","type":"constructor","name":"__construct","source":"DatastoreAdmin\/src\/V1\/Gapic\/DatastoreAdminGapicClient.php#L304","description":"<p>Constructor.<\/p>\n\nImplemented in <a data-custom-type=\"cloud-datastore-admin\/main\/datastoreadmin\/v1\/gapic\/datastoreadmingapicclient\">Google\\Cloud\\Datastore\\Admin\\V1\\Gapic\\DatastoreAdminGapicClient<\/a>","examples":[],"resources":[],"params":[{"name":"options","description":"<p>Optional. Options for configuring the service API wrapper.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options.serviceAddress\n","description":"<p><strong>Deprecated<\/strong>. This option will be removed in a future major release. Please utilize the <code>$apiEndpoint<\/code> option instead.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.apiEndpoint\n","description":"<p>The address of the API remote host. May optionally include the port, formatted as &quot;<uri>:<port>&quot;. Default 'datastore.googleapis.com:443'.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.credentials\n","description":"<p>The credentials to be used by the client to authorize API calls. This option accepts either a path to a credentials file, or a decoded credentials file as a PHP array. <em>Advanced usage<\/em>: In addition, this option can also accept a pre-constructed <a href=\"https:\/\/github.com\/googleapis\/google-auth-library-php\/tree\/v1.23.1\/src\/FetchAuthTokenInterface.php\" target=\"_blank\">Google\\Auth\\FetchAuthTokenInterface<\/a> object or <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/CredentialsWrapper.html\" target=\"_blank\">Google\\ApiCore\\CredentialsWrapper<\/a> object. Note that when one of these objects are provided, any settings in $credentialsConfig will be ignored.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>","<a href=\"https:\/\/github.com\/googleapis\/google-auth-library-php\/tree\/v1.23.1\/src\/FetchAuthTokenInterface.php\" target=\"_blank\">Google\\Auth\\FetchAuthTokenInterface<\/a>","<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/CredentialsWrapper.html\" target=\"_blank\">Google\\ApiCore\\CredentialsWrapper<\/a>"],"optional":null,"nullable":null},{"name":"options.credentialsConfig\n","description":"<p>Options used to configure credentials, including auth token caching, for the client. For a full list of supporting configuration options, see <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/CredentialsWrapper.html\" target=\"_blank\">Google\\ApiCore\\CredentialsWrapper::build()<\/a> .<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.disableRetries\n","description":"<p>Determines whether or not retries defined by the client configuration should be disabled. Defaults to <code>false<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"options.clientConfig\n","description":"<p>Client method configuration, including retry settings. This option can be either a path to a JSON file, or a PHP array containing the decoded JSON data. By default this settings points to the default client config file, which is provided in the resources folder.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.transport\n","description":"<p>The transport used for executing network requests. May be either the string <code>rest<\/code> or <code>grpc<\/code>. Defaults to <code>grpc<\/code> if gRPC support is detected on the system. <em>Advanced usage<\/em>: Additionally, it is possible to pass in an already instantiated <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/Transport\/TransportInterface.html\" target=\"_blank\">Google\\ApiCore\\Transport\\TransportInterface<\/a> object. Note that when this object is provided, any settings in $transportConfig, and any $serviceAddress setting, will be ignored.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/Transport\/TransportInterface.html\" target=\"_blank\">Google\\ApiCore\\Transport\\TransportInterface<\/a>"],"optional":null,"nullable":null},{"name":"options.transportConfig\n","description":"<p>Configuration options that will be used to construct the transport. Options for each supported transport type should be passed in a key for that transport. For example: $transportConfig = [ 'grpc' =&gt; [...], 'rest' =&gt; [...], ]; See the <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/Transport\/GrpcTransport.html\" target=\"_blank\">Google\\ApiCore\\Transport\\GrpcTransport::build()<\/a> and <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/Transport\/RestTransport.html\" target=\"_blank\">Google\\ApiCore\\Transport\\RestTransport::build()<\/a> methods for the supported options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.clientCertSource\n","description":"<p>A callable which returns the client cert as a string. This can be used to provide a certificate and private key to the transport layer for mTLS.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.callable.php\" target=\"_blank\">callable<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ValidationException","description":""}],"returns":[]},{"id":"createIndex","type":"instance","name":"createIndex","source":"DatastoreAdmin\/src\/V1\/Gapic\/DatastoreAdminGapicClient.php#L380","description":"<p>Creates the specified index.<\/p>\n<p>A newly created index's initial state is <code>CREATING<\/code>. On completion of the\nreturned [google.longrunning.Operation][google.longrunning.Operation], the state will be <code>READY<\/code>.\nIf the index already exists, the call will return an <code>ALREADY_EXISTS<\/code>\nstatus.<\/p>\n<p>During index creation, the process could result in an error, in which\ncase the index will move to the <code>ERROR<\/code> state. The process can be recovered\nby fixing the data that caused the error, removing the index with\n[delete][google.datastore.admin.v1.DatastoreAdmin.DeleteIndex], then\nre-creating the index with [create]\n[google.datastore.admin.v1.DatastoreAdmin.CreateIndex].<\/p>\n<p>Indexes with a single property cannot be created.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$datastoreAdminClient = new DatastoreAdminClient();\ntry {\n    $operationResponse = $datastoreAdminClient-&gt;createIndex();\n    $operationResponse-&gt;pollUntilComplete();\n    if ($operationResponse-&gt;operationSucceeded()) {\n        $result = $operationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $operationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n    \/\/ Alternatively:\n    \/\/ start the operation, keep the operation name, and resume later\n    $operationResponse = $datastoreAdminClient-&gt;createIndex();\n    $operationName = $operationResponse-&gt;getName();\n    \/\/ ... do other work\n    $newOperationResponse = $datastoreAdminClient-&gt;resumeOperation($operationName, 'createIndex');\n    while (!$newOperationResponse-&gt;isDone()) {\n        \/\/ ... do other work\n        $newOperationResponse-&gt;reload();\n    }\n    if ($newOperationResponse-&gt;operationSucceeded()) {\n        $result = $newOperationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $newOperationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n} finally {\n    $datastoreAdminClient-&gt;close();\n}<\/code><\/pre>\n\nImplemented in <a data-custom-type=\"cloud-datastore-admin\/main\/datastoreadmin\/v1\/gapic\/datastoreadmingapicclient\">Google\\Cloud\\Datastore\\Admin\\V1\\Gapic\\DatastoreAdminGapicClient<\/a>","examples":[],"resources":[],"params":[{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.projectId\n","description":"<p>Project ID against which to make the request.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.index\n","description":"<p>The index to create. The name and state fields are output only and will be ignored. Single property indexes cannot be created or deleted.<\/p>","types":["<a data-custom-type=\"cloud-datastore-admin\/main\/datastoreadmin\/v1\/index\">Google\\Cloud\\Datastore\\Admin\\V1\\Index<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/OperationResponse.html\" target=\"_blank\">Google\\ApiCore\\OperationResponse<\/a>"],"description":""}]},{"id":"deleteIndex","type":"instance","name":"deleteIndex","source":"DatastoreAdmin\/src\/V1\/Gapic\/DatastoreAdminGapicClient.php#L471","description":"<p>Deletes an existing index.<\/p>\n<p>An index can only be deleted if it is in a <code>READY<\/code> or <code>ERROR<\/code> state. On\nsuccessful execution of the request, the index will be in a <code>DELETING<\/code>\n[state][google.datastore.admin.v1.Index.State]. And on completion of the\nreturned [google.longrunning.Operation][google.longrunning.Operation], the index will be removed.<\/p>\n<p>During index deletion, the process could result in an error, in which\ncase the index will move to the <code>ERROR<\/code> state. The process can be recovered\nby fixing the data that caused the error, followed by calling\n[delete][google.datastore.admin.v1.DatastoreAdmin.DeleteIndex] again.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$datastoreAdminClient = new DatastoreAdminClient();\ntry {\n    $operationResponse = $datastoreAdminClient-&gt;deleteIndex();\n    $operationResponse-&gt;pollUntilComplete();\n    if ($operationResponse-&gt;operationSucceeded()) {\n        $result = $operationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $operationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n    \/\/ Alternatively:\n    \/\/ start the operation, keep the operation name, and resume later\n    $operationResponse = $datastoreAdminClient-&gt;deleteIndex();\n    $operationName = $operationResponse-&gt;getName();\n    \/\/ ... do other work\n    $newOperationResponse = $datastoreAdminClient-&gt;resumeOperation($operationName, 'deleteIndex');\n    while (!$newOperationResponse-&gt;isDone()) {\n        \/\/ ... do other work\n        $newOperationResponse-&gt;reload();\n    }\n    if ($newOperationResponse-&gt;operationSucceeded()) {\n        $result = $newOperationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $newOperationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n} finally {\n    $datastoreAdminClient-&gt;close();\n}<\/code><\/pre>\n\nImplemented in <a data-custom-type=\"cloud-datastore-admin\/main\/datastoreadmin\/v1\/gapic\/datastoreadmingapicclient\">Google\\Cloud\\Datastore\\Admin\\V1\\Gapic\\DatastoreAdminGapicClient<\/a>","examples":[],"resources":[],"params":[{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.projectId\n","description":"<p>Project ID against which to make the request.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.indexId\n","description":"<p>The resource ID of the index to delete.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/OperationResponse.html\" target=\"_blank\">Google\\ApiCore\\OperationResponse<\/a>"],"description":""}]},{"id":"exportEntities","type":"instance","name":"exportEntities","source":"DatastoreAdmin\/src\/V1\/Gapic\/DatastoreAdminGapicClient.php#L582","description":"<p>Exports a copy of all or a subset of entities from Google Cloud Datastore\nto another storage system, such as Google Cloud Storage. Recent updates to\nentities may not be reflected in the export. The export occurs in the\nbackground and its progress can be monitored and managed via the\nOperation resource that is created. The output of an export may only be\nused once the associated operation is done. If an export operation is\ncancelled before completion it may leave partial data behind in Google\nCloud Storage.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$datastoreAdminClient = new DatastoreAdminClient();\ntry {\n    $projectId = 'project_id';\n    $outputUrlPrefix = 'output_url_prefix';\n    $operationResponse = $datastoreAdminClient-&gt;exportEntities($projectId, $outputUrlPrefix);\n    $operationResponse-&gt;pollUntilComplete();\n    if ($operationResponse-&gt;operationSucceeded()) {\n        $result = $operationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $operationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n    \/\/ Alternatively:\n    \/\/ start the operation, keep the operation name, and resume later\n    $operationResponse = $datastoreAdminClient-&gt;exportEntities($projectId, $outputUrlPrefix);\n    $operationName = $operationResponse-&gt;getName();\n    \/\/ ... do other work\n    $newOperationResponse = $datastoreAdminClient-&gt;resumeOperation($operationName, 'exportEntities');\n    while (!$newOperationResponse-&gt;isDone()) {\n        \/\/ ... do other work\n        $newOperationResponse-&gt;reload();\n    }\n    if ($newOperationResponse-&gt;operationSucceeded()) {\n        $result = $newOperationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $newOperationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n} finally {\n    $datastoreAdminClient-&gt;close();\n}<\/code><\/pre>\n\nImplemented in <a data-custom-type=\"cloud-datastore-admin\/main\/datastoreadmin\/v1\/gapic\/datastoreadmingapicclient\">Google\\Cloud\\Datastore\\Admin\\V1\\Gapic\\DatastoreAdminGapicClient<\/a>","examples":[],"resources":[],"params":[{"name":"projectId","description":"<p>Required. Project ID against which to make the request.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"outputUrlPrefix","description":"<p>Required. Location for the export metadata and data files.<\/p>\n<p>The full resource URL of the external storage location. Currently, only\nGoogle Cloud Storage is supported. So output_url_prefix should be of the\nform: <code>gs:\/\/BUCKET_NAME[\/NAMESPACE_PATH]<\/code>, where <code>BUCKET_NAME<\/code> is the\nname of the Cloud Storage bucket and <code>NAMESPACE_PATH<\/code> is an optional Cloud\nStorage namespace path (this is not a Cloud Datastore namespace). For more\ninformation about Cloud Storage namespace paths, see\n<a href=\"https:\/\/cloud.google.com\/storage\/docs\/naming#object-considerations\">Object name\nconsiderations<\/a>.<\/p>\n<p>The resulting files will be nested deeper than the specified URL prefix.\nThe final output URL will be provided in the\n[google.datastore.admin.v1.ExportEntitiesResponse.output_url][google.datastore.admin.v1.ExportEntitiesResponse.output_url] field. That\nvalue should be used for subsequent ImportEntities operations.<\/p>\n<p>By nesting the data files deeper, the same Cloud Storage bucket can be used\nin multiple ExportEntities operations without conflict.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.labels\n","description":"<p>Client-assigned labels.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.entityFilter\n","description":"<p>Description of what data from the project is included in the export.<\/p>","types":["<a data-custom-type=\"cloud-datastore-admin\/main\/datastoreadmin\/v1\/entityfilter\">Google\\Cloud\\Datastore\\Admin\\V1\\EntityFilter<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/OperationResponse.html\" target=\"_blank\">Google\\ApiCore\\OperationResponse<\/a>"],"description":""}]},{"id":"getIndex","type":"instance","name":"getIndex","source":"DatastoreAdmin\/src\/V1\/Gapic\/DatastoreAdminGapicClient.php#L644","description":"<p>Gets an index.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$datastoreAdminClient = new DatastoreAdminClient();\ntry {\n    $response = $datastoreAdminClient-&gt;getIndex();\n} finally {\n    $datastoreAdminClient-&gt;close();\n}<\/code><\/pre>\n\nImplemented in <a data-custom-type=\"cloud-datastore-admin\/main\/datastoreadmin\/v1\/gapic\/datastoreadmingapicclient\">Google\\Cloud\\Datastore\\Admin\\V1\\Gapic\\DatastoreAdminGapicClient<\/a>","examples":[],"resources":[],"params":[{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.projectId\n","description":"<p>Project ID against which to make the request.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.indexId\n","description":"<p>The resource ID of the index to get.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a data-custom-type=\"cloud-datastore-admin\/main\/datastoreadmin\/v1\/index\">Google\\Cloud\\Datastore\\Admin\\V1\\Index<\/a>"],"description":""}]},{"id":"importEntities","type":"instance","name":"importEntities","source":"DatastoreAdmin\/src\/V1\/Gapic\/DatastoreAdminGapicClient.php#L748","description":"<p>Imports entities into Google Cloud Datastore. Existing entities with the\nsame key are overwritten. The import occurs in the background and its\nprogress can be monitored and managed via the Operation resource that is\ncreated. If an ImportEntities operation is cancelled, it is possible\nthat a subset of the data has already been imported to Cloud Datastore.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$datastoreAdminClient = new DatastoreAdminClient();\ntry {\n    $projectId = 'project_id';\n    $inputUrl = 'input_url';\n    $operationResponse = $datastoreAdminClient-&gt;importEntities($projectId, $inputUrl);\n    $operationResponse-&gt;pollUntilComplete();\n    if ($operationResponse-&gt;operationSucceeded()) {\n        \/\/ operation succeeded and returns no value\n    } else {\n        $error = $operationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n    \/\/ Alternatively:\n    \/\/ start the operation, keep the operation name, and resume later\n    $operationResponse = $datastoreAdminClient-&gt;importEntities($projectId, $inputUrl);\n    $operationName = $operationResponse-&gt;getName();\n    \/\/ ... do other work\n    $newOperationResponse = $datastoreAdminClient-&gt;resumeOperation($operationName, 'importEntities');\n    while (!$newOperationResponse-&gt;isDone()) {\n        \/\/ ... do other work\n        $newOperationResponse-&gt;reload();\n    }\n    if ($newOperationResponse-&gt;operationSucceeded()) {\n        \/\/ operation succeeded and returns no value\n    } else {\n        $error = $newOperationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n} finally {\n    $datastoreAdminClient-&gt;close();\n}<\/code><\/pre>\n\nImplemented in <a data-custom-type=\"cloud-datastore-admin\/main\/datastoreadmin\/v1\/gapic\/datastoreadmingapicclient\">Google\\Cloud\\Datastore\\Admin\\V1\\Gapic\\DatastoreAdminGapicClient<\/a>","examples":[],"resources":[],"params":[{"name":"projectId","description":"<p>Required. Project ID against which to make the request.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"inputUrl","description":"<p>Required. The full resource URL of the external storage location. Currently, only\nGoogle Cloud Storage is supported. So input_url should be of the form:\n<code>gs:\/\/BUCKET_NAME[\/NAMESPACE_PATH]\/OVERALL_EXPORT_METADATA_FILE<\/code>, where\n<code>BUCKET_NAME<\/code> is the name of the Cloud Storage bucket, <code>NAMESPACE_PATH<\/code> is\nan optional Cloud Storage namespace path (this is not a Cloud Datastore\nnamespace), and <code>OVERALL_EXPORT_METADATA_FILE<\/code> is the metadata file written\nby the ExportEntities operation. For more information about Cloud Storage\nnamespace paths, see\n<a href=\"https:\/\/cloud.google.com\/storage\/docs\/naming#object-considerations\">Object name\nconsiderations<\/a>.<\/p>\n<p>For more information, see\n[google.datastore.admin.v1.ExportEntitiesResponse.output_url][google.datastore.admin.v1.ExportEntitiesResponse.output_url].<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.labels\n","description":"<p>Client-assigned labels.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.entityFilter\n","description":"<p>Optionally specify which kinds\/namespaces are to be imported. If provided, the list must be a subset of the EntityFilter used in creating the export, otherwise a FAILED_PRECONDITION error will be returned. If no filter is specified then all entities from the export are imported.<\/p>","types":["<a data-custom-type=\"cloud-datastore-admin\/main\/datastoreadmin\/v1\/entityfilter\">Google\\Cloud\\Datastore\\Admin\\V1\\EntityFilter<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/OperationResponse.html\" target=\"_blank\">Google\\ApiCore\\OperationResponse<\/a>"],"description":""}]},{"id":"listIndexes","type":"instance","name":"listIndexes","source":"DatastoreAdmin\/src\/V1\/Gapic\/DatastoreAdminGapicClient.php#L832","description":"<p>Lists the indexes that match the specified filters.  Datastore uses an\neventually consistent query to fetch the list of indexes and may\noccasionally return stale results.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$datastoreAdminClient = new DatastoreAdminClient();\ntry {\n    \/\/ Iterate over pages of elements\n    $pagedResponse = $datastoreAdminClient-&gt;listIndexes();\n    foreach ($pagedResponse-&gt;iteratePages() as $page) {\n        foreach ($page as $element) {\n            \/\/ doSomethingWith($element);\n        }\n    }\n    \/\/ Alternatively:\n    \/\/ Iterate through all elements\n    $pagedResponse = $datastoreAdminClient-&gt;listIndexes();\n    foreach ($pagedResponse-&gt;iterateAllElements() as $element) {\n        \/\/ doSomethingWith($element);\n    }\n} finally {\n    $datastoreAdminClient-&gt;close();\n}<\/code><\/pre>\n\nImplemented in <a data-custom-type=\"cloud-datastore-admin\/main\/datastoreadmin\/v1\/gapic\/datastoreadmingapicclient\">Google\\Cloud\\Datastore\\Admin\\V1\\Gapic\\DatastoreAdminGapicClient<\/a>","examples":[],"resources":[],"params":[{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.projectId\n","description":"<p>Project ID against which to make the request.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.filter","description":"<p>A filtering string.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.pageSize\n","description":"<p>The maximum number of resources contained in the underlying API response. The API may return fewer values in a page, even if there are additional values to be retrieved.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.pageToken\n","description":"<p>A page token is used to specify a page of values to be returned. If no page token is specified (the default), the first page of values will be returned. Any page token used here must have been generated by a previous call to the API.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/v1.17.0\/Google\/ApiCore\/PagedListResponse.html\" target=\"_blank\">Google\\ApiCore\\PagedListResponse<\/a>"],"description":""}]}]}