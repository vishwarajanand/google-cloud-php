{"id":"documentai\/v1\/documentschema\/metadata","type":"","title":"Google\\Cloud\\DocumentAI\\V1\\DocumentSchema\\Metadata","name":"Metadata","description":"<p>Metadata for global schema behavior.<\/p>\n<p>Generated from protobuf message <code>google.cloud.documentai.v1.DocumentSchema.Metadata<\/code><\/p>\n<p>Extends <a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/Message.php\" target=\"_blank\">Google\\Protobuf\\Internal\\Message<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"DocumentAi\/src\/V1\/DocumentSchema\/Metadata.php#L69","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"data","description":"<p>Optional. Data for populating the Message object.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"data.document_splitter\n","description":"<p>If true, a <code>document<\/code> entity type can be applied to subdocument ( splitting). Otherwise, it can only be applied to the entire document (classification).<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"data.document_allow_multiple_labels\n","description":"<p>If true, on a given page, there can be multiple <code>document<\/code> annotations covering it.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"data.prefixed_naming_on_properties\n","description":"<p>If set, all the nested entities must be prefixed with the parents.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"data.skip_naming_validation\n","description":"<p>If set, we will skip the naming format validation in the schema. So the string values in <code>DocumentSchema.EntityType.name<\/code> and <code>DocumentSchema.EntityType.Property.name<\/code> will not be checked.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"getDocumentSplitter","type":"instance","name":"getDocumentSplitter","source":"DocumentAi\/src\/V1\/DocumentSchema\/Metadata.php#L82","description":"<p>If true, a <code>document<\/code> entity type can be applied to subdocument (\nsplitting). Otherwise, it can only be applied to the entire document\n(classification).<\/p>\n<p>Generated from protobuf field <code>bool document_splitter = 1;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"setDocumentSplitter","type":"instance","name":"setDocumentSplitter","source":"DocumentAi\/src\/V1\/DocumentSchema\/Metadata.php#L96","description":"<p>If true, a <code>document<\/code> entity type can be applied to subdocument (\nsplitting). Otherwise, it can only be applied to the entire document\n(classification).<\/p>\n<p>Generated from protobuf field <code>bool document_splitter = 1;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>If true, a <code>document<\/code> entity type can be applied to subdocument (\nsplitting). Otherwise, it can only be applied to the entire document\n(classification).<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-document-ai\/main\/documentai\/v1\/documentschema\/metadata\">Google\\Cloud\\DocumentAI\\V1\\DocumentSchema\\Metadata<\/a>"],"description":""}]},{"id":"getDocumentAllowMultipleLabels","type":"instance","name":"getDocumentAllowMultipleLabels","source":"DocumentAi\/src\/V1\/DocumentSchema\/Metadata.php#L111","description":"<p>If true, on a given page, there can be multiple <code>document<\/code> annotations\ncovering it.<\/p>\n<p>Generated from protobuf field <code>bool document_allow_multiple_labels = 2;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"setDocumentAllowMultipleLabels","type":"instance","name":"setDocumentAllowMultipleLabels","source":"DocumentAi\/src\/V1\/DocumentSchema\/Metadata.php#L124","description":"<p>If true, on a given page, there can be multiple <code>document<\/code> annotations\ncovering it.<\/p>\n<p>Generated from protobuf field <code>bool document_allow_multiple_labels = 2;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>If true, on a given page, there can be multiple <code>document<\/code> annotations\ncovering it.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-document-ai\/main\/documentai\/v1\/documentschema\/metadata\">Google\\Cloud\\DocumentAI\\V1\\DocumentSchema\\Metadata<\/a>"],"description":""}]},{"id":"getPrefixedNamingOnProperties","type":"instance","name":"getPrefixedNamingOnProperties","source":"DocumentAi\/src\/V1\/DocumentSchema\/Metadata.php#L138","description":"<p>If set, all the nested entities must be prefixed with the parents.<\/p>\n<p>Generated from protobuf field <code>bool prefixed_naming_on_properties = 6;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"setPrefixedNamingOnProperties","type":"instance","name":"setPrefixedNamingOnProperties","source":"DocumentAi\/src\/V1\/DocumentSchema\/Metadata.php#L150","description":"<p>If set, all the nested entities must be prefixed with the parents.<\/p>\n<p>Generated from protobuf field <code>bool prefixed_naming_on_properties = 6;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>If set, all the nested entities must be prefixed with the parents.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-document-ai\/main\/documentai\/v1\/documentschema\/metadata\">Google\\Cloud\\DocumentAI\\V1\\DocumentSchema\\Metadata<\/a>"],"description":""}]},{"id":"getSkipNamingValidation","type":"instance","name":"getSkipNamingValidation","source":"DocumentAi\/src\/V1\/DocumentSchema\/Metadata.php#L166","description":"<p>If set, we will skip the naming format validation in the schema. So the\nstring values in <code>DocumentSchema.EntityType.name<\/code> and\n<code>DocumentSchema.EntityType.Property.name<\/code> will not be checked.<\/p>\n<p>Generated from protobuf field <code>bool skip_naming_validation = 7;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"setSkipNamingValidation","type":"instance","name":"setSkipNamingValidation","source":"DocumentAi\/src\/V1\/DocumentSchema\/Metadata.php#L180","description":"<p>If set, we will skip the naming format validation in the schema. So the\nstring values in <code>DocumentSchema.EntityType.name<\/code> and\n<code>DocumentSchema.EntityType.Property.name<\/code> will not be checked.<\/p>\n<p>Generated from protobuf field <code>bool skip_naming_validation = 7;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>If set, we will skip the naming format validation in the schema. So the\nstring values in <code>DocumentSchema.EntityType.name<\/code> and\n<code>DocumentSchema.EntityType.Property.name<\/code> will not be checked.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-document-ai\/main\/documentai\/v1\/documentschema\/metadata\">Google\\Cloud\\DocumentAI\\V1\\DocumentSchema\\Metadata<\/a>"],"description":""}]}]}