{"id":"documentai\/v1\/documentschema\/entitytype","type":"","title":"Google\\Cloud\\DocumentAI\\V1\\DocumentSchema\\EntityType","name":"EntityType","description":"<p>EntityType is the wrapper of a label of the corresponding model with\ndetailed attributes and limitations for entity-based processors. Multiple\ntypes can also compose a dependency tree to represent nested types.<\/p>\n<p>Generated from protobuf message <code>google.cloud.documentai.v1.DocumentSchema.EntityType<\/code><\/p>\n<p>Extends <a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/Message.php\" target=\"_blank\">Google\\Protobuf\\Internal\\Message<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"DocumentAi\/src\/V1\/DocumentSchema\/EntityType.php#L94","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"data","description":"<p>Optional. Data for populating the Message object.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"data.enum_values\n","description":"<p>If specified, lists all the possible values for this entity. This should not be more than a handful of values. If the number of values is &gt;10 or could change frequently use the <code>EntityType.value_ontology<\/code> field and specify a list of all possible values in a value ontology file.<\/p>","types":["<a data-custom-type=\"cloud-document-ai\/main\/documentai\/v1\/documentschema\/entitytype\/enumvalues\">Google\\Cloud\\DocumentAI\\V1\\DocumentSchema\\EntityType\\EnumValues<\/a>"],"optional":null,"nullable":null},{"name":"data.display_name\n","description":"<p>User defined name for the type.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"data.name\n","description":"<p>Name of the type. It must be unique within the schema file and cannot be a 'Common Type'. Besides that we use the following naming conventions: - <em>use <code>snake_casing<\/code><\/em> - name matching is case-insensitive - Maximum 64 characters. - Must start with a letter. - Allowed characters: ASCII letters <code>[a-z0-9_-]<\/code>. (For backward compatibility internal infrastructure and tooling can handle any ascii character) - The <code>\/<\/code> is sometimes used to denote a property of a type. For example <code>line_item\/amount<\/code>. This convention is deprecated, but will still be honored for backward compatibility.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"data.base_types\n","description":"<p>The entity type that this type is derived from. For now, one and only one should be set.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string[]<\/a>","<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/RepeatedField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\RepeatedField<\/a>"],"optional":null,"nullable":null},{"name":"data.properties\n","description":"<p>Describing the nested structure, or composition of an entity.<\/p>","types":["<a data-custom-type=\"cloud-document-ai\/main\/documentai\/v1\/documentschema\/entitytype\/property\">Google\\Cloud\\DocumentAI\\V1\\DocumentSchema\\EntityType\\Property[]<\/a>","<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/RepeatedField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\RepeatedField<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"getEnumValues","type":"instance","name":"getEnumValues","source":"DocumentAi\/src\/V1\/DocumentSchema\/EntityType.php#L109","description":"<p>If specified, lists all the possible values for this entity.  This\nshould not be more than a handful of values.  If the number of values\nis &gt;10 or could change frequently use the <code>EntityType.value_ontology<\/code>\nfield and specify a list of all possible values in a value ontology\nfile.<\/p>\n<p>Generated from protobuf field <code>.google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues enum_values = 14;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-document-ai\/main\/documentai\/v1\/documentschema\/entitytype\/enumvalues\">Google\\Cloud\\DocumentAI\\V1\\DocumentSchema\\EntityType\\EnumValues<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"setEnumValues","type":"instance","name":"setEnumValues","source":"DocumentAi\/src\/V1\/DocumentSchema\/EntityType.php#L130","description":"<p>If specified, lists all the possible values for this entity.  This\nshould not be more than a handful of values.  If the number of values\nis &gt;10 or could change frequently use the <code>EntityType.value_ontology<\/code>\nfield and specify a list of all possible values in a value ontology\nfile.<\/p>\n<p>Generated from protobuf field <code>.google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues enum_values = 14;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>If specified, lists all the possible values for this entity.  This\nshould not be more than a handful of values.  If the number of values\nis &gt;10 or could change frequently use the <code>EntityType.value_ontology<\/code>\nfield and specify a list of all possible values in a value ontology\nfile.<\/p>\n","types":["<a data-custom-type=\"cloud-document-ai\/main\/documentai\/v1\/documentschema\/entitytype\/enumvalues\">Google\\Cloud\\DocumentAI\\V1\\DocumentSchema\\EntityType\\EnumValues<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-document-ai\/main\/documentai\/v1\/documentschema\/entitytype\">Google\\Cloud\\DocumentAI\\V1\\DocumentSchema\\EntityType<\/a>"],"description":""}]},{"id":"getDisplayName","type":"instance","name":"getDisplayName","source":"DocumentAi\/src\/V1\/DocumentSchema\/EntityType.php#L144","description":"<p>User defined name for the type.<\/p>\n<p>Generated from protobuf field <code>string display_name = 13;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setDisplayName","type":"instance","name":"setDisplayName","source":"DocumentAi\/src\/V1\/DocumentSchema\/EntityType.php#L156","description":"<p>User defined name for the type.<\/p>\n<p>Generated from protobuf field <code>string display_name = 13;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>User defined name for the type.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-document-ai\/main\/documentai\/v1\/documentschema\/entitytype\">Google\\Cloud\\DocumentAI\\V1\\DocumentSchema\\EntityType<\/a>"],"description":""}]},{"id":"getName","type":"instance","name":"getName","source":"DocumentAi\/src\/V1\/DocumentSchema\/EntityType.php#L182","description":"<p>Name of the type. It must be unique within the schema file and\ncannot be a 'Common Type'.  Besides that we use the following naming\nconventions:<\/p>\n<ul>\n<li>\n<p><em>use <code>snake_casing<\/code><\/em><\/p>\n<\/li>\n<li>\n<p>name matching is case-insensitive<\/p>\n<\/li>\n<li>\n<p>Maximum 64 characters.<\/p>\n<\/li>\n<li>\n<p>Must start with a letter.<\/p>\n<\/li>\n<li>\n<p>Allowed characters: ASCII letters <code>[a-z0-9_-]<\/code>.  (For backward\ncompatibility internal infrastructure and tooling can handle any ascii\ncharacter)<\/p>\n<\/li>\n<li>\n<p>The <code>\/<\/code> is sometimes used to denote a property of a type.  For example\n<code>line_item\/amount<\/code>.  This convention is deprecated, but will still be\nhonored for backward compatibility.<\/p>\n<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>string name = 1;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"setName","type":"instance","name":"setName","source":"DocumentAi\/src\/V1\/DocumentSchema\/EntityType.php#L206","description":"<p>Name of the type. It must be unique within the schema file and\ncannot be a 'Common Type'.  Besides that we use the following naming\nconventions:<\/p>\n<ul>\n<li>\n<p><em>use <code>snake_casing<\/code><\/em><\/p>\n<\/li>\n<li>\n<p>name matching is case-insensitive<\/p>\n<\/li>\n<li>\n<p>Maximum 64 characters.<\/p>\n<\/li>\n<li>\n<p>Must start with a letter.<\/p>\n<\/li>\n<li>\n<p>Allowed characters: ASCII letters <code>[a-z0-9_-]<\/code>.  (For backward\ncompatibility internal infrastructure and tooling can handle any ascii\ncharacter)<\/p>\n<\/li>\n<li>\n<p>The <code>\/<\/code> is sometimes used to denote a property of a type.  For example\n<code>line_item\/amount<\/code>.  This convention is deprecated, but will still be\nhonored for backward compatibility.<\/p>\n<\/li>\n<\/ul>\n<p>Generated from protobuf field <code>string name = 1;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Name of the type. It must be unique within the schema file and\ncannot be a 'Common Type'.  Besides that we use the following naming\nconventions:<\/p>\n<ul>\n<li>\n<p><em>use <code>snake_casing<\/code><\/em><\/p>\n<\/li>\n<li>\n<p>name matching is case-insensitive<\/p>\n<\/li>\n<li>\n<p>Maximum 64 characters.<\/p>\n<\/li>\n<li>\n<p>Must start with a letter.<\/p>\n<\/li>\n<li>\n<p>Allowed characters: ASCII letters <code>[a-z0-9_-]<\/code>.  (For backward\ncompatibility internal infrastructure and tooling can handle any ascii\ncharacter)<\/p>\n<\/li>\n<li>\n<p>The <code>\/<\/code> is sometimes used to denote a property of a type.  For example\n<code>line_item\/amount<\/code>.  This convention is deprecated, but will still be\nhonored for backward compatibility.<\/p>\n<\/li>\n<\/ul>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-document-ai\/main\/documentai\/v1\/documentschema\/entitytype\">Google\\Cloud\\DocumentAI\\V1\\DocumentSchema\\EntityType<\/a>"],"description":""}]},{"id":"getBaseTypes","type":"instance","name":"getBaseTypes","source":"DocumentAi\/src\/V1\/DocumentSchema\/EntityType.php#L221","description":"<p>The entity type that this type is derived from.  For now, one and only\none should be set.<\/p>\n<p>Generated from protobuf field <code>repeated string base_types = 2;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/RepeatedField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\RepeatedField<\/a>"],"description":""}]},{"id":"setBaseTypes","type":"instance","name":"setBaseTypes","source":"DocumentAi\/src\/V1\/DocumentSchema\/EntityType.php#L234","description":"<p>The entity type that this type is derived from.  For now, one and only\none should be set.<\/p>\n<p>Generated from protobuf field <code>repeated string base_types = 2;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The entity type that this type is derived from.  For now, one and only\none should be set.<\/p>\n","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string[]<\/a>","<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/RepeatedField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\RepeatedField<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-document-ai\/main\/documentai\/v1\/documentschema\/entitytype\">Google\\Cloud\\DocumentAI\\V1\\DocumentSchema\\EntityType<\/a>"],"description":""}]},{"id":"getProperties","type":"instance","name":"getProperties","source":"DocumentAi\/src\/V1\/DocumentSchema\/EntityType.php#L248","description":"<p>Describing the nested structure, or composition of an entity.<\/p>\n<p>Generated from protobuf field <code>repeated .google.cloud.documentai.v1.DocumentSchema.EntityType.Property properties = 6;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/RepeatedField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\RepeatedField<\/a>"],"description":""}]},{"id":"setProperties","type":"instance","name":"setProperties","source":"DocumentAi\/src\/V1\/DocumentSchema\/EntityType.php#L260","description":"<p>Describing the nested structure, or composition of an entity.<\/p>\n<p>Generated from protobuf field <code>repeated .google.cloud.documentai.v1.DocumentSchema.EntityType.Property properties = 6;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>Describing the nested structure, or composition of an entity.<\/p>\n","types":["<a data-custom-type=\"cloud-document-ai\/main\/documentai\/v1\/documentschema\/entitytype\/property\">Google\\Cloud\\DocumentAI\\V1\\DocumentSchema\\EntityType\\Property[]<\/a>","<a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/RepeatedField.php\" target=\"_blank\">Google\\Protobuf\\Internal\\RepeatedField<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-document-ai\/main\/documentai\/v1\/documentschema\/entitytype\">Google\\Cloud\\DocumentAI\\V1\\DocumentSchema\\EntityType<\/a>"],"description":""}]},{"id":"getValueSource","type":"instance","name":"getValueSource","source":"DocumentAi\/src\/V1\/DocumentSchema\/EntityType.php#L271","description":"","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]}]}