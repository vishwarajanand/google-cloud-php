{"id":"automl\/v1beta1\/batchpredictinputconfig","type":"","title":"Google\\Cloud\\AutoMl\\V1beta1\\BatchPredictInputConfig","name":"BatchPredictInputConfig","description":"<p>Input configuration for BatchPredict Action.<\/p>\n<p>The format of input depends on the ML problem of the model used for\nprediction. As input source the\n[gcs_source][google.cloud.automl.v1beta1.InputConfig.gcs_source]\nis expected, unless specified otherwise.\nThe formats are represented in EBNF with commas being literal and with\nnon-terminal symbols defined near the end of this comment. The formats\nare:<\/p>\n<ul>\n<li>For Image Classification:\nCSV file(s) with each line having just a single column:\nGCS_FILE_PATH\nwhich leads to image of up to 30MB in size. Supported\nextensions: .JPEG, .GIF, .PNG. This path is treated as the ID in\nthe Batch predict output.\nThree sample rows:\ngs:\/\/folder\/image1.jpeg\ngs:\/\/folder\/image2.gif\ngs:\/\/folder\/image3.png<\/li>\n<li>For Image Object Detection:\nCSV file(s) with each line having just a single column:\nGCS_FILE_PATH\nwhich leads to image of up to 30MB in size. Supported\nextensions: .JPEG, .GIF, .PNG. This path is treated as the ID in\nthe Batch predict output.\nThree sample rows:\ngs:\/\/folder\/image1.jpeg\ngs:\/\/folder\/image2.gif\ngs:\/\/folder\/image3.png<\/li>\n<li>For Video Classification:\nCSV file(s) with each line in format:\nGCS_FILE_PATH,TIME_SEGMENT_START,TIME_SEGMENT_END\nGCS_FILE_PATH leads to video of up to 50GB in size and up to 3h\nduration. Supported extensions: .MOV, .MPEG4, .MP4, .AVI.\nTIME_SEGMENT_START and TIME_SEGMENT_END must be within the\nlength of the video, and end has to be after the start.\nThree sample rows:\ngs:\/\/folder\/video1.mp4,10,40\ngs:\/\/folder\/video1.mp4,20,60\ngs:\/\/folder\/vid2.mov,0,inf<\/li>\n<li>For Video Object Tracking:\nCSV file(s) with each line in format:\nGCS_FILE_PATH,TIME_SEGMENT_START,TIME_SEGMENT_END\nGCS_FILE_PATH leads to video of up to 50GB in size and up to 3h\nduration. Supported extensions: .MOV, .MPEG4, .MP4, .AVI.\nTIME_SEGMENT_START and TIME_SEGMENT_END must be within the\nlength of the video, and end has to be after the start.\nThree sample rows:\ngs:\/\/folder\/video1.mp4,10,240\ngs:\/\/folder\/video1.mp4,300,360\ngs:\/\/folder\/vid2.mov,0,inf<\/li>\n<li>For Text Classification:\nCSV file(s) with each line having just a single column:\nGCS_FILE_PATH | TEXT_SNIPPET\nAny given text file can have size upto 128kB.\nAny given text snippet content must have 60,000 characters or less.\nThree sample rows:\ngs:\/\/folder\/text1.txt\n&quot;Some text content to predict&quot;\ngs:\/\/folder\/text3.pdf\nSupported file extensions: .txt, .pdf<\/li>\n<li>For Text Sentiment:\nCSV file(s) with each line having just a single column:\nGCS_FILE_PATH | TEXT_SNIPPET\nAny given text file can have size upto 128kB.\nAny given text snippet content must have 500 characters or less.\nThree sample rows:\ngs:\/\/folder\/text1.txt\n&quot;Some text content to predict&quot;\ngs:\/\/folder\/text3.pdf\nSupported file extensions: .txt, .pdf<\/li>\n<li>For Text Extraction\n.JSONL (i.e. JSON Lines) file(s) which either provide text in-line or\nas documents (for a single BatchPredict call only one of the these\nformats may be used).\nThe in-line .JSONL file(s) contain per line a proto that\nwraps a temporary user-assigned TextSnippet ID (string up to 2000\ncharacters long) called &quot;id&quot;, a TextSnippet proto (in\njson representation) and zero or more TextFeature protos. Any given\ntext snippet content must have 30,000 characters or less, and also\nbe UTF-8 NFC encoded (ASCII already is). The IDs provided should be\nunique.\nThe document .JSONL file(s) contain, per line, a proto that wraps a\nDocument proto with input_config set. Only PDF documents are\nsupported now, and each document must be up to 2MB large.\nAny given .JSONL file must be 100MB or smaller, and no more than 20\nfiles may be given.\nSample in-line JSON Lines file (presented here with artificial line\nbreaks, but the only actual line break is denoted by \\n):\n{\n&quot;id&quot;: &quot;my_first_id&quot;,\n&quot;text_snippet&quot;: { &quot;content&quot;: &quot;dog car cat&quot;},\n&quot;text_features&quot;: [\n{\n&quot;text_segment&quot;: {&quot;start_offset&quot;: 4, &quot;end_offset&quot;: 6},\n&quot;structural_type&quot;: PARAGRAPH,\n&quot;bounding_poly&quot;: {\n&quot;normalized_vertices&quot;: [\n{&quot;x&quot;: 0.1, &quot;y&quot;: 0.1},\n{&quot;x&quot;: 0.1, &quot;y&quot;: 0.3},\n{&quot;x&quot;: 0.3, &quot;y&quot;: 0.3},\n{&quot;x&quot;: 0.3, &quot;y&quot;: 0.1},\n]\n},\n}\n],\n}\\n\n{\n&quot;id&quot;: &quot;2&quot;,\n&quot;text_snippet&quot;: {\n&quot;content&quot;: &quot;An elaborate content&quot;,\n&quot;mime_type&quot;: &quot;text\/plain&quot;\n}\n}\nSample document JSON Lines file (presented here with artificial line\nbreaks, but the only actual line break is denoted by \\n).:\n{\n&quot;document&quot;: {\n&quot;input_config&quot;: {\n&quot;gcs_source&quot;: { &quot;input_uris&quot;: [ &quot;gs:\/\/folder\/document1.pdf&quot; ]\n}\n}\n}\n}\\n\n{\n&quot;document&quot;: {\n&quot;input_config&quot;: {\n&quot;gcs_source&quot;: { &quot;input_uris&quot;: [ &quot;gs:\/\/folder\/document2.pdf&quot; ]\n}\n}\n}\n}<\/li>\n<li>For Tables:\nEither\n[gcs_source][google.cloud.automl.v1beta1.InputConfig.gcs_source] or\n[bigquery_source][google.cloud.automl.v1beta1.InputConfig.bigquery_source].\nGCS case:\nCSV file(s), each by itself 10GB or smaller and total size must be\n100GB or smaller, where first file must have a header containing\ncolumn names. If the first row of a subsequent file is the same as\nthe header, then it is also treated as a header. All other rows\ncontain values for the corresponding columns.\nThe column names must contain the model's\n[input_feature_column_specs'][google.cloud.automl.v1beta1.TablesModelMetadata.input_feature_column_specs]\n[display_name-s][google.cloud.automl.v1beta1.ColumnSpec.display_name]\n(order doesn't matter). The columns corresponding to the model's\ninput feature column specs must contain values compatible with the\ncolumn spec's data types. Prediction on all the rows, i.e. the CSV\nlines, will be attempted. For FORECASTING\n[prediction_type][google.cloud.automl.v1beta1.TablesModelMetadata.prediction_type]:\nall columns having\n[TIME_SERIES_AVAILABLE_PAST_ONLY][google.cloud.automl.v1beta1.ColumnSpec.ForecastingMetadata.ColumnType]\ntype will be ignored.\nFirst three sample rows of a CSV file:\n&quot;First Name&quot;,&quot;Last Name&quot;,&quot;Dob&quot;,&quot;Addresses&quot;\n&quot;John&quot;,&quot;Doe&quot;,&quot;1968-01-22&quot;,&quot;[{&quot;status&quot;:&quot;current&quot;,&quot;address&quot;:&quot;123_First_Avenue&quot;,&quot;city&quot;:&quot;Seattle&quot;,&quot;state&quot;:&quot;WA&quot;,&quot;zip&quot;:&quot;11111&quot;,&quot;numberOfYears&quot;:&quot;1&quot;},{&quot;status&quot;:&quot;previous&quot;,&quot;address&quot;:&quot;456_Main_Street&quot;,&quot;city&quot;:&quot;Portland&quot;,&quot;state&quot;:&quot;OR&quot;,&quot;zip&quot;:&quot;22222&quot;,&quot;numberOfYears&quot;:&quot;5&quot;}]&quot;\n&quot;Jane&quot;,&quot;Doe&quot;,&quot;1980-10-16&quot;,&quot;[{&quot;status&quot;:&quot;current&quot;,&quot;address&quot;:&quot;789_Any_Avenue&quot;,&quot;city&quot;:&quot;Albany&quot;,&quot;state&quot;:&quot;NY&quot;,&quot;zip&quot;:&quot;33333&quot;,&quot;numberOfYears&quot;:&quot;2&quot;},{&quot;status&quot;:&quot;previous&quot;,&quot;address&quot;:&quot;321_Main_Street&quot;,&quot;city&quot;:&quot;Hoboken&quot;,&quot;state&quot;:&quot;NJ&quot;,&quot;zip&quot;:&quot;44444&quot;,&quot;numberOfYears&quot;:&quot;3&quot;}]}\nBigQuery case:\nAn URI of a BigQuery table. The user data size of the BigQuery\ntable must be 100GB or smaller.\nThe column names must contain the model's\n[input_feature_column_specs'][google.cloud.automl.v1beta1.TablesModelMetadata.input_feature_column_specs]\n[display_name-s][google.cloud.automl.v1beta1.ColumnSpec.display_name]\n(order doesn't matter). The columns corresponding to the model's\ninput feature column specs must contain values compatible with the\ncolumn spec's data types. Prediction on all the rows of the table\nwill be attempted. For FORECASTING\n[prediction_type][google.cloud.automl.v1beta1.TablesModelMetadata.prediction_type]:\nall columns having\n[TIME_SERIES_AVAILABLE_PAST_ONLY][google.cloud.automl.v1beta1.ColumnSpec.ForecastingMetadata.ColumnType]\ntype will be ignored.\nDefinitions:\nGCS_FILE_PATH = A path to file on GCS, e.g. &quot;gs:\/\/folder\/video.avi&quot;.\nTEXT_SNIPPET = A content of a text snippet, UTF-8 encoded, enclosed within\ndouble quotes (&quot;&quot;)\nTIME_SEGMENT_START = TIME_OFFSET\nExpresses a beginning, inclusive, of a time segment\nwithin an\nexample that has a time dimension (e.g. video).\nTIME_SEGMENT_END = TIME_OFFSET\nExpresses an end, exclusive, of a time segment within\nan example that has a time dimension (e.g. video).\nTIME_OFFSET = A number of seconds as measured from the start of an\nexample (e.g. video). Fractions are allowed, up to a\nmicrosecond precision. &quot;inf&quot; is allowed and it means the end\nof the example.\nErrors:\nIf any of the provided CSV files can't be parsed or if more than certain\npercent of CSV rows cannot be processed then the operation fails and\nprediction does not happen. Regardless of overall success or failure the\nper-row failures, up to a certain count cap, will be listed in\nOperation.metadata.partial_failures.<\/li>\n<\/ul>\n<p>Generated from protobuf message <code>google.cloud.automl.v1beta1.BatchPredictInputConfig<\/code><\/p>\n<p>Extends <a href=\"https:\/\/github.com\/protocolbuffers\/protobuf-php\/tree\/v3.21.9\/src\/Google\/Protobuf\/Internal\/Message.php\" target=\"_blank\">Google\\Protobuf\\Internal\\Message<\/a><\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"AutoMl\/src\/V1beta1\/BatchPredictInputConfig.php#L222","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"data","description":"<p>Optional. Data for populating the Message object.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"data.gcs_source\n","description":"<p>The Google Cloud Storage location for the input content.<\/p>","types":["<a data-custom-type=\"cloud-automl\/main\/automl\/v1beta1\/gcssource\">Google\\Cloud\\AutoMl\\V1beta1\\GcsSource<\/a>"],"optional":null,"nullable":null},{"name":"data.bigquery_source\n","description":"<p>The BigQuery location for the input content.<\/p>","types":["<a data-custom-type=\"cloud-automl\/main\/automl\/v1beta1\/bigquerysource\">Google\\Cloud\\AutoMl\\V1beta1\\BigQuerySource<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"getGcsSource","type":"instance","name":"getGcsSource","source":"AutoMl\/src\/V1beta1\/BatchPredictInputConfig.php#L233","description":"<p>The Google Cloud Storage location for the input content.<\/p>\n<p>Generated from protobuf field <code>.google.cloud.automl.v1beta1.GcsSource gcs_source = 1;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-automl\/main\/automl\/v1beta1\/gcssource\">Google\\Cloud\\AutoMl\\V1beta1\\GcsSource<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"setGcsSource","type":"instance","name":"setGcsSource","source":"AutoMl\/src\/V1beta1\/BatchPredictInputConfig.php#L250","description":"<p>The Google Cloud Storage location for the input content.<\/p>\n<p>Generated from protobuf field <code>.google.cloud.automl.v1beta1.GcsSource gcs_source = 1;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The Google Cloud Storage location for the input content.<\/p>\n","types":["<a data-custom-type=\"cloud-automl\/main\/automl\/v1beta1\/gcssource\">Google\\Cloud\\AutoMl\\V1beta1\\GcsSource<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-automl\/main\/automl\/v1beta1\/batchpredictinputconfig\">Google\\Cloud\\AutoMl\\V1beta1\\BatchPredictInputConfig<\/a>"],"description":""}]},{"id":"getBigquerySource","type":"instance","name":"getBigquerySource","source":"AutoMl\/src\/V1beta1\/BatchPredictInputConfig.php#L264","description":"<p>The BigQuery location for the input content.<\/p>\n<p>Generated from protobuf field <code>.google.cloud.automl.v1beta1.BigQuerySource bigquery_source = 2;<\/code><\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-automl\/main\/automl\/v1beta1\/bigquerysource\">Google\\Cloud\\AutoMl\\V1beta1\\BigQuerySource<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"setBigquerySource","type":"instance","name":"setBigquerySource","source":"AutoMl\/src\/V1beta1\/BatchPredictInputConfig.php#L281","description":"<p>The BigQuery location for the input content.<\/p>\n<p>Generated from protobuf field <code>.google.cloud.automl.v1beta1.BigQuerySource bigquery_source = 2;<\/code><\/p>","examples":[],"resources":[],"params":[{"name":"var","description":"<p>The BigQuery location for the input content.<\/p>\n","types":["<a data-custom-type=\"cloud-automl\/main\/automl\/v1beta1\/bigquerysource\">Google\\Cloud\\AutoMl\\V1beta1\\BigQuerySource<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-automl\/main\/automl\/v1beta1\/batchpredictinputconfig\">Google\\Cloud\\AutoMl\\V1beta1\\BatchPredictInputConfig<\/a>"],"description":""}]},{"id":"getSource","type":"instance","name":"getSource","source":"AutoMl\/src\/V1beta1\/BatchPredictInputConfig.php#L292","description":"","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]}]}